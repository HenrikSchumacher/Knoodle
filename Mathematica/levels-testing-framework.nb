(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    395817,       7305]
NotebookOptionsPosition[    388078,       7181]
NotebookOutlinePosition[    388505,       7198]
CellTagsIndexPosition[    388462,       7195]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Levels variant testing harness.", "Title",
 CellChangeTimes->{{3.939284862321102*^9, 
  3.939284868967587*^9}},ExpressionUUID->"be07c95f-9da4-4761-859e-\
685d5a5f65e7"],

Cell["\<\
--Jason, October 2024. The purpose of this notebook is to provide a testing \
framework for different versions of levels. This requires a supply of input \
examples. \
\>", "Text",
 CellChangeTimes->{{3.939284873419849*^9, 
  3.93928493547698*^9}},ExpressionUUID->"3ae5990f-abbb-46d7-814b-\
48c2ecddfb37"],

Cell[BoxData[
 RowBox[{"Exit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.939285244326817*^9, 3.93928524538501*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"6f391f2b-c0c6-4a35-a8eb-83254acce406"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fromScratch", "=", "True"}], ";"}]], "Input",
 CellChangeTimes->{{3.939285248747191*^9, 3.9392852517611723`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"73354e04-0eb4-4f06-9ef8-fe090bc01b49"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{"fromScratch", ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Needs", "[", "\"\<PM`\>\"", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"UninstallPackages", "[", 
     RowBox[{"$PM", ",", 
      RowBox[{"{", "\"\<KnotToolsLink\>\"", "}"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ClearAllCache", "[", "$PM", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"LoadPackages", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<Geometries\>\"", ",", "\"\<KnotToolsLink\>\""}], "}"}], 
     "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Needs", "[", "\"\<PM`\>\"", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"LoadPackages", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<Geometries\>\"", ",", "\"\<KnotToolsLink\>\""}], "}"}], 
     "]"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{
  3.9381769596596327`*^9, {3.939285253159359*^9, 3.939285285300148*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"65b5843a-35c7-4fab-b77e-55cef075dd76"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Deleting package \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"KnotToolsLink\"\>",
    StripOnInput->False,
    FontWeight->Bold], "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm["Deleting package ", 
   Style["KnotToolsLink", Bold], "."],
  Editable->False]], "Print",
 CellChangeTimes->{3.93928529403426*^9, 3.9392858982520227`*^9, 
  3.939286080117441*^9, 3.939286188335631*^9, 3.939288623025384*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"fa3ba42b-b0f1-4562-b0b4-07ecbbb5bd82"],

Cell[BoxData["\<\"  Deleting installation path.\"\>"], "Print",
 CellChangeTimes->{3.93928529403426*^9, 3.9392858982520227`*^9, 
  3.939286080117441*^9, 3.939286188335631*^9, 3.9392886230262547`*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"e9d60832-4897-4e6d-88d5-5de7ebbe718b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  Deleting files \"\>", "\[InvisibleSpace]", 
   RowBox[{
   "{", "\<\"/Users/jasoncantarella/PackageSources_2024-10-29T11-34-54/\
PackageSources/KnotToolsLink/PlanarDiagramObject_Library.nb\"\>", "}"}]}],
  SequenceForm[
  "  Deleting files ", {
   "/Users/jasoncantarella/PackageSources_2024-10-29T11-34-54/PackageSources/\
KnotToolsLink/PlanarDiagramObject_Library.nb"}],
  Editable->False]], "Print",
 CellChangeTimes->{3.93928529403426*^9, 3.9392858982520227`*^9, 
  3.939286080117441*^9, 3.939286188335631*^9, 3.9392886230312567`*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"18de9d59-a5d7-4459-9699-7fbe0b03c6ef"],

Cell[BoxData["\<\"WARNING: LTemplate has not yet been tested with Mathematica \
14.1.0.\\nThe latest supported Mathematica version is 12.3.1.\\nPlease report \
any issues you find to szhorvat at gmail.com.\"\>"], "Print",
 CellChangeTimes->{3.93928529403426*^9, 3.9392858982520227`*^9, 
  3.939286080117441*^9, 3.939286188335631*^9, 3.9392886236648207`*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"e51e7e26-0c28-4608-8545-59c6776e2d59"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Updating package \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"KnotToolsLink\"\>",
    StripOnInput->False,
    FontWeight->Bold], "\[InvisibleSpace]", "\<\"...\"\>"}],
  SequenceForm["Updating package ", 
   Style["KnotToolsLink", Bold], "..."],
  Editable->False]], "Print",
 CellChangeTimes->{3.93928529403426*^9, 3.9392858982520227`*^9, 
  3.939286080117441*^9, 3.939286188335631*^9, 3.939288624190085*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"d097df6a-bea4-465c-b767-cfb40e55558b"],

Cell[BoxData["\<\"/Users/jasoncantarella/PackageSources_2024-10-29T11-34-54/\
PackageSources/KnotToolsLink/LibrarySources/PlanarDiagramObject/\"\>"], \
"Print",
 CellChangeTimes->{3.93928529403426*^9, 3.9392858982520227`*^9, 
  3.939286080117441*^9, 3.939286188335631*^9, 3.939288624203602*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"5edd7ac2-709c-49d6-b694-6710df24e075"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Exporting library \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"PlanarDiagramObject\"\>",
    StripOnInput->False,
    FontWeight->Bold], "\[InvisibleSpace]", "\<\" to \"\>", 
   "\[InvisibleSpace]", \
"\<\"/Users/jasoncantarella/Library/Wolfram/Applications/KnotToolsLink/\
LibraryResources/Source\"\>", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm["Exporting library ", 
   Style["PlanarDiagramObject", Bold], " to ", 
   "/Users/jasoncantarella/Library/Wolfram/Applications/KnotToolsLink/\
LibraryResources/Source", "."],
  Editable->False]], "Print",
 CellChangeTimes->{3.93928529403426*^9, 3.9392858982520227`*^9, 
  3.939286080117441*^9, 3.939286188335631*^9, 3.939288624204432*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"5cd8ed43-2b70-4b93-8e5d-3dce1a9dda42"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Names of functions in library \"\>", "\[InvisibleSpace]", 
   StyleBox["\<\"PlanarDiagramObject\"\>",
    StripOnInput->False,
    FontWeight->Bold], "\[InvisibleSpace]", "\<\" are made \"\>", 
   "\[InvisibleSpace]", 
   StyleBox["\<\"public\"\>",
    StripOnInput->False,
    FontWeight->Bold], "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm["Names of functions in library ", 
   Style["PlanarDiagramObject", Bold], " are made ", 
   Style["public", Bold], "."],
  Editable->False]], "Print",
 CellChangeTimes->{3.93928529403426*^9, 3.9392858982520227`*^9, 
  3.939286080117441*^9, 3.939286188335631*^9, 3.9392886251203327`*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"ba377248-98cf-44b6-9cc8-27cf8878e490"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Current directory is: \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FrontFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    BackFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    GraphicsColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FontColor->RGBColor[0, 0, 
      Rational[2, 3]]], "\[InvisibleSpace]", 
   StyleBox["\<\"/Users/jasoncantarella/Library/Wolfram/Applications/\
KnotToolsLink/LibraryResources/Source\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FrontFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    BackFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    GraphicsColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FontColor->RGBColor[0, 0, 
      Rational[2, 3]]]}],
  SequenceForm[
   Style["Current directory is: ", 
    RGBColor[0, 0, 
     Rational[2, 3]]], 
   Style["/Users/jasoncantarella/Library/Wolfram/Applications/KnotToolsLink/\
LibraryResources/Source", 
    RGBColor[0, 0, 
     Rational[2, 3]]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.93928529403426*^9, 3.9392858982520227`*^9, 
  3.939286080117441*^9, 3.939286188335631*^9, 3.939288627441483*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"0ccbafb5-7c1b-4c01-8e03-2c29e44fa4bb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Unloading library \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FrontFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    BackFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    GraphicsColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FontColor->RGBColor[0, 0, 
      Rational[2, 3]]], "\[InvisibleSpace]", 
   StyleBox["\<\"PlanarDiagramObject\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FrontFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    BackFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    GraphicsColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FontColor->RGBColor[0, 0, 
      Rational[2, 3]]], "\[InvisibleSpace]", 
   StyleBox["\<\" ...\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FrontFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    BackFaceColor->RGBColor[0, 0, 
      Rational[2, 3]],
    GraphicsColor->RGBColor[0, 0, 
      Rational[2, 3]],
    FontColor->RGBColor[0, 0, 
      Rational[2, 3]]]}],
  SequenceForm[
   Style["Unloading library ", 
    RGBColor[0, 0, 
     Rational[2, 3]]], 
   Style["PlanarDiagramObject", 
    RGBColor[0, 0, 
     Rational[2, 3]]], 
   Style[" ...", 
    RGBColor[0, 0, 
     Rational[2, 3]]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.93928529403426*^9, 3.9392858982520227`*^9, 
  3.939286080117441*^9, 3.939286188335631*^9, 3.9392886274423113`*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"6f01750e-118b-42af-b282-89ab702512c8"],

Cell[BoxData[
 StyleBox["\<\"Generating library code ...\"\>",
  StripOnInput->False,
  LineColor->RGBColor[0, 0, 
    Rational[2, 3]],
  FrontFaceColor->RGBColor[0, 0, 
    Rational[2, 3]],
  BackFaceColor->RGBColor[0, 0, 
    Rational[2, 3]],
  GraphicsColor->RGBColor[0, 0, 
    Rational[2, 3]],
  FontColor->RGBColor[0, 0, 
    Rational[2, 3]]]], "Print",
 CellChangeTimes->{3.93928529403426*^9, 3.9392858982520227`*^9, 
  3.939286080117441*^9, 3.939286188335631*^9, 3.939288627484724*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"cd2e9d56-dd5f-4f60-9a2a-342037318a44"],

Cell[BoxData[
 StyleBox["\<\"Compiling library code ...\"\>",
  StripOnInput->False,
  LineColor->RGBColor[0, 0, 
    Rational[2, 3]],
  FrontFaceColor->RGBColor[0, 0, 
    Rational[2, 3]],
  BackFaceColor->RGBColor[0, 0, 
    Rational[2, 3]],
  GraphicsColor->RGBColor[0, 0, 
    Rational[2, 3]],
  FontColor->RGBColor[0, 0, 
    Rational[2, 3]]]], "Print",
 CellChangeTimes->{3.93928529403426*^9, 3.9392858982520227`*^9, 
  3.939286080117441*^9, 3.939286188335631*^9, 3.939288627564028*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"1d6152d0-9b4f-444a-9ae0-41e2210a5292"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{3.93928529403426*^9, 3.9392858982520227`*^9, 
  3.939286080117441*^9, 3.939286188335631*^9, 3.939288647130988*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"9c8c095e-8eb1-4298-a54a-d80104b8d9ec"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Compilation done. Time elapsed = \"\>", "\[InvisibleSpace]", 
   "19.70395`"}],
  SequenceForm["Compilation done. Time elapsed = ", 19.70395],
  Editable->False]], "Print",
 CellChangeTimes->{3.93928529403426*^9, 3.9392858982520227`*^9, 
  3.939286080117441*^9, 3.939286188335631*^9, 3.939288647133772*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"1c0117bb-9bdb-49b4-a699-70d64b566e70"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"generalizedGoeritzfiles", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ParentDirectory", "[", 
        RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", "\"\<data\>\"", 
       ",", "\"\<diagrams\>\"", ",", "\"\<hardgoeritz\>\"", ",", 
       "\"\<*.tsv\>\""}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.938176596561296*^9, 3.93817663201044*^9}, 
   3.9391184401464653`*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"e53d11d0-4779-4e6a-bae1-c8e5886a9bb7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PD", "=", 
   RowBox[{"PlanarDiagram", "[", 
    RowBox[{"Import", "[", 
     RowBox[{"Echo", "[", 
      RowBox[{"generalizedGoeritzfiles", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"CompressDiagramInPlace", "[", "PD", "]"}]}], "Input",
 CellChangeTimes->{{3.93817649545019*^9, 3.9381765024996357`*^9}, {
   3.938176639417206*^9, 3.938176645132505*^9}, {3.938176741403699*^9, 
   3.938176748245771*^9}, {3.938177437152182*^9, 3.938177471679098*^9}, {
   3.9381775262001333`*^9, 3.938177536011396*^9}, 3.9381775787071257`*^9, 
   3.938177736023918*^9, {3.938178054724669*^9, 3.938178060435793*^9}, {
   3.938178133757716*^9, 3.938178135069722*^9}, 3.938178213446823*^9, {
   3.938178253917729*^9, 3.9381782606814127`*^9}, {3.938266731352703*^9, 
   3.93826673303671*^9}, {3.93832956872762*^9, 3.9383295695888777`*^9}, {
   3.939118446043564*^9, 3.93911846483175*^9}, {3.939118540747142*^9, 
   3.939118555054859*^9}, {3.939118830232723*^9, 3.939118856464775*^9}, {
   3.939214112870047*^9, 3.939214112954523*^9}, {3.939289916217607*^9, 
   3.939289916337537*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"e0990924-c9bd-4594-bd38-c6c7e0c0b05c"],

Cell[BoxData["\<\"/Users/jasoncantarella/KnotTools/data/diagrams/hardgoeritz/\
4-strand-example-4.tsv\"\>"], "Echo",
 CellChangeTimes->{
  3.939289916954383*^9},ExpressionUUID->"6da94e82-a97a-45d9-ae4e-\
6e57c24bf235"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Regularizing the levels quadratic optimization", "Section",
 CellChangeTimes->{{3.93929087372999*^9, 
  3.939290886523077*^9}},ExpressionUUID->"3db9d8d9-e556-4502-96ac-\
d5d1546f01ed"],

Cell["Now we need to tweak the level embedding to regularize:", "Text",
 CellChangeTimes->{{3.9392900760684633`*^9, 
  3.939290086476609*^9}},ExpressionUUID->"a8c7a0bf-a9e0-4255-b386-\
4ed21d188b6c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MyLevelEmbeddingHessian", "[", "PD_PlanarDiagramObject", "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", "A", ",", "B"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", "=", 
      RowBox[{"ArcCount", "[", "PD", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"A", "=", 
      RowBox[{"SparseArray", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Band", "[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}], "]"}], "->", "2."}], ",", 
          RowBox[{
           RowBox[{"Band", "[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}], "]"}], "->", 
           RowBox[{"-", "1."}]}], ",", 
          RowBox[{
           RowBox[{"Band", "[", 
            RowBox[{"{", 
             RowBox[{"2", ",", "1"}], "}"}], "]"}], "->", 
           RowBox[{"-", "1."}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"n", ",", "1"}], "}"}], "->", 
           RowBox[{"-", "1."}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "n"}], "}"}], "->", 
           RowBox[{"-", "1."}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "n"}], "}"}], ",", "0."}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"A", ".", "A"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.939290768450721*^9, 3.939290830155917*^9}, {
  3.939291081351767*^9, 3.93929108459175*^9}, {3.939298939548932*^9, 
  3.939298946937958*^9}, {3.939299087638761*^9, 3.939299109968094*^9}, {
  3.9393057356720333`*^9, 3.9393058160216913`*^9}, {3.9393065804723988`*^9, 
  3.9393065898769083`*^9}, {3.939306679350424*^9, 3.939306679700831*^9}, {
  3.93930685281553*^9, 3.939306853198354*^9}, {3.9393070014548607`*^9, 
  3.939307007342863*^9}, {3.93930706806562*^9, 3.939307068231689*^9}, {
  3.939307100187787*^9, 3.939307100633792*^9}},
 CellLabel->
  "In[252]:=",ExpressionUUID->"b8a7a88e-bc54-4ec7-a512-5cec399f267b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", "MyLevelEmbeddingSuggestedLevels", "]"}], ";", 
  RowBox[{
   RowBox[{
   "MyLevelEmbeddingSuggestedLevels", "[", "PD_PlanarDiagramObject", "]"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Q", ",", "c", ",", "A", ",", "b", ",", "v"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Q", "=", 
       RowBox[{"MyLevelEmbeddingHessian", "[", "PD", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"c", "=", 
       RowBox[{"SparseArray", "[", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0.", ",", 
          RowBox[{"{", 
           RowBox[{"Length", "[", "Q", "]"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"A", "=", 
       RowBox[{"LevelEmbeddingConstraintMatrix", "[", "PD", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"b", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         RowBox[{"-", "2."}], ",", 
         RowBox[{"Length", "[", "A", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{"Check", "[", 
        RowBox[{
         RowBox[{"QuadraticOptimization", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Q", ",", "c"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"A", ",", "b"}], "}"}], ",", 
           RowBox[{"Method", "->", "\"\<CSDP\>\""}]}], "]"}], ",", 
         "\"\<Quadratic Optimization failed\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"v", "-", 
        RowBox[{"Mean", "[", "v", "]"}]}], "*)"}], "\[IndentingNewLine]", 
      "v"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.939290634267087*^9, 3.939290668740863*^9}, {
  3.939290747845264*^9, 3.9392907482048407`*^9}, {3.939301021947054*^9, 
  3.939301046257361*^9}, {3.9393013076584673`*^9, 3.9393013188090878`*^9}, {
  3.939305240576427*^9, 3.9393052431260443`*^9}, {3.939307014156493*^9, 
  3.939307021900969*^9}, {3.939307270040633*^9, 3.939307271120532*^9}},
 CellLabel->
  "In[254]:=",ExpressionUUID->"68d95123-eea6-4113-874e-e2441c645064"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MyLevelEmbedding", "[", "PD_PlanarDiagramObject", "]"}], ":=", " ", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "L", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"L", " ", "=", 
      RowBox[{"MyLevelEmbeddingSuggestedLevels", "[", "PD", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ListQ", "[", "L", "]"}], ",", 
       RowBox[{"LevelEmbedding", "[", 
        RowBox[{"PD", ",", "L"}], "]"}], ",", "L"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.9392900947177362`*^9, 3.9392900951514883`*^9}, {
  3.939290581262146*^9, 3.939290587061964*^9}, {3.9392906545299883`*^9, 
  3.939290737938862*^9}, {3.939291033170452*^9, 3.939291041060854*^9}, {
  3.939301083017891*^9, 3.939301127148233*^9}, {3.939301236121976*^9, 
  3.939301237003916*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"6ba88d94-ed0f-4166-b1b6-0a9b8a524884"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Making a better drawing", "Section",
 CellChangeTimes->{{3.939290891309599*^9, 
  3.9392908966603947`*^9}},ExpressionUUID->"91f8a5bd-5e53-4a92-a3ce-\
cd6e0087e106"],

Cell["\<\
The first thing we\[CloseCurlyQuote]re going to experiment with is looking at \
this via a standard transformation. We know that all of the horizontal \
coordinates are multiples of 20 and also that there are some vertical lines \
whose length is unknown to us. We\[CloseCurlyQuote]d like to pick the \
projection direction to avoid coincidences. \
\>", "Text",
 CellChangeTimes->{{3.939286397523471*^9, 3.939286494166338*^9}, {
  3.939286735720581*^9, 
  3.9392867869766083`*^9}},ExpressionUUID->"b56f6e00-1408-4f51-a40f-\
90fc31d91292"],

Cell["\<\
Let\[CloseCurlyQuote]s assume that we\[CloseCurlyQuote]re looking at things \
in the x-z plane (so {1,0,0} -> {1,0} and {0,0,1} -> {0,1}) and that our \
basic decision is what to do with the y coordinates: {0,1,0} -> {a,b}. \
Assuming that b is not zero, this transformation takes the lattice in a \
horizontal plane to a skew lattice (which is still embedded, so we don\
\[CloseCurlyQuote]t have to worry about overlaps between things on the same \
level). But we need to make sure that there\[CloseCurlyQuote]s no way that \
points with different x and y coordinates are separated by a vertical line. \
\>", "Text",
 CellChangeTimes->{{3.939287005734264*^9, 3.939287031217229*^9}, {
  3.939287117494563*^9, 3.939287217364683*^9}, {3.939287273987702*^9, 
  3.939287276326812*^9}, {3.939287574429916*^9, 3.93928760708965*^9}, {
  3.9392883577067337`*^9, 
  3.9392883740474443`*^9}},ExpressionUUID->"06ad7d80-6c62-47e9-9a2f-\
37270691f13c"],

Cell["\<\
Now the x and y coordinates must differ by a multiple of 20. So we have \
{x0,y0}-{x1,y1} = {20k,20l} where k and l are not both zero. This is sent to \
{20k + a 20 l,b 20 l}, so we have to consider 20(k + a l) and arrange things \
so that if k and l are not both zero, k + a l is not zero. Making l \
irrational will definitely do the trick, though choosing something that\
\[CloseCurlyQuote]s relatively prime to k and l will work, too. We know the \
Spherogram embedding, so we can figure out the maximum value of k (the \
x-separation).

Spherogram embeddings seem to have a crossing on each horizontal and vertical \
grid line, so that assuming that |k|, |l| <= 2 crossings seems safe. \
\>", "Text",
 CellChangeTimes->{{3.939287283081163*^9, 3.939287385707951*^9}, {
  3.9392874484351587`*^9, 3.939287499703224*^9}, {3.939287626722616*^9, 
  3.9392877688314962`*^9}, {3.939287799564457*^9, 3.939287864064624*^9}, {
  3.9392892663975353`*^9, 
  3.939289307527231*^9}},ExpressionUUID->"091039e7-21f0-4168-837b-\
258f90d73e69"],

Cell["\<\
Case 1. k is zero. Then l is not zero and as long as a is not zero, we\
\[CloseCurlyQuote]re ok. \
\>", "Text",
 CellChangeTimes->{{3.939288023349225*^9, 
  3.939288040062085*^9}},ExpressionUUID->"bfe6a127-aa75-477a-ba24-\
8b9132a43b0a"],

Cell["Case 2. l is zero. The k is not zero and we\[CloseCurlyQuote]re ok. ", \
"Text",
 CellChangeTimes->{{3.939288041921234*^9, 
  3.9392880510109158`*^9}},ExpressionUUID->"16412b72-ff3a-4d91-8950-\
d1411e691d0e"],

Cell["\<\
Case 3. l and k are both nonzero. In this case, if k + a l = 0, then a = \
-l/k. Here |l|>= 1 and |k| <= maxk, so we know that |a| > 1/(maxk). \
\>", "Text",
 CellChangeTimes->{{3.939288053710627*^9, 3.939288081011792*^9}, {
  3.9392881256644287`*^9, 3.9392881747728987`*^9}, {3.93928931677394*^9, 
  3.9392893316943817`*^9}},ExpressionUUID->"2fc39026-f207-4e59-90a8-\
8cce3366bed0"],

Cell["\<\
This means that setting |a| = 1/(1.1 maxk) should never result in a \
collision. We may as well set b to almost the same thing: in this case, the \
entire vertical range of a given z-level is very compressed; it is at most \
1/2. \
\>", "Text",
 CellChangeTimes->{{3.9392881790169*^9, 3.939288291785536*^9}, {
  3.939288336309598*^9, 3.939288337953985*^9}, {3.9392884522074423`*^9, 
  3.939288467419366*^9}, {3.939289337299286*^9, 
  3.9392893444428797`*^9}},ExpressionUUID->"cd11d62f-33e9-4d65-8acb-\
c3b87baf94a4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", "MyRattle", "]"}], ";", 
  RowBox[{
   RowBox[{"MyRattle", "[", 
    RowBox[{"{", "PD_PlanarDiagramObject", "}"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "cr", ",", "maxk", ",", "minm", ",", ",", "bb", ",", "L", ",", "nL"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Sow", "[", 
       RowBox[{"cr", " ", "=", 
        RowBox[{"CrossingCount", "[", "PD", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"CrossingCount", "[", "PD", "]"}], "==", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", "PD", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"L", " ", "=", " ", 
          RowBox[{"MyLevelEmbedding", "[", "PD", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"ListQ", "[", "L", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"bb", " ", "=", " ", 
             RowBox[{"CoordinateBoundingBox", "[", "L", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"maxk", " ", "=", " ", 
             RowBox[{
              RowBox[{"bb", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}], "-", 
              RowBox[{"bb", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"nL", "=", " ", 
             RowBox[{"L", ".", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1.", ",", "0.", ",", "0."}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  FractionBox["1.", 
                   RowBox[{"1.1", "maxk"}]], ",", 
                  FractionBox["1.", 
                   RowBox[{"1.1", " ", "maxk"}]], ",", "1."}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0.", ",", 
                  FractionBox["maxk", 
                   RowBox[{
                    RowBox[{"bb", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "3"}], "]"}], "]"}], "-", 
                    RowBox[{"bb", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "3"}], "]"}], "]"}]}]], ",", "0."}], 
                 "}"}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"Echo", "[", 
             RowBox[{"Graphics3D", "[", 
              RowBox[{
               RowBox[{"Tube", "[", 
                RowBox[{"nL", ",", "2.0"}], "]"}], ",", 
               RowBox[{"ViewPoint", "->", "Above"}], ",", 
               RowBox[{"ViewVertical", "->", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], ",", 
               RowBox[{"ViewProjection", "->", "\"\<Orthographic\>\""}]}], 
              "]"}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"SimplifyDiagram5", "[", 
             RowBox[{"PlanarDiagram", "[", "nL", "]"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", "PD", "}"}]}], "\[IndentingNewLine]", "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQ3cOos3p65FvHTmPXtSCaZ4HyyhlA+t5/zrUg+oBN
/mYQfSpW9gCIfrPg9isQXW/g9hpEr7ua9hlE/7Y7BaYnhC1UmgmkA9St1EH0
wvmmOiDaJ9zTCESfyHhrB6K9/G2dwXyVPHcQ/eokUxSI3qN7MA5EW/8XTATR
PB/n3AHRGmlLwDTbj54nIHqD5+GnIPrFYqubc0H2MU4A0zzKdZ7zgPSMTQxe
IHrHvJdBINr1uE8wiLbyzsoF0Yd1zoBpH7dpj0D03Yuv3oDokoDETyB6iWQ1
mI650rx/AZB2efMZTG8y978GoitOXALT5zdYzlgIpINFS8D0qV+x80C0ydMH
C0E0ANl3u3I=
  "],
 CellLabel->
  "In[238]:=",ExpressionUUID->"e4e0293d-2ada-4c2f-864b-f7f218f332ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reap", "[", 
  RowBox[{"Nest", "[", 
   RowBox[{"MyRattle", ",", 
    RowBox[{"{", "PD", "}"}], ",", "5"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.939286120338738*^9, 3.939286148774723*^9}, {
  3.939288546530941*^9, 3.939288547604854*^9}, {3.939288589487118*^9, 
  3.939288590615827*^9}, {3.939288944256482*^9, 3.9392890005629683`*^9}, {
  3.939289632290833*^9, 3.939289641872163*^9}, {3.939289941162485*^9, 
  3.9392899519587307`*^9}, {3.9392990420064583`*^9, 3.939299046262723*^9}},
 CellLabel->
  "In[177]:=",ExpressionUUID->"6912f65c-c928-4fd9-a07a-a0a335b50da6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    TagBox[
     TemplateBox[{
       RowBox[{
         StyleBox[
          TagBox["PlanarDiagramObject", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{
          Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{"\"ID:  3914\"", 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> 
              GridBox[{{"\"ID:  3914\"", 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
           "SummaryPanel"], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->(""& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"136", ",", "121", ",", "100", ",", "0", ",", "0"}], "}"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.939286125424951*^9, 3.939286149370181*^9}, {
   3.939286225118848*^9, 3.939286242025218*^9}, 3.939288548590549*^9, 
   3.939288579421404*^9, {3.939288926916213*^9, 3.939288954895833*^9}, {
   3.939288992286409*^9, 3.939289001068947*^9}, {3.9392896181228237`*^9, 
   3.9392896423918657`*^9}, {3.939289789450416*^9, 3.9392898115760317`*^9}, 
   3.9392898669374447`*^9, {3.939289932302704*^9, 3.939289969943943*^9}, 
   3.939290934856738*^9, 3.939291057489194*^9, 3.93929109384093*^9, 
   3.939298959134268*^9, 3.939299047442563*^9, {3.9392990938163013`*^9, 
   3.939299115798627*^9}, {3.9393011985159473`*^9, 3.939301212000349*^9}, {
   3.939301248104999*^9, 3.939301270971198*^9}},
 CellLabel->
  "Out[177]=",ExpressionUUID->"2b1042fd-6fb4-42aa-8768-617f3ab83223"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", "MyRattleOutcomes", "]"}], ";", 
  RowBox[{
   RowBox[{"MyRattleOutcomes", "[", "PD_PlanarDiagramObject", "]"}], ":=", 
   " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pd", ",", "cs", ",", "vr"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "pd", "}"}], ",", 
         RowBox[{"{", "cs", "}"}]}], "}"}], " ", "=", 
       RowBox[{"Reap", "[", 
        RowBox[{"Nest", "[", 
         RowBox[{"MyRattle", ",", 
          RowBox[{"{", "PD", "}"}], ",", "10"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"vr", " ", "=", " ", 
       RowBox[{
        RowBox[{"Length", "[", "cs", "]"}], "-", 
        RowBox[{"Count", "[", 
         RowBox[{"cs", ",", "0"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"vr", " ", "==", " ", 
         RowBox[{"Length", "[", "cs", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<Defeat after \>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"Length", "[", "cs", "]"}], "]"}], "<>", 
           "\"\< rounds\>\""}], ",", "pd"}], "}"}], ",", 
        RowBox[{"\"\<Victory after \>\"", "<>", 
         RowBox[{"ToString", "[", "vr", "]"}], "<>", "\"\< rounds\>\""}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.939299450791089*^9, 3.939299533077106*^9}, {
  3.9392995665478277`*^9, 3.939299745405745*^9}, {3.9392997884270887`*^9, 
  3.939299850208166*^9}, {3.939299964552055*^9, 3.939299966006702*^9}, {
  3.939300113215221*^9, 3.939300186634301*^9}, {3.93930022129582*^9, 
  3.939300245978958*^9}},
 CellLabel->
  "In[239]:=",ExpressionUUID->"e9889c46-6923-4a59-b5e5-180c87a25863"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Trying out the results on random Goeritz-type unknots.", "Section",
 CellChangeTimes->{{3.939300310696773*^9, 
  3.939300318869691*^9}},ExpressionUUID->"d6eb8151-8728-4a5d-bf65-\
583d2149d538"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RandomGoeritz", "[", 
   RowBox[{"n_", ",", "g_"}], "]"}], " ", ":=", 
  RowBox[{"PlanarDiagram", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Glue", "[", 
      RowBox[{"Shatter", "/@", 
       RowBox[{"GeneralGoeritz", "[", 
        RowBox[{"n", ",", 
         RowBox[{"RandomChoice", "[", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"n", "-", "1"}], "]"}], ",", 
             RowBox[{"-", 
              RowBox[{"Range", "[", 
               RowBox[{"n", "-", "1"}], "]"}]}]}], "]"}], ",", "g"}], "]"}]}],
         "]"}]}], "]"}], ")"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9393000215060043`*^9, 3.9393000248580227`*^9}, {
  3.939300335403039*^9, 3.939300424033523*^9}},
 CellLabel->
  "In[161]:=",ExpressionUUID->"596beb49-0fa4-49aa-a45f-10e29b196d83"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomGoeritz", "[", 
  RowBox[{"10", ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.9393004038465443`*^9, 3.9393004346834297`*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"beeb1588-eaf7-4827-a025-287889d95057"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["PlanarDiagramObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{"\"ID:  278\"", 
               GridBox[{{
                  RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["389", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["778", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{"\"ID:  278\"", 
               GridBox[{{
                  RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["389", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["778", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(""& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.939300409220009*^9, 3.9393004354316053`*^9}},
 CellLabel->
  "Out[163]=",ExpressionUUID->"1226823f-cdf9-492c-abe9-283b2dbb2de5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pdw", " ", "=", " ", 
   RowBox[{"RandomGoeritz", "[", 
    RowBox[{"10", ",", "250"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.939306820481534*^9, 3.939306822242711*^9}},
 CellLabel->
  "In[241]:=",ExpressionUUID->"13cfadb9-dbe5-41a0-8e69-d49f2d440cfd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MyRattle", "[", 
  RowBox[{"{", "pdw", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.9393067045342073`*^9, 3.939306718080488*^9}, {
  3.939306827271212*^9, 3.939306827407325*^9}},
 CellLabel->
  "In[255]:=",ExpressionUUID->"515456c2-37a5-4012-a821-f2d4561f5a7e"],

Cell[BoxData[
 Graphics3DBox[TubeBox[CompressedData["
1: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
irwhcPxhC3DpXE7Q3CHV/balsqavDbxkDC5Ce6tvxax+UbT/2qyxSAT5XD0p
na5InnfkcOz87KsGIo+W9tn2ALyK9trsZ76TJK2wPztQoDYY+Xhr3eTh4LE5
HJNb948NRe6qfrT810ieW9D+sStxinLbXuzcnGEqS+/Mb40x4Kwczsml9tNH
Ihcyumb18THPu7Ox3/+7MGXz1t1MP0zw+2Qvcd6n5rlkD9N7Ca6YRnStlc3W
Tz9bMN2A4C5kN/D2ix3/zprp2QS/QnadjrnrzyfbMv09wUenE52tHLFz7U4b
pi8huE8G0QevWLt37wV63Kjtjnx9ecDCGHAWbz9B/rtdZnIBuAXtMe8sRjjq
bsdO7YfI1eSE/wSBx/L2W+QPjTJepIFX0X7VYJ/D8WMm2KnjArnkyTyth+Do
uKCOI+Tm4+9K9T/Oczi+kHcJizxeo6WPnTpOvTNYQbctAnLApXnHNfLxufXT
PoAr0T4nsKNSQWcaduq8gTy+2slg1yqes3jnGeTdPwa+ytfluTHtb1rVv716
sYIFDs8FjIY1rUkDh3lI5JP3De7/6znPY2n/Psdv2YO3W7FbtWpsfIvcbLdM
Zhh4VS4n5tPQ3FLkhzp7pvp08pyTj31vm3qF5B9Lpiv3dap95KzxdZZjey1x
+1R/kEcG/ly8DDyWdp1l3WePbNzP9MfpfZxqH3n+8I13MsBR+7N8HacWID+X
N03KcwPP/+RjH65Z8Lgnzhv7D/kDPzcjn3bHedLjWJ6zijgK/wIHyB9bLV9z
AjyW9u4qyR1Sc/2YjvrP7yNW2PqX9BYQ/ZpSj/zLeD7fUyrYo8nuqXDk7+PB
bOzUfFpMKUtnXu6pq8N4XpHA9b0E1yS76a1hA/r7uzNdiuAfDhJ96/UzJmbh
jtip+x3kwr1Gy5zAzXmO2hfomv+Pi5lOM6iwwa5yv2G6BXKD/TF/nMEleC5F
cNQfkhfelmiMemXN9DqCHye73/PXnWV7HZmeQ/DlxUQva4zLsDnrxfTOfMGe
QnbPfflzPzxmM12b4LJkr54u0jJ7kT926vU15E61t0WGghsmcl2b4Clk3+i/
5VjeQT7vJHhdIdGtZwZoNJry+YFiwS5fQvSo5EdSjyP8mI62o0A/TvZXh78F
iRkG8PWT4B/IPvBD++g5P4KxU/dfyOesHzlpGnguz+sIfpzsZTd0lkrdiWB6
DsFTDhBd1NzgetLjKOxO/6aTkc+74ncvArw7kTN/a/+ejcj13Mc9DAaXTsI+
WcpO/FMn7dT9KfJF1weN6gJnJXHWiGcJGyH3fXZXoQ28ivbqVx7e8kNisFPP
HZALC+tES4KrJnNOilrp6SLfeutwoRB4I+0+hge6um/GMr2T4L/JHjRzrEbM
t3imi5cIdnmyB7bd1RlQm8B0dYKbkd3nRYDZ6rl8HkLwI2Q/Onmvis3tJOzU
e4jI0x3qpzmAs5O54488sHrOZBdwVdp369yfPk83hel/+zrVPnKv3/tUZ4Gj
9iXuNe6Yh3yldvMOEXDDNOyDncXdzBxo/+Yh8kcW+V2OS+lscLlMjp/xbZ/x
yN86SVQog9vTvj5ykrDs2GSmN/d1qn3kSx6E/pEHR+1b5am7T0I+VfHDt6ng
jRnYDR+X3yuTSmB6SF+n2ke+J3blw2JwOd68B/KPliO3FYLr0L7M5XqL2Zto
7FT/kW+atqttMzjqf7P7gLnvg9H2rZ57POs1vC+Zh/0j68mcsQvp57PKOQte
VyNfdf+oqOkCnk8t5FS5DbQ5h9xl8YuRRuCGtIvPS13fsSaA6beK+zjVPvKn
Dbt034Cj9qnnUMhPWM7S/AIuRHv/hcuizH2dmV5M8Hiy58e/WxJ/ZT3TfQg+
luytIz7VVd7nzZOAnywS7PlkX6m+Tjqo2Z7p0QTfQ/axu2uuHOE4YR/9LudZ
LfL9sxQfZ4C3FHDW+i6YdBl5XsqmV3Hgl2gX2pQZwzazxR4xosn8CvItCv2L
bcArCjhCCwa2XUUuXt14Rws8lPZ1Osk+v4Y7MP1KoWA/RvaFL8ffHGbtxvRs
goeT/avFm1OVuzyZ7iLAHYedixufSXTH7yYFkjle2F9XO55MRn6ztua0ELh5
AeeciWZZLnL21qiXLdk8l6C9uPmSquR5H+zU/Rryzfbxpu/Owftx+dxcH/IE
kV1WPWd53pFL+0m1D+rD/ZhuS3CxLKLPK9K+WxUdwPRDBL9H9nrP+1MPDw9h
eg/BFbKJ/uOY7Dbt8xFM1ye4M9kDp660W+kexfQsgl8m+0YPsZWZ+eFM7yK4
Rg7R/U/VKCv6hmHn1s3IYc0zjNrc68NzFs9RPwW6M9l7Mr3bl0ryuT7B0XYh
ucnzU4ufe4Uy/RDBz2cSvV+wVmZYUzDT6zMEexHZ35w//+eYViDTvQn+OJ3o
Vvu03zz5w2a6BsFHkb06rEROea0H07vSBPtlss+4dKCz4JUD07MI7kz2eCET
G+PZO/i2O8EVyL7k+iXDaR1ifPtDqmC/R/abWVtGqRzi1eHB+w/Bg8jutN30
2EMte6abElyN7FWDrOYNm+fKdDGC26YQfUO8Y6TCbS+m1ycL9iKyDzwsUpew
jc10b4Irk33olJ+7Qg39mP44SbBHkf3u4LnPPvxHO+Qw+9nvff/iPzpXeVW/
+dYn5NLy/b50gHvR/tX+3ZMSX9qpeULkwyYHdxb40jlMKleJPGGD3OBgcNE8
7K7rvrVJPORzDYKPIvvZIRLdnN183pUo2LPIntgx2UE+kI2dqpuEXGZkTfwA
cHYeJyFtSb8ryCPjaw6/C+D5c9ovqcs2FJ73xg711ormyQ1yAtfJ5+yIbEms
RP5XOGS8Gbg97XI1S+NvargxXb+vQx22K59aPTs06Lph/2KS9ci3XdCcpLqE
5yV52EsU7396c9WB6T0Jgt2U7A8ufNdTX7SX6efjBbst2auWelhtSF+PfYLT
0MBa5GGFFeNPpfH8B8/PE/wF2W/L7xSSumnLdLEEwa5G9pg2w/XNDbuZbkrw
Q2R/lbZ5/t9Fztihfl3m7Km7m8HRdqSuJ5FvU51+zwkcrjORh9zqEVkr7439
446ecv9vTn188XUVdinyO2qqLW7g6Przac9Vy2rkbpbXLkSCp9IePkPDWaTM
H3vorB1Gd5CbXh5sNRwc7YfTR55cav/LiTXz5Jztj8t5bpKMveiO782mlaHY
ufVJnFgutQdr83WgPpgvJzf6/mRp5OYSEtUHwHN9sE/okVk0fFAMdsepBWMm
IR+kG6A2ElzIh7Pi3wN15B+TX6tIg5t7Y1+XZMvquhqHHeqD1Z3NPf8BnOPF
eftV9Icm8sVPmxZ+ApejXdey89Qp5QTs1TH33q1CXhMzVu0MONuTUzE972AQ
ci8X/cnXwDmu2L0Vr5hNe0s71AFbIPbTYD640H6Ozs8BhveQy282W6WBP++I
/YuF+RjbhYnYu5TQDTnyxyeujHQEZztw6+38G4dHP2P3g3fYYw8QXzTuoDHt
VL0d5D/U7FLLwFn23PdS/zqxnvjfja8AF7LDnmC7MG+iE+3tdVbfJiP3OpOb
oQjOtuYE/e7fMR/5nkGDkmfgz1tiHxAnMk2sgXbJ9+LsZ39MCW5C9FrPnOXJ
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
pabdkn2+LdU7q9zQFfYIIy7KKdkySi+NN55Fh+0R5YVsmRkRzVsL0IU2xDfZ
LT///VgLv2DfykVzhO2ZZVfyT/0+xq3P/g65aM8MMnQ+LHNc7JinBXezllfr
Iozgu6qLZH9O922CnTPvlUcTF+WKBZL9Od337Vt0e4NjPHH2PkFwk5Kcss3o
AnNRThVco2/P6yaOXJ4Wfd1qua7bLROJs/lV8Plxdu13ogtMRH194McvHTqw
C50xJv40sON3hTDOMb+qeXLObqUwLvc4p2z76jPgs9umWoxAF2wmPkqm7OaZ
a/F8d3Ft5ZhrnV+47e7Ja1zOk90e8JKQSeuPo+N2gj/t3H2fwDOWOPt4wbe/
etrk7Mnlsdn9A+4cZSvt6Mnlh9E7e6sX1ahE813RrZWz64N/uXfoUoMKlwMX
9R+6Maa/n83/io7bCZ4o9dev4RjnmL/tNWpip6/omPMEt44tEfwmf29EvIex
wXDPulji7Fx7cMtHX+MC0KX0hCeib457BK43wiAylLg25xm3vuVeS+D7Rf9W
zq4PbqVr+vsgcT1x7tSf6fH61oEUdNxOcJ0nltP73oknjjnhnyYPLnS70+L5
BXdn0tS63mnx/IIr7u0adyM2jji7/8GztR8rlMZyeWw2dwouPYSZWkD+3or4
/bczFcb2iyWOfcUqJ5Km9CNuK56758+cCdhZ0Bu9mvO8mtO63hbRxEXz8vyZ
Odc9n3qgC+xEeT9wLUelFwJ07OsGNzr565GrO+fYu2tnGl61Dx17dMEDBk54
ZY+O/eHgsVNHaQ9qG8t3RYq7+FH9cP8Nc4/O4dYX3V/gx1y+8U3tMDr27oLX
TR69KhUde3fBTZY39NgSEU4c87dh+cMVdNExBwuevfXC0LXo1ZyPbGPwzWl3
MHH2cx587omvv2zRBa6iPCp4FWNwYBc65lTB9U4XNue/9SLOns8Hj7/jIZeK
bnRAdL0DvGTm6YHR6FLuxL9YZG2d+05AnO1Teh4s2TuEUL2jwC/zma4d31Va
O/t+acyh+ocpt/ZnP99OHPta1xibPdJHZzyESy7NYAaB35gU9c70gdij44kv
jJAuKD0wiTj2svb+aTNjzlyxL80Sxth3SPcFL7jwPOHPbLFbcf7FSSHUSV18
vQl8Sl23pX3+Rrdy7Gs92OvjhTXosH7IloMXB4G3rda6Px99KueRfdtNmPBm
I3HsZV2eV6HfHh17VsGPVZufKHgt9h+ZxF//HPDW6M8avq+KkewJdP/d9U3l
2yGzibO9rODzoy9m71AU+0Gur1Wi34+m+r3D4TKaVosYnhtSXJbuq1+MW/Te
bQvf4bhGolvQvV159JCc02bE2f5YcI3pZV/voAvEfp7isD00by89IDb1uzlx
tjcPvP9DJ6PTjWI3zRBfB4lm7q9ICZv+S+zk+kg0U/70b4/pU3YQZ/sSwf01
hy86Pk3s2AcLPtn9/IQidG3OXc5deNh/szFx9ncy+PB6nUvj0bEPFrx0WEO2
Gvo4zsOG7W3b68MG4ux9iOBVvrn3Z6NjH2y3aGbM5+cHt6BLc96/4uSg+YnL
iLP9luBHEwdcCUDHPljwZRYuZpXohZwvboi9KN9rvBCd7dsEf1fQYeSTHmIP
Fvd5go9d8OLzhu5iZzj/uco4oMP+NXzfSHFPuit/za32ar+F70co/oDuRVLH
ziXKmvO9ieIjY6je+V6YyZQEa76vprgd3S9eUrLdd3oP3xMpfp3umpcPV55Z
bcf3TxTvG0v1uT9sDf+W2/J9PsWr6L5j/A7dNfk2fN8fJ9lv0T3ulMyt0Gum
xNnXIfjbwTNTzqBj7yt4wJrbvrfQCzk/90w1UvmNFnH2fQHecaGNmSY69r6C
r81Jn+uAju8v8P07/4vueliTQWffpzfjmMkyR6+9yhE79r6Cv0nY//kc+jjO
P0x8/dBH24w4+7kBvvDvik+26Nj7Cp5Yckx6C7o2527ennY5w/YQZz/HwPM+
nXZNQTcV906Ab/XyOuKIXsi56a8rp70LHPnuTPF1dI/uEBGT4LaP7+MpLkP3
PUN2+Y/M2sv3yljJHvD/+ILTVWHqdsTZ+4XBD5luNF2jhrlfcR9sJcVhe2i+
0HqaXEpnG76Pp/g6utu49b++aNlOvju3drb39UMa1R8lMBFaJlv53jdbss+n
e+8F7caPq1hNnO2JBVd/fsOxDF2e64+V6ImHqG65fEC81GVz4mx/LPiZoyst
ldHr00mvrESfT3dLPce62002xNnfz6rZzA0Hw3J1aXH+XCqc9M1K9LpDVB+w
efijmMO2fC+i+HG69/8x4JfGWge+J1E8K5PqJqr22aN3OhNnc/jgwi5Vwj7o
mMP/l3ed7/Cy0VzsxZzbmcns2XDyAHH2+Bf8jNsd91Xo2FMK/jcuKWI+eiHn
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
kPUgHsVYb3kBvlGxaZUnescU4f8B9Prk3g==
   "], 2.],
  ViewPoint->Above,
  ViewProjection->"Orthographic",
  ViewVertical->{0, 1, 0}]], "Echo",
 CellChangeTimes->{
  3.939307292437373*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvQl0VceVLnyezuVKgP1sp93dSffvful0Vvfrv1ev12v9NK0Q4tx2eA5x
SB5xiI0dYpOEgIwVLGPZlm0ZlyIUoRYgQIAwAglZQhJISIKLBjSVkISE5nm8
mpCERkaDh4S81F97nzrnnitdQPMA565Vdav2qXHvb1fVqVPDj37p7fGb3/7S
+7Vf//Lr39/6Sy+P13791teffWMrJ8n/TZLk7WC+Lpm4m0nSPaxASbo71YVu
2rSJWTw8POyWH1j4wEUJJMkYauPGjfAvMfRpFkGirD2G339TI0JSGnVEEYg9
bQhmRDQiGhHnT8Q28YCsWGfxWOVhf3BsQumQ0x4eljBrsZHOPEmnOGCbJaFg
8umc2rBhSspjpDMj6dC0N94w0jHSeWDSKd6+bWrK4zVF9TLSmal0CPHZa/FY
vk5yQZsHXuEFLkfakiWS+sMEDk4oP5K8cQMpqyggrP2UZEZbph2JISTudII9
cNiE09Z4Yha0Xc+sJOGpJUbaRtpG2kbaRtpG2vMq7QM/ftnitcF/esoN78DJ
BXdN20VNYIm7pP4wgX3Tmh+7XFI4qfyawTJhsWV66MW1ZNtWgj4XtM18SLMa
XKqh5Dvfg0LIIv+23KJJ5d+k8W0JuzI4SNlAueSCtkzL9m2nbY1V6HNFe4Gl
qbNM0v0wf0xo/4Tzpa3DTM9TB94vnvp6GvnNQn70aCxNiCyi1v2JkplW0iae
1cWUAg7vVfZEg6azDGbam55o8VyyBMf1ft7biOfSJaSm/45QJVocssfiuVY3
LTrNxWlKSQOH2iTzorkbxTGK82AUZwmrqR8ys/oLLRCl7LKk/jCx3894cUid
yh2Tyh3iu+xpklrTj+ntMEpklMgokVEio0RGieZqic4EBs+xEvXlZdy9ROaR
JQKixWOFx4yMAc6kj7Nk9MqVKxMpWQVYi/Crg0w26oun0Oihn/2Mv9b7om8x
2lg8rErYmjVjLV5P3xcv2JkgqT/M61/HV+RyEbw5LpqyoWYw0kK0zeTq4CCG
u9nRQtlwPS0LDaZtTdWPgEcys0s0B8ml+4LGX3DWV2qfPphMwcsPhVs812zQ
SdzEuqvbFIkraHhk4kDQFbg9v9woMOrZQkTdqFK7ioQiV61mDUUtYCQXtM2s
IZUi7fz+SKyJt7u7pWmYzWhN3BxqIkEDxF9Obgz2cxTXUdZbbgaHZCLX2xuc
1IuErFhJPj59wc4H3tCqEjq92cMSmlyw4N71cRMpve8RSd7ZeBSM9AO0ZYt/
CE7FYl2x0P9rInU0O6sj7R744yKRtbPZzCmrGOuqaLZct3qDkVaibSIJ3s/T
rqE/qZWbz3VTM5ZWKilhAYy6TbZuBUHBlvD0slmqW/mZwumU24YNlnDrbNVt
mjE5mbrJZPBCAbtu6wDD+wmwZTrUPaRVyDyfK6l0GqYRgvt8XgvOqJNRpxmq
k6zV6cQGD8mNNRa38lFkHAlmFysvgY91tF/D/+bcUrWhqD9fN38qhj9FJOaR
ksL/pjMZasUuVbQYFTMqZlTMqJhRMaNiE6xYqZIU2bj8ebJx2WqoIPX43osy
eHgqvG7wnJyLzpHcaGQo5SWJ/3AfjYgsQJ8L2mYadbgIXKphh367nRw9Z1M/
ON+lvjTQJ4J4rNjK4o7mwD/d6bHDBRzSAoc5TCgs1P+5Ka83G2pvI6zlOGuO
PUxSw3fJ4OFCY5eSUQC2zHzJzRK2xl0RLvnY3w99rmCbRJYFkckjaoeTYWT4
tBcYOlQYAf+s23oQ/U0HXyNBfiGSukhrekXLem04Y6tiV7xpYdXUn4pVPX4X
a7LL0MKps+c6fMI/iXx+Da/R3vtUiJ3PLuG4+jFUyAQOKPVKLy0olvp/zsdK
/kAkza6XEGY7gfN1Mrh40pUx/rS19wt7kf95Ptbwh0oUh1lX/oPZZ6gdlvT/
NSpmVGz6K/asKJ6n+0q683AujT1cwPshsB/Ayn4DrG8Sj2e38nhvfO+XLGiL
P333B68Sv/VbLaGr3aHGssoQpbL2KoyzpbkgqlESHMiut3WA4fUHm5cpJ0cb
+Kj93gyx4O/V8vLqDXXbyGCyl/QNtM20OmQDLU0IoDTw5/rucqo5YvXcbPEP
V7Z1qUu7BS70tZ8NjnQM/xl931CSIbv4cDM6p2bkAMLgiMERgyMGRwyOzFWO
5NmzJmUtn+k5YnDJGZe0rA0uTQeXqs/k3ZNLanrtTf2j4jrhHBu8NExvdXay
jpx8+Kcp725jxQXNMivLrlc4By70fUPQ2rs+xaDcSH+Ptpkmv/seK61opgWx
sexy/21MEjiHj2VayMldPTfQ56LQWPu5TIuPj7+dPd+ceW5m7wkdCzdpb/en
9+Tmo05oYjzu5CVpXEBTi1C8Z5/F2ztwVtl1PxU12DUhdtlarz+k7KKN0cd4
g/DnPpu0gNnKqsClGjZUdlFSl+E5Y1tPzwONssDVHvSt1w6Szc8HSS5om1lc
WCa4aFLgEYvnqnWELLeQ02WX1An91gw6kiMPI+c44Mj500fJ6W3rOefANrOy
xBhwoY//DM7dQ1WTdTSzQ8s2fzjn7b6EXu8b0o04TGygrAwHLtUnEwm1XUVu
/MO8YF5mvHU6mYefgTjz8PuetjFFwRl5f9lyktMyK9w6sOIZeiiSytj6jZlb
bKi9ezq4BR7KPrVRNlypDG65Az4lJR2m3df/pCvCnGAefMktKyuSscmTWc7B
I2NiXk9T75iYV3m2kJbnNoHhCga2TGrqlF0owMSVIg8d87SijvwegNuDhv48
h5AHn/3Hr6f3Zd4T9mKx7pbLrKe2XfoB2jKrPZ1JIs9VOBQrL8r+DXv6GdV1
ZcYYdb3z3ir6pAjn5AsTIirKkVF0IO/sDDJqJhHV2DOljGqjxfOLUf3ULlmD
UfdgVGtGnsGoh5tRVpF7zukqeiyUgpEWo21myScqVRoYluB3ABgntvWxwtNZ
08Wz5rTcMfMsLK54dnjGuhsuWUJWuYORFqEtE1/LUlqYno0+F0GL2/jyiNkM
Mxvq7Jsu5jWl2NfoOWPeD2eDUVo2i9TAY5r2WcR6bAPIoI1LluK6xk3u36cB
XoHgtnisJPAMuHWPWR/WWWvP/oFmEi0LOwzrHqktLpB2VZ+l5dFEXfmpZ9Ku
lS9oyzIfOiQBk2AFjKpy6tLfkUw69TCr20PBJEgd9UB/qANnEvrUQx3CX1pL
vDd66WjIJCwZqNvmFauot/u3gUkYnzNJKTVnkkgi7Kc/JcR7mz5ZYJKWvVmE
40zSaE+KcJxJGu2HSmhgkkrDj8wqk/AxMolsWfMKfcv9W8AkzBGr/vcT5hRM
W+DUxSIxgVGedJj1DX+KPhd1UiMsiDZWF+loyCmc+2hOiKFVGUk0/u3XWXNb
C8YfHLiGz3ou5LuJJEr3bKcdrVX6ZIFTWvZmQevKzdRoTwoa55RG+6ESml0u
KVZpaCp5tt1Dn8ricUNsBK0tzKCx3q+zzu4uDNLbe2WSzNLQ+yDpnnmk7mFp
evo+N5g1C8wyi2w684rYQGO7ZopPWVlX3+cyeHiU6k+iH16+/a14ELJiJWut
tbHhFtiIDrbMButbwIU+k6D1NXRoxQq6B8/FcVEONeCAdXtI+Uu2Kd8n0LdQ
5VuNwUuDl3OSlxaP5WvBSK5g/07J34GhULxgy0rW3dop01sdnfxxR3YeuDRT
EBPLegY+d8PHyiiHu1jDiZO0KDmNxrz5Fqtp6MJgfZc/xWdd+ReV4DIt2rmT
1lc3o89FobHCU3bpzUveWlh/FmHtCWAkM9q8nc1P1F40iXNW82I9TbKahtXS
3gXGym6NR9G7f18B3bc9jR0Pz8f/M6EJ94K0dC9MD7Y5+fwyL/j+FZFEbczJ
u/GYv5C4k43LnlcmTd7cAZtBn8cKpoELfS4KjdGcMo2mhHuUeD39AjsdGU63
r17FWvNz4Z9u/8laTHoizHb6rWvOMVuUwuK73MLqGodY88VWPkgAW2bZ0act
BbZbYxUAvov935qPaXPUR7S32iqDhz/uSj0JLtXQsggf1tJ1ewGzXazgeRXH
xzFbayf4oG1xQbIrrcpvZrHbgmnWxQ6aFBrF2tpvIK0xs0hyAxeIMTSCUlqP
PhdB42wHF38BK58fbCdVl/+Avq+NjcWiCONpR5Rc7mDu+Dq/fC1N3LaDA/85
6v3t7yuv8+7PKq/z/NnZPZH3gLZJhTati8cWT91cZrBZYzNhw2WEXbKy/vOJ
8E/j3/w1LWtspOXxQcBmoBFmO2WwebxslvVs1r6DVB6JtHi4Lx/ZUKsnHDwU
3PUSlc2y1qknGkiPKicdsLoLOLNG47zeJFvWrMPpsgNBobKYZDsTGOwwySbm
Bk3KvBzWT+W6WsHp5XhfVaNGU3fOekD/vmIL2bw6ABZ8chulAC7NeD7nMTek
QHs7r1nSvS1gJDe0ZZLq9QIdyI8Dw/srsGXWeyGVsoFWdrP2IswCDrRKC9jw
pTZwqYbdbqnmKcIzmZYnRLO+odvoU8Kb6FBhFnyrVGU0MyLqKhslIhJgWUHz
C7JJU7gHFxHYMqs9eRxcOtoii9XTIul+TuXU1vHpDMlJK4faGJ9Y94p2iqP6
DVO8D46zzRJz+eS8zxZLeLJ1DBJi8REFZrLlhV2S2eLjT/WJqhKTp0xYI1ae
yQ6tmvquPbtKNAPCSfXaMlp9FowUjpKh5YssXy6ZWwke4FINOeXzArWpKU6X
ahnSuqu0TCOl5apWike2jZhhf/ClUxCTQbOTq8Bw1oAt04vWi1pxXhPhDInp
s7mfxGhMTDnd43+WxUSVuYEDvpjuzNSioFj+SqQ1CSl+XRS7o6hKS/teEit+
/1eW8FCiq8qEJNaqXbownyXmuAHExUJ9V0Ae+ZngQp9ZoTnkMVuiS1hvKJtk
F115RJTFa723Qzixd1kf7uEUHX8pI2HRxXNUdMW7QyzePoEO4WZKdI+LtK+2
tNPbXR1gOLfBlllPQaE2UFE3scxZEW9bzrWzYq5q52yKGOu0WF0npNzW4VC4
2pj4eSFnWNtJ3/7Wt0loYKirbilWWlKWnrH3+qRAC2IzeRFwWMeqkrO1od6T
gsYFoNGeEsO/7JNFWmn/UeQxHwQvZEnCVjzDmm2tlA3X4mqpWpgR6S0FF/pM
Ck298cSh/PMCG60xEZQNNYJhA50NbuCQzOTOzR59Yo5zAGP/yqQXzVMiXH3i
GY02HyHh/APhPBB12cFD+A1XNPePiPwn8xVxvsoXu24xz0y83N0fSiG3VnWN
ZOyDJ2SezkBdA2+lYcVrFbbhvF+y3GHDWtrq9JkzmedFp9O0k+VgOHPBlll5
WokWd2ZlXhHsp53DceNyt4xHdJhY55lEi9c6jzEpduPoHZ75RxI12oMi866S
ei0dVR56+f4FZioGdh0FFVrgmRWodfPmMQzMxyvQxmT75syHRaBiDtKQpTT/
ZSmWu5GNy18mG59+BYxkQlsmHis2KDTLZtDf5Wt5enmfpGjpTb3MufRWq4Zs
XGpBmYOHC/fwz9eTdzZvI17LnkWZI9lME30DyEb3FfTtb68AmSuxLRvu/gnU
kP3IZaSD9VXki5JdYPjrCNgy+SInkLCeVDCSCW2ZXauyb2O9l+xx06KD7Bew
hott9ExMKUs9moH/ETtiuEy5CxaLJp1nhWklYCQXtN1YdlqjSkNjDTpMzhdk
0bqk/bRrYFgm7DKseugvOA0uGv/Wb2h5k42WJ+yhV67fMqQ/dul319inWsTR
JqyjsFKj3VPSGzfCDam6OplZd72yDiHe+21YiAJaTiOPJetnQtKTMnW7x0wk
9OWX77K6QZtL4aqt7kdbdM99aN3a/jKkqWeCGxJWflMkYXCMbMf1c5qOW57u
8gZlJj3Uyl8SGmn8u16s2dZGy5OOscHBG7Atr1GC/XM7aEdzHfpc0IZOpBuj
qKYz7ST52Fqs7jR/8ORsdpCzhIOh5bSgcngBLUir5dmcOpBAzjXcxGdzRuRm
krzFG6co44Mi6cW6K+i2VfeoQzgxRrv/kiWzQ4vNfyTk2eceNpH7LF8O8ybi
9KS7iVdr+vAYsw0i63HImGx5IYQGb9pJvdbvpJ4/fJN8HFfmTMZKq2pyXHbc
OmDIdvpky6z7j4KRTGjLrDbHXpVfiZKMTdQLsI++leVDm6N2ktQwAm41vCHn
aZazusgZVuGKRa3SQrRlduGs/Vg4VfZ9pYXki+JgMJIJbceta+OTvWlkU67u
dzLEPiNiVw4lLC/WL6AlDXtf0RbQLgD7MVGmBlpFS7MbwfABENh8UFTUDS7E
wN2b+IWq7GFRNc0vG6K5KdUge/zPOZKCC2jms/BpdEwZ3R+YzhkDtsyO788E
l45mJqdT7ev6JQC9Aga1CLOLA22g/nWR9djU2qyJ1pM3IXX9ioi4aB9RizRf
pPlPStmyfFbAFZbHDoNLNST0heW0WVtwOwfV+KEX378oSY/aKOPJW5z5K7kX
wRLrUCYtPjHB4eW+zJn4PJYs4+LrmTnxkZasAnapuh2M9C9om1lHQblKQ1Nw
wspaez+X8bHMKiI+YRfOFaPPRUTp6bruEKXOmk0ORJ6WneQ8i5JcqvLzHX/t
Y7LKiJwtr7CWnDOUDTVLrmjL9I/Xe8FFbl6+JM5vuY+wTXphs4HaOliiUspr
dOvOdVXWkipsLO2MCPtuG9juq5dmB72EnMNXryZ71TMS55pgaUFgoMXHNxh9
qmCPrn4eLr5Bn/px450N4cRrXSgYyQ1tM/V7idBt78WBj4buzIB/djGz1plg
eWmVNsoNBarnjyHU2RIqbr+7le4DRnJD20Qawt4hF1Ijuca/QDuaq12AbEh0
HklUi6t0tqaR7e9/V8gPkDAXsLKSy/BSphp2en+SZAIXTAikaXSeONJoVrR9
zyCKSz2Q3pCuNHekqx5zK1RTVxrHpNVpisrwCLjQBn0zLNUhW4+2qH6pWFQ/
WFqi0Z4UtNaUZEtoXLJD9QxJzydJ69eaOtNfwRGa/cF7FhIa51C9GZU0Buvt
GF7E+hrgJaT0yDFWV9GMPhe0UdLg0kz9mUxyNL3MkPRclLT5bpK++yKt0brs
7f4MicrpNCQ8fyQcGhg6Hgk7LAkzJDzXJbz3mXHrMOxxPBCW/pBI+GjIx/At
3p2nJk7VxmdfF8VxJuHagzunWsL03V/7EI9lz9PkxMzH4KoBWMiJB+StxlKb
kWZmhanl4FINffs7/4ceDo9/RIlCw9Zuoj6/fg99LiIKF69DlLeW/4hGRafI
IgoXr/pIelLkzGWg0UwKTb36AH8r5q/I4Yy9/oEeM2VDMA3Y2d+kPfsfojh5
qbX0SEg2GD7YBltm0TtOarQnBe3sR/81UZFbbP5r8N6ESrgvob//v4OHv1LC
9QlcqcGHSo1kLsKWPnCphsZ7/pyWNzY+go9lWhr4FimrOI8+FzUKl7o+Spzn
S7S+o0NWorCutET1EZe6oHGpqzSTSLq3037t6zySerT/IbLRsl4zW59ZD035
/xRZN+dkaudCLVXOhaL5AW+TsHc80GcWZ0UlrH+OxkSEo2+xCDcRRVePGtdN
UYua3b0db+nTM5n4Lr9vO97f6rhLEXpq2nL1Xu34iX32OxvVdZjzVORdpfXq
IgwwtOrwW3qR9zQ5mRcJCNDacbXYIStWko9PX0DfYhFu7orc2eDsPiLvuGBf
YzjFIg9btZoE+YfqSjjtIncootifOvdEbh4pciyuz/J1Jhrkm8JrcuwABZdq
2O9ffY+/KNvmj+iPcm0P8ru/6JtjIy0elpXom4joF2nsHJP8teWWS8XX4mgP
D7LlhfVKAoLm993/JLv88PBF7avyROTvKsqMi+g9RoHA1RkIiHWLJzkVto3H
awpdBUwrpuBCnwvYgkEPEAbEHjD0TQQDKu+7MjPV0xnh5AFu3w8SlF2rp2y4
HAwf2oEts5t12awl7ywYyQVtmbWcT7PTRLjOhgIt7iJBq+BvAuOFibqYoq+i
hhe6md4qz8RDJJslONLcPhxVlF9BTduAcnm0DjV4o6B2AoGu6xAr0wzAaMFV
KeirZxIcuQtgfimi8P6CnEuO4qPhOMmk2Kw76zQyT/QbopGeUJOhYqGjwL6q
VFllfNfWwpD7DMldGyeIFV60+SyeDuNE7vSNtW/gCfZmcd69N38t/+h1P/Qt
FOfdH98ZqZ13L8KxTz7ao9G+ojxhn4TGgYtF/y4Uj9Lf9r/XUK+fvymryQQf
1aI8pkThr/0e1GcDvPY/b/FYRZABXOTqVn4hbT2/4bRhrfKGyMcp8vJAb3Kn
KgwMFyXYMu1O2E7LIn3Rt1DQbjemjQzHrpae0WhPKE9o2ZF36aetWeBj1ypS
4Z8OpO0xiSg36nO1KI+JKBf9f0vKSrJoecS7pEaserqPyPvo6NMsDJGPUeS5
Tlr3gKdXUWtsGRhpIdq8FJWj9q5OYetuVlt3fMlwIvcAy9Pqmaaa3J2dYmLI
fRJyj3x+DW/dfXCkvxBsdU/fDAoaFNwQ9PQLmgQHfIy+r6gMnUIZw6cd3zCr
IeMHXMZhycUzJeP6jCIHZj34Mk5+eTUJTy2ZjIzV88vaK9pZa6kNjPQY2jIr
PhKDMtZzZw7IuS33YdTlcchZzOSSjZYtxOO5bWAkE9oyOx9vPyZFyWYB667r
dCgZdO5uxHPNLh7Lc5UHyzvfDj5WeLpYHdcZMJg3MKAd8QdJy1EPMJIJbZm0
fLxhVMlGwID4LFtO62pLXXEDtgnvmIALu7nP8kW6j4GEaUaC3w9+ONVIqI1N
0PYaLRalcCJ1ct5209nBCoLG2uoua+ENkU+hyPP8/OaoyPVrq+amyLf/n188
4CJPD9gDZ5LhuWRmcTrZiZ0nNNpiQTsXTUfQFrCclCqVJk44i5YWivDZaY2j
0s09U6PRHlOesNO/P0QTEkppODk0B+QNHaW3j+Pn7AdL3rm+vsR7wxbQL8mM
tkyCn1tJyes+6Fus0GiKXwB8c9XRzKww4Sy4VCOujznjKpIBFc9IykSfoLEL
KZlqcOkxJRlQcUK2+pLNc0LFHwqRP7itOrvUMsDfM21gpBVom1lbfplKQ3M+
7gxr6flMxscyKwkLZwUZxehzEVE6arowqC0Pv/SpEHC2v9CQvlqj2ZO+tkh6
7Mqt8qnpTAZWxpCwIeE5LuFFglyV30pToi+ycwG7adQx6goeXqH4D3bPnJAX
64VMiwo6aVZSJZ5Nyf9pWjieXq1JWhXPgytlxLEL2Wj5FayPDggHl2bE+ujx
i5r1NPchg8U4TR1bzag+O4haOwNErHmhF/eFagdi3k/UeZ/YD/+fT6J2cxC1
pExf0oG+bvJF8S52pSQFjqXbBceepHtrYV4VOY1P2shT0YQLkcxTadO+Yrtk
57+0tY9TpfUbRapTK1nMXBzjTE9uD6HxIZFg+Ps12CheWp7bpBoW/eF/0cLq
AVfw8CgJ+46x5s5b6BM0EK8anL9ig72Y0dBImpVZS5P2RdGq5uuYFLTb8F9y
JIYmx2azGJ50flUfT1VJp/4s1dJ5UtCacko0mkmhkaaKSxrXJvDC9VCKHNbI
9nZRNgzHPNdJj6JtJtc77WtVpalR5shdYRBPPSOcxr35FhxQTt9y/9Z9lbkt
1/7hc4perx9SaTusUBVn3qrS1Vd2jCJ204uYDQ0O4e1qeEg4//+0/oIL3rK2
gBS322fUoaQgZfVYHEO6orROpSur0iXFR6OlH7GOijbejhZ9HMXKixvZ+fgz
tLX3C0zdWTeZWtM/O5olk0sXitnV1g4wHKJgI+MtHsvXgJHMaJtoom8g2ei+
UqFzFEFs9XVyrvBeSV9UbKrVqqXavpfJ2fvN3eTr//QycsHWM9PyvdfE5EB9
PWE9WWB4LwK2ifXnJ4OLdqSEkeSSzodPvj0t/Vrc8ch3LPrblTej8r1U0ayl
YRacVa998n/6mQdDvpjko2IsDMOT2RayLavAsXDTKWSzg5AllIKF5lcOybQ4
o54/LvskkcbtjmLHfYNpWqENqKSmqt++hW/Ccuc5raS7iZUG/nYnKyzrBzer
yKyYgNzL85ronu1pYHj6YMssfMvvSVBQtGTP2VHuslpM3gndGBzkI5cm2Lw1
BO83n160ggt9rgrN0v+FXQS6Y+UfJmjANGJZzxeyyEXXFNDtXjtwq0vM3lgT
OnRpTxAfJHTlKnryyD4SuQHvJsPNlHXBKyfSLjT1qkddSwvBVqc27gII2jV0
R8/4MQr6sXEJGsrp8ewGsnH5C8oAGVy8TGf3n9TSnTNCtoSuWELuVB2gZeFv
01vNGTJ4eC49Cdu168eYvsTjkrlZL3OyN9KqMtxDpDY+WWuVUfVmJsWMb7pr
vaj3t79PDuyKg6v8aMHJeFp65CNWELaXi/kPZXt5usP58Vq6c0bM2mPBHfUz
SvSaFwwxY21UMTeF7ySsPZm2JuykPU256P68+yL8E9Z0XH3dtdjS7QeIGmJW
UnMm5lZayjoq21h60D6Wk1+3CDyKmJEMvicFrbt1UKPJws6LO8O6um85hANa
R+9n6HNV02vp1+I+hvajrPhwFKsobsJv9dlZtSw6+CSedwj/FZExrDCjmCVu
38VKq7sxbnfXdel/qGWxDWnprUAb1gCUqzQ0+fFWZQ2AEgXWABSeuygCK7Tc
kIPsbHwG+lzEEy5Kh2SKTqSyhpYhWTyujU9iefFntceCA2ou5/d+zCovYgrS
OTtDSEU74lj6/pRK1n4ev4X4eESCkRaiLbOmwhr6eVcHGJ7A53i6aU9+ofZJ
YYUTVOgP9OBKL9mLoGk+Ld2zR/qRmGmoPPYJa6pqRp8L2m5sqLmT2CI3s4Kg
D0f2u3Cmszgjan4o4zmNv0tom2i5pkWCeGVOcWG25brViw+VwJYtwwkeWiXU
MV1tdPwEJWjSJJjn728hYXF/oUliKptv08jmW1tMu2cfjT2SweL2xPMBf3Zy
FQysOz7Voqu3bxjAGAkMuP4Efeot8hwE1OP7r5PNqwM5v8GWyZZ1B7SKfUcN
d2jfKGAkvLCKA0OpxSSBgSAQr/B4cWleYgr6xD2oY0eHGdBBzsUdoLUH36Ct
+cfITerHW4svjNZirKCwXI9eT875oeFsBhsWXlRpFVNBkR+w/S6txdSBAj54
ddooG4bDYuqlxWjL7POhTo1mVmjkZk+7lt79MeKkRzEw4ogRnVBgxh+MZEZb
pt7LV2q40W64nz2M6FczLNKFU3sZpYhTgQcxmwzyV5erSf8mkpkoRkgQNnMu
4iyt/Lhk9bAs5P1W92VzHSPE6rmZnKdWwmwJkivasqWuKlnjxVeFoKYII6yy
qHoVG2yCT1XlEZ+wej7U5j7a3PP57Ms04eXVvEmqBYMnVsG1w1/01I6gmS1f
3BnWJ60K1kUnNBXngjZ7wtX23X5jagUJyq5+/87yWMtachM4dyph0pbbMr1z
Axr/St642xwmbSffALjDEgfliLjpBAs7m9Ys0z3+cJRZWsA+GrAtFn2LBe3U
0fNaeLNIZq5q+CgQVJ6roFnJVWAkE9oyrSyw38irHvU4SWDAFyD16K7HdBVu
tN1G3yR6ATY4OCArwwjWEBc1eRDIDiBAvTUp5wniAWbHAzajb7F6xmBJnRZ4
3oj/nwW/nV1wM02i7hzCU/cmI2pYnzilnYOjqNX3an2PIL5SGFKeN1KG8VZO
wy30zYCU6ZZ1lsgspSc1pCw9oLocxXXZkLIhZSU7Q8qSXcrwrLjqikzzrPyV
iNGjyQ+nlCvj8Kbo8Ug5PaGMBn90Boy0FG2ZHfSN0mhmQdux5YBGW4i2iUUd
yAUXO+sfQkN2W13FpfCh7xzRLoV/XNDijpVoNLOgxR8+r9EWC1qsLtxX0Tax
mPf20LCwXBr0RghtHbDr8u49Fs+1HiTg6WUktaTKiZTVuQ/pCTEpLDZ8o+/f
xFovLmUtnHqAOIyxt7zwCvrEAeIgZS0czrGYZlXUjUnWe4k61XMdF3WCXdTf
Eq8P5SE+JC7QE31mhUayvH5MUxKOoW8h2ibWVZQDLtBgcjTgHVdcNAPprqbh
H/mg7zFB2/vCMlpfmIs+EY41Z6drS20W6cLVFVL0fQ1t1GByItQfb553Ittd
vG2JyholWzbcCbdG4x3ST4ibpKuSotjAwBD6/k2hscslpVo4s6DVRBymtQUU
fYuVJyBbNRyauuSYccyVzZKEvbZoEv6VyGGamueefuVj8aTmSe8r3P9PpKRv
iv9JVKw4zzbqMI+sk8WjaGcPp2o0V+WQEEL2npJ0P2yu1Vlg3+XLQdDoUy/6
fdilPQVDLtbRe1tmw80dXLeqo6LHK+3ejiujmuS0PWGjaLG/fUNrpgWN7H32
ORIana6XqEMHLeHnkuVzXr2zvNZNp8C1fWA9ffSL7g4wkglt2Bt2WaOZFRq5
arN/FpsalWfn0lsepQd3ZPDUT5y3f5j9h3sDQwunjsjuN0pTGfWgACMVjyid
NDCI90Yv+C4O1+TtXPlDEkSC0bdQ0DJj4du5u+JTbLJxyVKanpSFvid1tLSk
bPR9DW0TDfvZi2TbVkK4bwQIyObn1lNi4RULioIlkWTvutWPiOHB0ZctWlv8
TQMEMwEC2lhV4CZuPmnJPandhqLSvhyw365iAvuvWUtBJnw5H24GF/q+iraJ
nSG/ZzQ1C+mJB+Nl4vGsN69Ja+Q+Zt1/gJ0P28uyThxDd1leySP4WCZbV/yK
Br8VQDa6Pyd9E20cptOk5IsY4p+UcKwwtQRcSqIKDaQ+isalTj1f/MCBtn3l
qzTAPxx9LsoTkLoS17JhXkr9n7Vc3bV+0eFOpLXO7kTahT484pxLrDApA7MA
JKRZL7rSqjzYZk2jrOBC30JBq7/YrtFMYP81sxUW8Qe1ZZfAhb6vom1iefsj
WeX5fPDRjupymbRHb4bTu4I+JKl7t9GIn/1vml+QDVRYgfcIPpZpLlnHLvcp
OzAWih0Yf+6t1nZgfE3QhvuaIAbG+kcRl7cJGs2s0Fh94vFRtPO/e5uci96l
p9FjL66kGdZE9LmIogI6uItVh74LPei8QEf0K2tHooMNtXZwta0Cg9cjVXHa
jdocjeYqaJeaijWaG9om9mVfA7hY9ZH99xlFODTJf6Or8L1m5Wp0s3Ihzl4I
PldXkyrM/wP6HDqGyzPSMdDcDz5wBoLqyGNzBAT1XX+8RxOhbr6fbBNhgMAJ
CKoi+DhmiSMI6MWBOddPKNvzx9kSQJdftYDZLubjnIvWFEgGDMYAg+6BPzqD
QbSdJ1pp/kLHp1mBhlaSsU70K5OfC8lpj4209aKV/smWRv/YXQj/hLXjdWpq
mzHH0OLlbiF18wYtn+h4UpClHFumXwA/n9AiA1osYdZiHa9M5FRUASxiYpk7
Qqm/X4KrWNEU8eYOEuQfJtlLOxtgAVrVZYU2v8CizuI9UGDBHby2sNU4gXHq
gK8beLRNvBNEhzIGonFeb84BdFDy5n7i8YwnvKdy28yif38MXNRv9evU61U/
dAe/d0TGxzLd8eoHdNN31zlEiTlgBZdq6Lvf+yVARNfxPLjoQLGNXP49PmBg
EuzTNll5G2K9uSn4NVk/d9ne0M+aL7aypguNi8HBC6SOQOCnzmGOFSAd+WWj
aE4AYoleuYRcPecLhksbbDPrz48DF2uOJPBPL+7ZRLuLY2TxuDNprxoFH+fv
3kCHS+OUxzJtPfImCdoWiOnPneYDV4Zqu3acoKRy/z6Lf2i4njkzgxJZjxL1
oFXsWUZAxLHtGD2zOVVth3oS4+R6kcjnn5+DMEDR4JuoqDkrSbKyFpoEBq52
5rbMmgvPIQ1w4q7jkNqKqN/1Om0OC+VVvIj14FMBlTSrMkAzoDLjUFHPKrrd
003/1NsGhicAtky/7KjXaCZBY/027apxM9oyGyjKh22DysyHaHz6K8uUvfzt
ybzF5bYLLY/bwR8UnIKJkeXIqaVoyzT6tdfJlrUb0OeCtplmxlvVcGCo33dX
kF3+exeIKIdeXEuIt58uCsy5nMOgkb/85VhQN/SpstB0TqNusYa62E1v0Xe9
Isj7z3vRBGs98XrlgMXHEwcnGvT0m1c49PQSviv+mnr+OAX4w7MOvy6GhBx/
mEzAf34P8Id7SgF/Yr4s/OcvjcJfj81+WqI4+4H0F2TBgYh4KKIJbTfWUVgh
6X74vbRn6Aph/efZzY5ad3BAcpnx4EKfC9pm+nlfrUoDQzvPHqFNVdkLlCh0
IH9kFBO72Vmn0izB/j5T0eUFrH6Rvr7ak77xnTXU/80QsvHp9bOEKEuBl8Vy
K92HpL7/Mm1urAS3mi5tiwnDj5ITQdTUtGgKHmR2w9airUV6Sl13lJ2NtIyP
3mMlhUW0PDGK9Q3dlsWSptuVmZZoq+NNhUONtRpzlC3qCCb9NThwlQ2rbLyG
V+LwXvFenWJv9w1J97t/p3iXI1cmjCS81YpZQ9DwPh1smdZlxGrpqcsNOKRo
UlItDd+dLf012jLJSW9yEm5aYKb+9GuGNJhVRUaNBWY0LDiSpieUS65oy/Ts
2WZwoc8saPFhJ8nGZT8GA8e7L/vxLnuirKP7NrOVw60hYMusPj0fXA60S/X2
I5H1azUmjt1LlS1aigro7to5i/P2HPba63DqcH3PZmWRCK4YApzyRuQVXi7/
n/yGev70t+hzQdvMjofEgUs12OyQN3YuEFF8v7+OvvsbP10UmR0PjlKDKyMK
sZJzYmC1zxKQ1DBCiv020NxsK1wbCM0eHhv7NUu69wpIv+fWKP7PZVBu+42n
xb7S1UxTtu8gp/03qoYe9vgZ7Rr6k6xsyKVt4T5amxCsS3rkujF9OzFrMBy6
NDAiivO+l8MQ3AoM/1CyCxb8JuwGF/pc0DbTT+tSVBoYajv2Hq3LOrxAiUJ7
kwNHRDGxa9XnMGj/mWAaGZHrSpOOFfPUUw8msnxrGRhpIdoyy0qpgacY4m9F
uHPWBo32VbRNLCXgEI2LQxrrvtQj4y5XM7t+0WrxWruO+D39LC0sbIMzGpmt
5cqjeIQjHy7X2N9/1FOY5xlUtW5avMrQ+oQUh7SVb7B/Ut8QkjdumD9Q7bEN
johyf6iKck1Dz+6mXc32LPV7zRt9/6i/Zy1ZuWfta4IGC7n9vH3Rp/XsyoS7
Pg9oLEeyGq5xI7RF2ZTx1yKcgcxRInlQkNndOTlkinBHVz9Pgv2Vg1H+Ucea
MY05RyOTnYwqosQrFoy0CG2ZvffLIBIUrnxdEchkXU19cB67OJMdbJnZ6no1
2p8VGu3s/6NWZnX+as6JU31H3fj0BuKx8h0wkgntWW18RLgpFfGjeFeOTNJ9
Xta+5DyErY1yLNfchSKtjYkntqjNYCQT2tMJxehXPGh2SjUYOAaO2/ylqtS+
42GqoSh2WhCfZUvZ4MAQ/XNfG3+bBVumV/rs6DJQiL7ZRKG2REeR43SiUM+a
aWwQyebnXsELOFzQ5nEt67U81NGY11J3bepuGttHsmUtf+10Xw2vnWCz87FW
cKmGeC17loSHHAc3zYxLx//EbXBtyAooP4/Du62lFpqRlIc+QaO7f/ATusP3
IH+thZkkbitHwZtZ6pE0B/HNKDwvihR7W/tYT007GOk7aJtZc1oO0soS0yzJ
ZT3zA559Td1ssLEDDM8bbJm1ZORoK7zGCU/LF+khhF3OAgPz1tzmDeIV+8Ft
k4en2QGewCGyfBU9llwpK8d/ssIz5eBCn3Ik6AJyocThDiPLreRA6VFePCot
YtebSsClGlqXtJ9e6a1F9xe9VfDPBgrPyBhcpuUJe+jn/XXocxG0PL+3aEp0
pJ7GBhvqtb2zZtX2sjgUYzaw68BmcTzqvZpbh8KODc/KtzfisWIrx1R0QBS4
NLPZ8grLzqkHNyu0ls5Ac4udnN/4mlt1sZqzF90pxC4JsKwgcecb1K+2hSez
R/G8dejPyvkGY+v2KyPG1+1r98PoIKAHWpd4l1XjznOQmlSQkuBnnqX5Bbky
GT7txXF6OTMCXKqh+Tt+Ae2u4k9/38CpHqfWfYdHsX2cOB3v8PRhximJzqkR
rL/b+GCZKJCBT3g8UFzgwKQZw6fZQfpK1u7U3z/DlQ9fz/IKBnmFsKLSPvS5
KDR2/P298xOq+OFYOarWRJOIP66t+Og7FsSr8h1q/Hh1uxte8dNp36WrMh72
KrPKiMh5g9un7PmyT69coX/ut0muaJvJnX7H65dHYNmWXejAwFnEMny8Ly/O
dbU0hcJ7G9zlxJtdxQd2mBMpzG3w8krevNyDV57eairBBT7WD95mNXX1Mq7x
MZOrdVOJX/g0oA73xzp/Osfwq0lRLNlX8aqrx1wDLSlov+WqS0YdKyiDmHmC
V6zAo+LrPocYhh0xSFArqZs0kL4livRgIJWVFnfTxMgiMNK/oC2z9DP1Gm2R
oB0NiNZoLmq444WjaOdO12m0xwQt48RFjWYStMzkanAx69EsQVugj4vPju+I
08KfSyjT0lispqsrp8iLJhzM0Ood6IS3cxaP6ixgT16+tgh3sbIUlw31DCFt
uIhOJTxPvbyGfGwtdoSnmRRs86Z/6mtD8/nwAPyT652dKor0qES0PaUsIVJX
guKDSUPzUfEJfau7O01KyEDfU7pP7enJWehbLGh+T1toaOgx9LmgbaZpew6O
WlplTcp6QonI8o8nOjyGrBJOpiM7s2KT8T95GyEeS5eKJJWssxLTddnAaoCV
9KPfeOqzZgXxKQ5pe7svo3FxZ111yWQmKbV6XKHRyohjFnWJ+ZxHbl1Zl/ZM
RW6r7jo39evHSMhNEXJhyfYo5Aq0iYZVXFo+Gq54mBPccVINRvpbtGVyddB+
sudX9emNE73OFvbO3+4eb8i4S3f/uODI7AE3Py5FmyB9SnTlZwKCVBq2ldAq
pSdluimNFMs4EKJFUc94sO7cp9HU9X6Z9qSx4PAatjdgr9h/hQqclojHQEjf
EslEv2Y/PkJ5i3PjyZxxSEYcJ6GUKjFDXTV/6Gc/I8R7G/rU+5Z3fn+ldn/J
QkHLjNHuL9FOrQjjcbdt9XUMd/KsFm6RoP323/+DhO/CA+Okb4pqAHCPCpq+
GU/DA620cz7pB8u/S0ID9+qqZqZnQ/Y7MBpZkpSpHCu6mJ2PSXR4DFmJ7NVq
0MQPtsFZWSJJJevMhHRdNjLdDWzYFqjPWi93TAeq9nFwmKsumQwhnMdFMiIr
9AUKLBQmpY/kEsadWpAO1Ddq50U9Jc6Qut16QaO5CNrnwy0azayeNdVfP4r2
WftFjbZYO5OqcVR6l5qLRsW9BWvtBc1d0G7UZo+K23I+dRSts6EQXOyL4Rbp
Se18rAQn52M1aLRnVBocVzSizDcH7LRvOqGp6X3RVa7RvuKEV0p6C1hPq8YX
LOfnHaXK+VzA7yF7+MfUdC9VjKjjAjV/tQ78Jfa8lsaXOt6p4VtyYh3y/LKn
Wgt/rc/OB5X/Xzgpx63G8xotUM2rr24kv3gHZV/B/uyUILOrvGkE7f4j1lb7
CvYZ6Pev9fc6JDO+fp+S92LI5tUB0kK0ZRZ38By4yOYf+6u7Zsfaxzuciuqs
j1fHFp1F1Vpc3dUHD2G/v0aEe9BBOoHBqSqJjcvXkI3LVoOR3NCW6Z5Va2jk
62tJlv+vJFe0+StZ6GZw0dKoffDPMrYHAOv/XZ/02DBMg7x34C6av0aby2GF
l7NwM4Fr+824SzQuuChcYNG/2zeCZuZFDwIXO74zAv7pjpdeo5vcfyArj1nM
nhg1Cj7evWodwFz90jPvEd7T//m8Qzgbam0hrOU4GN4Mgy1bIkN8tLSUGpns
7Zey23WsyMaKLlY24RDWFA0u9Aka7em9rQWeHXjjCSYZGelQPFjOwu1F7HpN
tlJcxdC6GH96xZaH7i9sufDPBnKOY51glUzUR/TzznxdEjKt2/maJTKU6Esy
/zE+M614aehBi29ItI5198Q4Ky7vVy+ai3lvzxg2f04Yz99UaWODLb3CXy7+
2NsBRnoCbZlejI9hvYOfoW+xoCW9+y6rrm1FnwvaZtZTVKrGRcPjkf6b/1cH
2xHHMk3dCCTu5ZdHcHHS2CVCGNebm0YebECGO+1QehDxnEfI3dpssoWPd7e+
EkZ3/GQTDdpnRXdu6ZAsrrlw1mbPAp7HN0MmOzS56urxeQpYfc/zcxHuIQEn
rY1NIAnvrIHGlmakJYKbtjVW3mtAYYBz7oPzvCiYMhJ/HoxkQltmhen5Gu0p
QZsbgNVeypZY4OQOMNIStGXqt3oT9fypF/pc0HZjx0Pi8YSPoPU+dNO3f0Lf
+M7PKPHaDTQWvT9JFlF9v/8L+u5v/HVRYRt+tJbFk2ib2PHdsZjcjnVv0U3L
1/y7iH5o3RsTBrGP+3Ji67Hp+DozIE4tuwpuLusqsvn5QBrssZu+tvK3vPrc
x9PZ/NxGVpDbjD5Bo76r36XvvRWhoyGIwaUa6rXipRkHMRtsqCWsIRKMZEIb
W12N9pRCmzIQZ+RptImDmNYf9Nd23S8Rm/c74oNH7MR3o5/W4uZ91pdxVNu8
X5txiF485EVvNJ6V77qJX1Y38aPvSRHuVm0yJnc59bD0HwrN4uFuP9RX1Hxc
CK4ShwhOD4IXOUGwhZQozbCFlYWQdL9fsQv7tsvg4MlGePwUWmD0uQhaus8v
waWjKeAVNDA09vUXaUZRj5nGhRfAXrfAOA3A4oVzGsDbXWtfDKfueZrOIcPU
gFeczIW+JYJ2n2EETiI5zEsM33NeYgzDiP8UOc8EVs+G7NfSuztWnd3LgljV
jqkTowX1sRgtqIwY40CBpqWkLbCErnaXTGTvSihEqgpVgVTSk3NOXSMiEbRN
7HZ7M9L68jItCVn0ZVE1A6zwmyGwsvy8ThoZSsHwl3+wZXLqwui9RVMN4IHi
sTS2MwRgGCQoy/FHAVhRM5ParKqr9Q2wTgtY3VQGwvqAZ7eCkRai7RzAj1rS
vS083Y/XWkatqZ2d4YGBWOlhRCxsKqdnjh0mg8lekivaZt7pBYKLDKa/j1kJ
5P5YlF5/vKMBWiQboJ1p0JLgwHBd6WWHk4t/JIpsIHX+I7UjO1+jGUg1kDp3
kTq9bSqtzs/Ho4Jc0HZjQ93D4GLtqWm07GQMPfvBe9qH3L7B2zK9g4edl+7Z
rS25dbEvCNWKZCBVn6KBVLXmM9+mlhBPyoZrweDC01pYKNttv3r6IUNqVmbr
1CF1H0ZF9Ue4Ij1szRoDrlM8BLBvrpm/cJVZb1UzG2jsACMtQtuVFZ+yst6e
T5F+qaAEua4C8y5rDy2E16n40mfOQNnff0s5Kwp3M7Dr125wlW8EbMI/Ld0X
hCk/qOAsqL6u5/iUgDM9KVPdaBP2s5+NAmd/Sw+70tIBRvoK2mZSN/gHfUnH
8KrPBjsH2DVbBxhpMdo86Y4+jfahoHXm5ls83C0Y60O0XVUVAs/ITvOBlXRr
r8I/Z5L+X2rtuCRPnChzCDdO6bPrg0Mya8lO4aWvij1sSaBUn9x9307Ua8b0
6//VotyvuVL3Ceibpq8JDjWdsY81VUa3aff40FxfuIdIuUcFuSYu34GmyqJu
WsLNTULCDtI0C744Hen1f4m8ak3PVYI5b54udN6tz1S/Vupr/2AAOcveC0w9
kGnrMHMIJ4CsvIEQzxdC+MtLYWY9uKh1X/zoPnboTya8u2aBJTIyRF8qBLG6
GXVugJd4b/TCmsGlTupVZQ79rLgmZe7i1rrZY57gNmNi654mhFuzhlvObVpf
W2q5bvWG7FzAISHvR8JW0ko/Jxtb0nIijLKhUjB4GVUpdN0X0rTsVBnOK/ie
5vANTS54MOB74vnnyPHTpyYC3/KOL3XhHOAL3AYiZKdgwXSXvS0WZ3uU5hia
RQfgsIrIQO5sIxfwFHmuYoobXgfkosRM1O+73wPkKmcLJOdqpw1t9iAlJTn6
vUPMGrJdW4TrpizCpcE/XGcg92FG7pWBIX0yU4fcR50hl315pZN3tbDHvoAN
NpSy078LYBVVFawgPooOffqFpMMv8lSXLxtqaSB3qg6AkRaiLVtCfD20souz
OOcTfpP9QukbP3mPbF0fhsZrtScrzG8HN+IXHGJVqRoEjO+arTQupVZWHhOf
X+GJl7OOY1oaul8ysb76dk673HkVXOh7StA4C0bQzIxXU6WhKUq08sLfmTMt
sFMc0+IinNvEvSwha5bhXpaYyHBw49j3XjjWjyDUXafOMNuVZG/c5g5mLbbg
VXB/jGpw+w5vc8GNmMXLZRCzDsHS338ZXhxk5bF6Q8ZsYdakYTZ/+3aLj0+w
+hY7tuZXpmcCQzWamGSeDayW2vThnGO1ozwP/51O4U8RVvUd8RzAqhLXNM7x
gPoBatawmWtPzeITiJIYiVNpvEDllcEpGfjdC6g96faLZmemUaW/fXUHnMxC
d/onwT+LPZyj+F8Lod5rt9HdL75Ogw+mE5+1W1l+UTeHqK9nFM8jxovQ7X5J
6HNRaABUcKHvCYVG/Na9QxPTmvThAKjU+6WP0PcjEc5/nY8W7puCRnjc5IxW
9H0NbQSqmgcaKFdeUc8ikTQHKk+aoM8kaByoWrGeFEXlUtJoi0RoSKqwsBN8
SsePOWLHr88RShpvrZdFgbhsMcaelzxpYHACplJwofsJta4RUVqBPkTbVeUl
+ACoGF3wU/o7UXeftds0masbOscFXtqsfH6bMfDO8Iigcvc2UhD4K5r0xos0
P3oPLQ8PoFVxoUBjdNdOcsLrxzgiSDtzEtxKK2sZTvYUb2b01AH0uSg0AC+4
0PeECGf1XkMLaZ4+HICXnNj6PPp+ZA/HPtn+XzR0wwbpr9GWSUKAn5beIjVf
nl5rfRn6voY2AloNBwbLCi2vyI4DWsvOJGjwJUJN+klRfC65EdmZMCkYFXCf
MirAHHFUoM8x9Z0XaF1VsSwKBPIGMm956Zm4CEwFWl61/hH2+n+ItqvC3+E/
gQ+/5UN0wWPp70Td9UsGDEA7+Spxcd9+i+eq9ditudCYQ/mSG0s73QAuduFY
krNhw/hHDRbtskFnowb8yrqY3KT+PNGb6e+DC32C5vR47VkYTmQmYPKzN5z4
O8F4A9TSvVtpFdRw4r41KY2kBvjR4pSzlpBV7tqZ35MfC98b1ZucsHIS4E0M
jqMRe3LBcD0FWyY5WbjXG0EsNnrdFbxXrimvBDMO3uh1uLpqnoC3q6lPCzcz
4GVXh67oFrQ+yq5XXQQXGFLTf9Nio2XqAqj5CV43S7BliSV87XLVEPLsUpjp
wSpx8N4Puz2z9R6XLE7unx/Y7Wkd0MLNAHbhnPO6fv3aQnvDK8Qxm9hlQ71X
VT2SFonbZasT41jfZb2+yayXZls812zAWOJWk7vh+b+jzyTgNKv4JRvdV1o8
lq/lo2GwXeFKUJqeUgg+dj5GuevVwK9IZj7i90JuM9nycigYPhIG20z3BWeo
NDB096YgwO5fCs7MbdhaWEEoYe2nwEgfou1Ky2MD6O2eUvCxa+WpGH3KYcs+
ibxAPNcEs7jQNPingT/3MWCrMHcahgyW61YvMNIitGVi5e/6bY2V6HNRaLQ2
LoH1NbSDkbahLZOezmEtXx+7+LR+uUP0y+e8Nk8ZQMRUsa3WcivLh/WXX3AB
x/i+yY4ZGKz9fKlGm31g4NoBuKNAXUdgB4aZFPv58B7SpphrffBPbnZ2/oXI
bqqGkGrcsoOH5lw3XJuUwRqKWtiZgL0sNfUiy/wkBdqzvxTV0OUvvafLSAfX
v1eCTgFCW+09r9rKTDU4O/LLNdosgzN7/x7WnGllUa+9xsoratmZXUHsfHap
csicZKK+K35K3/21D/gsHquIKpG5AUqWn1UCx20jKJVzt1m0fyi40LdYoekB
KU1swcpsIJGV1F2nuSlVrOhcnRkcwKfibq3IcxqJJj0S2eW6dhN2PYssVf13
HADYfSYeFl/Ts++9QbOLSml5Yii9PVyvnNBsor1pYay3NIdVnDhAq5qvy/Ri
Zj3PsDCxgA/AV2JWYmPRbGJS3dvErpcQZjvBes+fk/4KXJzFN+rPgwt9ixUa
YZdxADbPAKlO/0HTKO7Nm2vgs1/nt5x4rHwHDO9hwXYlm1es1wDZXYP7PNWm
UaS10AGZdXH3+phvwgEd5ycCvab/jjrEvbgvVCuOHppxOT0OxZ4haKqvsveb
gBf3eyAk1Z8yODOgiU+mCJpk1zMraS7NILbIzRyUYJstVcm+SukdYTkDqCy5
xyoTA5UPFSpJeCrushXH4ZoMNBpoNNAoGWg00DhmNOL0h4FG8TPQaA8322is
T89nzRdbmfX3e1lmbg3Ljk5hg73XeFnhZAYTq4yKNtB4fzRaPJavkd5D24Sf
AmFhHPcZaBwTGnt7PsVH914ob7SNd0OjmHon7GYVYT3nwEg+aJto+cndgEbw
GWgcW9vYj0k6Pd4k+kAKTIJbNnDOHn71TWdorD283+LtpXw/Gycama3uMqu/
0AJGWoy2zOrKuzXah4JWn1upMfVDnUzmQydYdOr+R2nOuqDpUF+XZCLXc4jS
yKtC1j5ZF4fss3iuVVg4Vil7i3Dzrn25+8KtUbDDQ3LUewvmHPYuX8jRaHMX
e9DlLbBnj7hzzN459qKtLQ7hZgh76h3Q50+cp2diSsHw1hFsFJZGe1TQKk/n
jQiHeFRpaKL8j9Dcsr4FSiAW/e5/0SPR2fQwOcTqmq49IVIqikjgpMPo+1BJ
CYPUNl8HH+ssqWFXm5tYTwF9FBw8ymBxoZb5YyKZEx/u02guCo2eOZyhVVA9
CW1Woas/u/FBg+7y2Wo2tSYyIw9beRCEOPoLN9eotEcVGjSlI8IpO2sEDdkB
V7rExp5doATCHTXbtwXj+g7cUaOkhGsIlyxF34cKTVkCAi8O6mFjPFyzNVPL
8TERLnjVcyMP03U4Fm5e4/Uex2XOAl7h1WJu4lWjOTuRbjxdP/QcOU03x931
y/quX7sRjuNVS1r9/j364Nh5itfI554hUXFRcxiv8d7bLZ6r1+vZ/yDidSJD
1dnAq5K2G73RVK9e4IWm9GQM6xn8DNyIX3GnF4yWgNRhTbYEhob/PyKfqW5y
j87pJrf2IIfwqnV6iRgQnn0It+UWjWLZqCbYpLKE5vr6Wkho3LyGMHAfD5rZ
uMSd+n13hVin644QhoHXctlehlE4Lj8UPu04zjqURHw2HtXMOy94MXqhWwYP
r/I7L/iN4KaB7Qce2yIcqUovoWXZjWD4azbarK5AqYHAuwLfRYB1wi5T1p56
ipzeRejZ936rrLpM2AdYx2c3WspmGe2WnrDV6t4GMCTB+3k8V1Td0rB/m4WE
xenlYKDdCdrTj+XSqIN5mtnzbigrrb8GblZwtnpeop3aMu2zyuoCfevuWHoy
ogiM5IL2IlZbOwguVhydQvd/cJBFbN1BI04W0YO+B1l1w1V8dqmqVcbgMj20
LYwWlA/okpBZ1sF4etA/Gn2PiXBHPjpMc0v7HMJVHIvmWYShz1sXLn9Eevlh
0TQsAIsqfVWEg+JUNFxzCJfuv4tGHMlG32JBq7QWaFV8VNAKT9kxfy98Zx7L
ovHhhTTyo0jeQHDX2PAd7B+Onzg5vhfDdkeV23MI5CY4aoAX19eyFNpx8Fn8
VyyZ+8iOfP45cuJclkM4J8hWv0iAkVzQxkYc80km26nHkv+AAQsNDgpDN2/E
4RkiG4PLxHPpEpqSmKlLgivMR4RsXroUfY+JcN7u7jThZLpDODgORw3nLcJt
5eFSEjMcwvFGnHiuWIW+r4pwm5WhtkO43A8+4COWLehbLGhw3o1axUcVmsVb
d7f5XZHtincp3w/KlvT1KwjrSaflJ3cClBeBhyfXRxO0fkfdhTY3kJ2ry1k9
ceOflHLOYUSHPPscCXPc3+iAaCW7RdobY/fZRBh2sCiPV2AIwqy73qe3r+Nu
Z0SvPftRQxD90ELUQqu9+KlDEtlJlLGORr6qk4N6240ajgP5nkMQRIoJt4zz
dj8+HVzoexLtu4JW5boYV6BvoZOyGYi1/2YKsfwFkZYnRtOzH/iw8soa7o7C
F0RpQohlg00d+lrgl1nb4OBsIVZFxam1q2hGViZh7QlwrjW3ZXajIR9c6HsS
bTO70WTnlPTgAljrd0jd8ePSU+xqK1w2ZEvPZmUpVvQ9jvYCYq2yHzXNf4hc
ZQQ2m4h1OisnTQyx3TWjETuLbey9bhTTDxbEWyW7VNPmUPwHHbH4u/vXEbND
e8t/xO/pZ0hyWaesJjOnmt5ZBjKMJy7dvOWQ9GSAfDZkv5b/PYFc0cJ669rB
SE+ijUBWaWhKT6WyhpZBV3zMXwsTrOxS7230LRS0muMnWJGVos8kaBwSPOxZ
9LkoNGJrv6oVy0dXpYcC3JVlfQ5RHipw36uVRtpf6RYvpCVlOSxKiHj1VeLN
3+s88L1OoeUf3jNyQQP1t3yPBPspd3N9TSyrKDhxZsSyCnfycXCYqy67DP66
Cb6FIpmT7/qQzfx1U7c6Q1lnsXQ5NM1gcPo+LTn3fWyrTehNT8pWHwvMPqA4
Tj/rEGXe4hhW1quGbF3+3PhxbHbAsaRM+bPbQ0N/Rf/cb5MWsNv9veBSDbte
BfNr8Exmt231Kl16XNBsZcUa7auC9vklLT6cdoa0qz1dGs0saJ/192g0N0G7
UVOi0UwKjf7ZVkjZQCkYuJl4AJaufTbQqNHeA5uPzfspZ9O1mgK9sDl73dnl
y1cX0VudnTyt/uKL2rOZAfjXRS5Z0Vk0LrwQDK8Z2MoqQZX2lKBdjD1LQ9/b
j77FaCPo1XBg2CG/YyT6/KUHf2Rys7OFsJ4s1dD6xH1TBHo4K1q/mWVMo+2s
e4+2xbGUkx1Zu+nC2USxfEXSHRcqHZLm8IbaimmEmYEyrgaEqWWcbEZbWTWo
0p5SaHha/PtPL0XfYhGOQ1kL5wK2Op95qaxBK+bsgJgVZBbByT4AYlaSbGXZ
u0NZxIEMdiosjZ04kkO2vLCLnY6kymFAMvHgQZMTMvWXteFp/5vcV6JvMdq8
5a7vUi91w+Tf+PYP6Mn4dNlJFG+RtNfTa+jhsGSHpDlEqMf3XnS4G64gs1i7
L+5JkV1uTplDdhzJ9I2XfvuISIaDWIsiSmjxWOnrwGcB6r8RoJt5PIvXB/ZZ
Tw/9U28bGA4HsGV6vdq+YWZyeFaxUHnkCKyIwFURLmjLIDSN9pSgXaqyaTmP
e5ldaf0IvM0YvBX+u1lCVqykVXlNYFh/UxXrr8xj7Smx7HxsHCv8JMLELhek
cJH0FWapJ/SA4dqwnTeW/bI4wMeWEElO73pfd4CPgnB9lKjXX6Jtvb3Oongr
NFoXG0A7+/rQ5yKSaT5+iKQeDdGSKY/xx2ZaRAEvb6Z1UWRWsfd3hOac1h8n
BMcNaUcMLdLF7R74o55HE226O/uVZKYU6qMHtqIpXyZymRzC8wO2a7dZ/62g
6T/zi9ty5g+aXfFFKMgvGc7VxCvK4HzNM3vw0EmxzA5YXqUvknoIlzp86Iw/
PHqYXd/lUIut7svGNuLQn7Q1LSOORbq4UwRldT+5AWVJF27GoeztvoxlWrNp
9PZQGhN8GP87Eg+PB8rVx6INKMPPgLKkCze9UNa9WKgXE3Mo07rqi45H7sae
1IqvriebIjjnNNwy4Aw/A87S1LfMCGdS0O74mWMa4VxyyWid0WfAWZqmgQbN
KOqmsYcLaHxkKfyzoqjkaRloGFA2oDy9LTPcsWWfRzRaZgPO4jdDcO679rlD
sYyBhgHneQzn5lFHVhhwdqiAAWcDzgacJQPOBpylu8G5vqjVoSYGnCcP54+f
e54EHkiex3Dm7J0GOKsrR661ttPbXR1gJBe0zRxz9uNNJVyXhPCexCRHeYrj
KkID2ZNHdujKVSQ0KnX+Ijv4Gd5Qp5dND7L54KDaQVJqw62duDpFQ5A6h506
BrJHI1umveX1bLilg3UXXJDcwAUn1J7JILRpEEM8LoowaYinYUks9tXe8xvn
NCKxlsYeKuAtM9gyb0fzwKWnkfSq6xAB8a5eEDqdY24D8HcHPBE00XTreC2T
95c9TVJr+tE3ZYBPFYlHrVrJ6hrrKBuu5MwFW6blSYfnI/5xU4OyMtYNGnZ1
xSsYss2yVGUsAN7A++zi/W0Rru1sGv2cjyK5kRaiLVuG79zR8lLlNK06EGBZ
QeLOKwuhdWdezEcd+Be03RzGNZJ9SAju2YM/6+4ZkukdWE/MWlNSaOnJOPR5
KzRanRDHLvdeQZ8L2mbWdPIELeMg4T40cJbhYP/NvxRRwNvacUMXRWYVB0Np
bWk5+hYLWk9RiZqEoJnZZ5d7tWTBpPl+wIoLS/9GPOaod3hcnRjPui4Nuupy
Hhi4hb6FIhddYbkM7OHg8EXwbRLhmo9HwImLeoDQ+pNJGtvVbQ4G6pViOUN9
fViQlt2/iKTbaTHsg8e98C5il/zwpT6k4ShH0GrOpM8Q7PlzCylomY5W3zb/
Wv1NalGVYzgcimrgX1epMeC/aPfuka0+G3myoPNWHzfjfhwchqVVN89ODP50
03dfJR4rvKTFaCP8waWZrSt+RU8mFMr4WOy6EVG8FRoGSUwqQp+Lkgzuunnt
B7+1J2V5hRVk1/yliALeXNqgi4Lwp17rt+tKo+y6EUloJTx+4Ky+hHT7yldp
gN/hvxGPOepHVSD2ZL6rLuf83Fr0LRS56AoruenC5YgSblJL6OtL33jV36GE
HPWcIev0NXHYFySU1tAEUayxakJ3wUV9MvfQBHapt4+yoSbY5DoEdzb05KSP
UxMst6I9yPDprWC4ZMFWNEHQwNDi4F/Sto5mGR/zLujITnLaH6NxTUAaD7Ke
dna2os9FJFN5IICk7t2mJZO34xfK7hwlCnh566qLIrNCvzcItUbqSsOHW6dj
tRIu0sUdKDqmj0tPrv8hzTibhL6viSKASoysSaut0VWXDO8I0LdQZKcrNVeJ
0UXdpBb1d14k5/RRB8Y1xBwkp/02OtS4Y/jPjwiwGpqgFGusmmDLuTACunft
E0YOicTlkei7jyY8IR6PHP7gJUXT8tI7ieEPq6/uo8UZ9VzlwZbZKRJCY07m
o+9raCvDf+7STPKeaFpYO+SqRKHxuyNZS9sN9C0UyZRExNH4sGT0uenC1bff
Qt8mEY4G76XJiUXoWyyyq05Mp3E7I7XsIF5T+61HRJSo94No5sUu9D0mkrbu
i9TApA7kBPLRN/Y7kB5Y+Msq/DnKVksmGr47m/O6Nr9Bn7SKfRWkDxTs77Vj
/sSBdOK5ZpdmfFZvobGJlTJ4JDPxfD7QoVJixC8U6b6D/ZcEzXPJSvXwX452
sGUWG5yg0VwUGokOO6/lZRYM0b8UqEUw+oLJ9gUkas0acoJ30XvXLKelebmW
dO8Vluj1yx+avuCuSmGy3Er3gU8j77/MKnIKWNGpdMkFbTPLicun6SfLNROx
/TBraL4mg4enn7DzpMWHhOsYNGYVIb7Ln6YJsYmWsDVwZAPYvHV/63US5O2F
PhdBy4xN1urwMKvI5cr7n1oxIRUx61XEEp5epg6X1CtEZkY1miKC5pJq/B3W
DOtopkkf+cMHUvCBETeN3ZHFt9NTGzZYwq1lOmaMSw2ItarHoWz6qSK1Dr2d
17XyPsxq0FX6YKvBHOshviGyq42OGwU10AARxdAAe/3mqAb0XnOE7gxqgJe7
u6EBToo1XzUgUSRekXCO1Re2gIEFuYVwb3aC325GC5sdaJlRKayp6zb6XATt
QujHLNdahL6/FbTGc4Vaet8UtNqUTIwPvsWC1tloPy50cloBsHRg8X3eIPRa
ATR21dYp01sdcOBfWfzJCfYPhnY8gNpB8/z9NXYKlE5rn6GKJ/lXr7AL50vY
9Tb4IAy2CbQDXKy7oMgSlmBdJNgzAwrSXdM++VfsiSqIl2BJxbkqmmetBsNr
jTY7H5E8txWElMRZWcOFFjC86QObZ1dq3/XwgghnKIhCc6YgQa++N0pBwp77
MdkbeVqXnkntPniZtlv8wxLmvII4zGFuWbWZJp+pe0KZw2RF6Y5L4++rIGbW
ebFuRBTsUfTrHrhuoO9JHW2WFERJxqQvArtU3bZWBDX0QaE504c6JytOHgR9
sNyyequGnHpnDe1oqnoCPJLZcqfAX19oQx+mVh/O19Sgz9CHcesDzr9/BS+m
cmM0IhFcNGTVi9M4ilLHN0IJHJKZpCYsttPIxqfXg5HMaMtk4/KXHz7t0Cc9
ZdpxWCR0o29YXUWOpjk5mRxNLRB5j0t5Pv3SEU7zQ3n0F78MDA0R1pksPY62
G7tSkgouMJawYN95q0vQwNKqxjryh5IQyRVtM/nDZYer1VU9UiU/N1TopIeX
lvocVSHa0+OwdVfdLDkRFZqf/Y+zu5MULt9nDdU8UyFtzK418HO260n38rL4
hyc7MMLQGy0vQ2+mS29YTOhJ3VUNHA/u36cBbwY60MgP18INDw603Rve1q55
eEzQvJavosTTD33fELSgdZ6Qpu5WCTOL2Xvc4QaJD773E+rz6/eeEJdORIXG
gYvFBByU1t6jWL4rfkq9fu7lcGHF8Z2RWrHMIlzwq2+MKILMPtkXp4Vb5CSP
x0VRDe2ZCe25XFSoT3oGtKfh8mWHZCbY61zp6yasJQ6uhuA2Z3tcIO2uy9DT
WFfyQXA50K6WpWm0x0TcrsRgWpsZib5voG1mAzReDQeGlkcTeruzUBZRBjIO
jkjGhEE+7SwEH7vRcH6tVrIdtKs23aEUHQl7teguItwXbVSjmUUphvITRpei
q/ARJ0k/LqLctDnsSngI9MaMn1sGmzpY2aHDrKq4hlWkpJGm4TtuoiYj9efo
6pXkFL0wFfrTllusT9pBfwpOWmWEtowbU1vaBx02DXYXFk9Ef0aq4QT1p6dP
OeLSGLU99KM288h+B3FWcfkPd9OfEOUKuOnWn8GmZhNlQ+W80HU9l7UwolSG
rjxAutLZds0hoQdWV7zdp0dXYJcVFl+mb/yHuwb8haLQhq48OLrS2/2pQ0Ij
dGX3i689ILri7CrRKdIVk3IKEWnoH9TCzEy/YtLKLA4B4wqDPvU2aW/3b5ED
QaEONGe3Tp8NOQgu9Dm7dfobaMNaer9Ra+kzEjPU1iJszRpCvLfpkjHpL76G
S6vXaiX7NjkQ6Fiywy++SN7x2Io+dZt/ZmyKVjKzKEV2SNCoUqQnZT7iJOnH
lShTrjA8z6fJxmXPU6/lP6LEczvc0vk8RFnhrWUilIPSjz7iSpSgp81VJboy
NOzApplTIv0BP+fbb6JvZjocbQ9L1BE+QGwEg1vrG/lr1VDfVY1mFrRLVRWs
q6IMjLQQbZnZSgq1cLIId6MmX6MtFrTP26s12uOC1l5ZoNH+XtBuNZWMKssX
Q50a7UlB+0yhsS97GqWXBG2gs0ELt0jQrlfRUel92d82qm63m0tHhftcl+9i
J3k8pqRAbvY4np80WRWjdXGJ5E5FKG2L3kZrMw/L4IF7OwvOaZnMQxWbwn7K
1q/cpjtPVMxMS0P3WzzXemiPxRhP7Sy76zot163eqiHUdx0tvZi3ADy83MV+
v9KOQ1XXIetHf3YhLyfvbAgHI7mgrRysotIeE7TdL75OQg5YMdbcGhHWxSeO
dUQoVjBNcB+9E5XDHlUMA9Wb4zuLqkeU8WFVuQ7Rq4m4rLWmh9Xjjolm3DHR
zNWwKWveq6EDu8Rbl9hI5HAq8T3UEMBACwuyUHldFBUGNVS1mw/NuP1NUaTp
1buIX6yzhCQUO/DN0DuFNi/1jvb22N9blRq7cXAV6LObk3rHis7msct17Wgu
JJxhPZeuu4EH9K623YFdE9c7cqq43aGw+gkRjPtv4lWK6909Nkff9YWO6x2+
0IHe6d66uHI4vNClbNpE/N4hDi90ht4pNEPvZru/c7YvQN2+M6XKxhF1s5u/
bA1XgZH+FW0za0tNpuVJESodTrFmA4M3ZHws09J9AbSjtRp9j6FtwiA9w7fA
h7ongsa/7cla2m3oW6zQWGHgNtoporsoNHLzsm2E9JzrXn7lNUP35q3uifQN
3VNorKe1X6P9qyjW9I43eb8HuwB0NKOPM/RMF9XQMyXp6dEz+tpKT+K5Jkgx
qzxY3nnbI+DhUXxW/sLQM3t6U6Fnl2/edCjhZPSMRjlsj5isnvVcv2ro2bTp
GTm9bT2h/mho9Gs/AQk/Ch7xTVL9/YVI+iHWM7e76RnSai92mWl2SvVM92sy
7TwTCQ6L1WODZGK2Mpvk/DoxrmxiAbFTPauZfH/m476c1NRdMPRsbOPGfxDJ
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
sUGMJgaSSURazBqbBiCrdSHNSjqg3M4OlDxQWll7SQHEMKX+TJBHCvLfaGp6
teA8OsA5Hr6THc8p1RzfWFlTaa1k+Jk4jxrnjByIiAc8B1KtnoeKMys+38xs
CZmsufnOc+xq6TUYgRN7uB/OT40IZyhY2mvLyJ7sEtmNIA/2Vr+QW+5NGuRG
av+vUcKrDf1zC3j5yyV1tDsdrH3XhNeEd0TwzuM5N9DzrPViE6PbY1jukVyI
k8bGm8KtyExBGp2N/zV+FT9FQJerLTnEilKP4z6JAb8ha155na7z/h7ZExmD
uvxkbSBp5nsR+B+q/PBxcNfn2LDQnNXi2mYk3LBQWEcX+IpGf9HfQOnJ7nU7
IMYeOJrw/3ZVMfco7clutF3XtnW14v+9+mqxjcSnHDeWBOF/0m1hZycLL7Pa
kmvSN1DK7OLxYvV+1uq5b4wj5i4OOrW2tpFXMFCw6PjjU5rxs/ozHq/w7Hvv
4YKl3zRNMQamYGkwlP+1aAjSd1HK9O2lwTRscyamvorSyg59VA4xlvxBLvzT
sJXhNOg3sU9oh5DQtYf0q8LGiblaQ+bozUN37y2mEYFRrKy8/dt0+3s5MCS1
uncw87Ci4laaHFvM8o5W4L8tchfdvT2L7QzYTPOKW0A3lczzLH6Wy6SU/IKe
yE3F1FdQziIpQcuoo74aUqyjlMI/vbovnOQlREpPaB/3tD3/qAvIAFFvT98c
ynrrVdPc0JaTHaFpNvkolOZnYlcx3DlKXfRS9SIS3lT0Q7G29FAifb2leezC
sVyIwS1DNq9ciWPKMlOyUVeQVzeYTSQ3M4p2ZcOvqp7gRW4qPNffHrS+93O+
/KTLoEVnc+NQjUGOVejVmLZU0LxHV1OauywTcxPzKY655wDMN7/4gvr2+Xln
Eyxv234TYsyeX8B1nkpRo92Y2zDfSGnAq+/ilC0G8hlt9pYqNzhPCOJbM8kG
MthAAc+1hbuPqs+W3KPgtLCuphtirPLoCQnW/eW9FYrw2M+9+Cv+3ov0bL2G
YgeLYo/yEzO0SF3GJgaRv9NmarGqgzEz2RSE9V0xOK0/FglrbatVD8SY/WQ2
jkankEt5jdgPR3XUpO+C2XJi7O5DLICI/neOHn+9m2io0/baSEhAPEBNQ9Yn
qkeoKfVc0VFO1/zWiYb/J/wyjbW8VZzRULOLM7or1K5n9AB3+OoZVajJ8fgI
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\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"66ff6fb1-606c-481f-80d8-0b13efab1759"],

Cell[BoxData[
 RowBox[{"{", 
  TagBox[
   TemplateBox[{
     RowBox[{
       StyleBox[
        TagBox["PlanarDiagramObject", "SummaryHead"], 
        "NonInterpretableSummary"], 
       StyleBox["[", "NonInterpretableSummary"], 
       DynamicModuleBox[{
        Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{"\"ID:  8514\"", 
                GridBox[{{
                   RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], 
                   RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], 
                   RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> 
            GridBox[{{"\"ID:  8514\"", 
                GridBox[{{
                   RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], 
                   RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], 
                   RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"],
         DynamicModuleValues :> {}], 
       StyleBox["]", "NonInterpretableSummary"]}]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->(""& )],
   False,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{{3.939306712312532*^9, 3.939306720063068*^9}, 
   3.9393067848227377`*^9, 3.939306829082273*^9, 3.939307036935049*^9, {
   3.939307082149226*^9, 3.939307105550198*^9}, 3.93930729255344*^9},
 CellLabel->
  "Out[255]=",ExpressionUUID->"1749f15c-76ac-4ba9-9e68-7f619f204f1b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MyRattle", "[", 
  RowBox[{"{", "pdw", "}"}], "]"}]], "Input",
 CellLabel->
  "In[248]:=",ExpressionUUID->"7e321fcb-50d5-45b7-9691-53a911a51c3b"],

Cell[BoxData[
 Graphics3DBox[TubeBox[CompressedData["
1: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
9jkE70v2wOKUdwHJG9neECfcFck+97lumvUhBQ77fI4V7lZkXzF5XtltHw22
qxG8M4bo60Web9Q7vYPtBQTfR/b6m6kyD1S3YoccpvWY+dfcwZvT+HkJ5GvL
2kO0wDsYf5bR7nlymQZ2apwQea4qd5v3MmackBqfRP7uU6Pfx6W06zJueUTz
2Z8zAj6E4G+jie72V6Rw6msVtpcS3Jjs73UlpuTHTcNO5eKQF9d5FmuE016f
zp8vjHzY8JJG+UDaV2RgN1B5aVy6YAMXHOqtqV8Q11+7iPaUDP48R+Ti437N
fgVeyfj3iTcKnuvtZ7tUT4c6bNwbgfbnwVH7VB4MecfB/DOS4CKMr1u3fG7Y
YlO2V0cJ975kn/nYcvSHVmu2K0YK9y8RRH983UHEt84ROzU/Gnl/qfPyheDq
tKP2hfpBsn+bG7VVCsb5wQMJfp7spkMlJ3l9Oc72BoLPiSL635y5c0ZuM8QO
9eu0dieH6oKj40iN3yLfOvJCwLTttB/OxG4o1m4kXbcFO9V+m0UPp65T5C83
Lnr67hHtkpn87zXIpT5uG7ERvCUDe//uqui7E7ZzwKm6Orz2Tyl2TJCiHZ2H
1Hy6Pxac0W96z86aQ3thDPb0Z94iuipm2BNOK4tJdFlw7s60VXXbBPXBnLk5
N6vrJyF/qtR/bAB4ihP2PYvzfO6KuGDnfY6QRa638sexh+AiTlxezGoB8kOq
SzXrwXUdsbsciDMS/e2BHeqDeR17uXUAONeB+2RSv8EqyANsZyoMAZdmXPZ6
yCfNPj7YedNZ1JHL3au7vwfcxZ47hfeBCvnmfsu3WoDr2mB/lXuu6WOGL3ao
A9br1Rhd0UzaOVZ0ntMCvSdkzh4CLmKJ/fGige6vtvthp97reO1vit7yGZxr
zk10ef/wNfLmHY2LvoNLMx63cUO0Xgjj1PxE5CmaIY4G4C5mdD03C06+0cSN
puAcU+yHuc665Q8Z54+3WHCsHg+ZUwUucoxfFwu56+f4P4/AXYywRypGxeyJ
98dO9e869hF8F9H73I6ZqnMgUMC39XCqP/hHjeh6l6UsfhxhHPLAD7+N+nf2
IO3S2fz5ZRlqnBtPPOfmgq9nPK/83o65+oK+uodDTri4ft9UBX2m/cgs1OF8
sJqzeMqr46KHaDeNxh7hlvnU7GcYdsgDb8t+71HXSrvIGjqnt5qz+8xco+fY
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
6ZIadeqiAXXyXAc+dv3okebo8NxF9juDt2z36+8s9FTBwy/eVO4QMp465pBv
bKjWswzmPY+vewOulTK0YFwQ75WCF0x8nb5lz8pCdMwhS/WvVkz3t/J5OOJj
Hzo+ySGDO9Q2O36qmnd43sZ8cmMn74+TQpg+dW+YrW4HPerkef7DbumuEMv0
WYdcHU+4NPIpDA9i+9DSPaf2PV5Mnay/g/9zcV5wfjnvrrxPaeoNj2+Oc4OZ
vkXmxdVF4zdSJ/slx1g28W1kAsKc6bXXTv3754gtdZL7BS9LStz7Bj2Tz/GC
F1h7tClFLxH8qfOl1ODH9mLfZCbd95kwfYR+q9VyQywbjb9eujfkeBkenP+Y
u+K4mTrmaaW7PtPfbU6fuuakOXVJnlafS/VMbl54inf4nWLOtrGTebN365l+
fvXQWr8iK+rYp/6Rv7bfHnR4ryF5D/CqpHtLM9CHCV5X9lFj1YWd1Mm6EniL
Gpc/G9HhvZv0g/uynjs7s3vlnyu8W8ZQX9attsxkrht1Umfmz3pu7LQpxUfm
Y93X7Xxudj03bfnV6DPortuom8qqXJ3125O6JDdlJd2n2jBdPWL5MPdSH+ok
pwTez6lojT06HI+kX60Np2jyb8RWdBlr6up+s+9umuwndmfbJi6pt2/LTU4s
TbJCh/El/YttudlHN5g7oeNxgp8aFHNjTF6Q2Ke6NHFJHtiV6X4GL0P3jwoX
ewXDXdyY/m+1/5CL6tHUJfXk3bgFckaP76gLuVnSJx18SfeM82XoMpuoL4gd
OC1w0S7qkjqo8Pdp5oPC0F2NJfMz4PeHhMVGoHMbqReEX88eulNwzK9OV/qo
OmKnkOckOUDw2f0myI5Gd11LfeO61wu/e0WLXTOkiWOudc3yZLPPXkLOkxwP
ePktp++16Hic4M80D6mVKkRSl+R1YZyTQUfvKAh5XXJ+wA1ytG7eQMfzBu5h
cUrBNDBM7BVNnYwP7rez+e8t6Hg+wdvLDLSwQMfjBF8q51tg0z2cOuZvyyL3
j7JHxz7y4GsHdAt0oX9vRP1w0ul1LX0jqZO6XuD/jhx0uh26jAGfsw3hpk3e
ulee+hLqx+uN/wzYE0Od5E41Q5t4QxvGKvBDX1QU+1A3KGxYnqoEV9tw9Iwy
OhwPeuT2qEX9oqKpY0643bMhP3pECdeX1EMD910l660cJVxf9B75/ebEzYii
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
   "], 2.],
  ViewPoint->Above,
  ViewProjection->"Orthographic",
  ViewVertical->{0, 1, 0}]], "Echo",
 CellChangeTimes->{
  3.939307042404907*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
lK8YMUPJ/+Y9ZwkJ5Qd23zcSuhr7huVnLb0e/tJL3ADRZHu9LjLSKnsd7fU+
yELPcN54Oxx/eP+qPx86vOLEyXt1eOegalp8Cjv84ua1zJ6tFXe46XFpMbna
e4MMNbdKdowaSGta+nwDQfM0aP1Lq2cQBDjVw2MyINCWDxp0EqC9y0ILuCBt
CJheBBhRjKs7vpBQzlx6ehP8o9LLHf9TvcQ6wMD2Yxjx+UNHwYdDXnkFebhs
Ru5OzjYwTAkYvi3EoDP3wnfmPCAEGAQCWNzgwDVHRPpy6eU3ruSBDw/kxcIB
jJRnrwzdNWUJrQQkiKraEDAnENA+8JX2Rtv8niAWntvU39b5+pJsnT965x9f
af2df+TgaeTi9AJOjc9zZNY3DPh84ElmHzhkzTrksd7bnpvoSNp/TDPRsUiY
8oCvD9yUh5HzQt9819b51t/5yFnBjZ1duOTkLvxZZ4Gwt3GjPAN8eODCMdpG
lXftcrJml2ORsN9xdJ9mv0Ok604J1fphHvd82IsvTmnPF/iiqe55OuZ/PsVj
fs6uXTa1V9XeF/mz0D06X/uy8yj/shP21jq0cfVas2+5R9Vvw/pvueyTtLh2
EeflxadpPPX7sswsLCTHZaibddRc0WanJfrOZz3usnStAyVvqCAAHw75/SY9
CJL8DswECPze3DWXQaAI0wcGRRhAMK3hEOZhb9TBR5tacNKjjMpkqCJb4xk5
7+aVHI1nx3mw0kXwFnHel31NI65tzMslDdlZ4GDXJqUy+XygTUsn89TVCSeH
gwWWYzmox9eS5vMx2pG2AgF9ORkzgZTa+PNzAinxa36GXJc465GCyJ0a+sR9
EZGWFAj1XYQGxQdpxuC0ZQrF47t/pN9j5qDWBTDpjHPLBtRDEjMbHcAz7LbC
syQDDbXo7qW94GgfAZXR56UfD8vSOPxWw6QDAOI1a9YdXClq25hyQePZAHTv
oUY32RBWXvSWA6cHLGoZYt3MwyKdBaTo926qMw0bKqwKFVMyC5H5jMPdyQkd
/yiIhR62MDMxWuA56mYmIR8FsVlLamwq+4KVc+qMWPZy/lDw8Gxw0r4DwydC
Zgvi7ERq3ak0ICmOEtGt8wUg1+rLJgqQoYY6TPobwcFspB92JgyV52o8I+fd
rMjTeHacx2YjnGfgvFu97RrPgfO+7G0Zkd+XPSbeAtKQmSjZk6GeVvCRu1c7
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
cbTbHp+VkvYS9hFrKu94+ftn9I7XPb47Xldtl1k2/I43+o53a9I3MyNhNn3j
zZ4SfdMqy+c5U61vvspiVNV3fVr1zV9xW+1qJnGbvknzWN+Skwonpm9GoW/q
Mr7Mdhx2OJskhufL4KFAOfSH4yjyonpU33d51tapbyoqbtn0zaZvM6Zvvbe/
nIy+wddEOtcjpWcS2KTv+zwvm4KZRGxTMGkeK1j9wAQnkCMUDJgwgfyfPJup
0y2x4hts6rKl3n4//TXa6x3CQgaV4tgP9yIXp+XY599+ifb6hMiMbSTZYfE4
6lCs5g68vR1Hh6bKEKC6lXbiHCTE4W5b0cZX3e15AQl7DmuFPsl58T7+tIAX
1Hw5Lyc0glxJyQRHywLqQNL3B6L1P1urW6b+Aj6fUAB+khN1XuaXbvnhv6Mg
/0gza8bZ4We1YtV2GXF6bLZ+1TsO/PUahD7wF9noojXx7P/5KuS9M0CXtZHk
JZhng5QV6ODesPd0tTliVhsjuRiRbHbJJjXNQhF9MslsOT6cYH3k4OmFQoS+
gVrFFnFezI7daP0La8zEGrJmHfJY760vmTYKm5UcsPIVhDx5m0dGB728Fnlt
+0gTSXSmVvJ2jo6TG95HG1e7463OP0EH/cKfALb4zjq/FUwhXRlwAjM4yZFR
OjwlHcAlJ3exkB2jRnKjrhB8pB+fZic2t8ftx5UZJ2QRXa5lw6JrI/fg/qZs
ezVH0nH2iFaKgfMG8xM03pOc139Ry0JaxKgD6UoJNcua1gzf6SxgtbnbmG3A
pDNDsse99VifjNwoS6dChCzs8RfteWZZ9KUeFtWgcfkWBHBI4wkB3GooMMuj
LXY/riuMe49f0hi9F3fVZphdMlR5weyS+qi9uK8xe+EoMqtmMstZyGUxcCl+
mCxk0ptxarjM8MCFY8Mqa69vFMu693wAbzCNazMXRn/GUZMw2nK1vLarvUU6
k1n+uCnaD7dVpnydV+VaTqwGNDHZmKe69CgvWT/p02Y16vnrE5z8iVL4pE+v
sfec+alTmXvN8sY2Smab5Vls85TP8vjx8LjubKqWdLqUSRbKpHg6r5Ds2IsH
I4mPLgcfzklhqwOERv0Pno1NmeBnL5RJ8V+2nLTWNuLP2tokO3KtoYVqC1Um
MtTUDI7ygNrj2souXJ5dJxzTKCP4oJpN183icj8+jvNzq2QWLeujJUfOS937
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
75pGMPLik02DKBDm3bBIuZ8WvH5sDNliuEShJza8ow+syM2xDr28lKxY9JJh
Tumwm4Np9TWLe58wecNOXpGbtuMYTcyWKNCx/KTTz4gUTkXs1FOVu2elbgrH
S8U+Y8Yj+LLikk2Z3vjt74wqj2dKHuP+QOVVPay+uJHVuVrwvzbXpW8kNco0
rk1O06+VG1JPTspePFM6KLlRoizsddXZTFl/KbtRdw42puov5TH97motuKQh
7CpM0X9MvMaPE1vffHwe2XTo/LBs5RnpuVjF8+cCg+cQu2w+7FqnrgPDPmmv
wHK5ePirbZV6+Nki/Ie9tabwv2vIh027MPz1ykw9/MNC92lvzaA0G2iSKQ4e
RqTpw9rrL6DuxtU6za/rkm2BiKuxiLKGvDNgbF9CWyF7Nq7Ra/FVrZx3RUCH
kYDkgvv38jDhMSIcv8XzOOu1Y+zeXrSWhoelG4+xY66cKhNSvI9wlYmJg5K7
Q8Kl5F8FwUM4B+sQu9yLnq6xUyV3fBCHho8T0dar82An3+GJ5mTuoktk2ePP
SkNX+f2AxsamKiBw79j1O03er/jOh2HCL6C3D938xmaTd9hPX7N9Bf0USr7/
HzRw4SsoPSyiO7w5xhQ++Ikf0DW/XKelNosd3nLQ5L1a/dFQHVs5Zf+au5a8
l7aSdWZGc1xyF6/Y9rRd4KKNe+HwNtTRc2E/pf150SjZha4u6lUStm47xjQa
reFwZGQFabmyPLY5WtUAGXXdQ5qOBPg9S5MTs1C6V1QhJyMN+PYLKD2ItgPI
iHUT/v2fsL2/fl2hkT//DxvYPwEXSna0fVh0aKjUgWHtxdSmiKhXqz+kEREH
UJotshA8dxGNi8focauuZzWC6lmdJXSr/P6dRu9LROkBUSR61qWHe1Tc7YLT
50y3c/OCxTRk6dszRDQb/u0Fuv7tdwwAUZi7sPKmydlF1Jygxqi1rMelaVE7
yMq5z9NjRzJAgkUcMzU1EBQzwgnKkfxdu6x6rroLgmLjaRcdMuhlcZaS0Wfp
Z67t0tDYl39Ia5vqYRb7du79ftkpk3ftgRDqLj32AHortDL6DdpXnYaSXdOx
3pzfyuAclprOfXSzrntYi5reqE41Rd2asJaW7ntbEVEbvEXUPmpa7PqBjNVX
2XR040AJvpOKx+btvItGP7NwXFgLTSj5vHw7GF49YGuslbqHNB11RQfT1s5W
lO4V4WoP7SCnozai9CDaDtZy8jC4aHbwz2jqwWgF1U7W11hP/rt6vzS0JX4D
vXgqSgGBe39Qc06miFcfe/U5ml9c8IBIvPrAW7SupQklu0i8LfO4nslZIlwc
R0tFbTVKs4WudO8qaFBR+qqWG2hQTcnlvvESKS/JniEuSX/tJzQjLQWlh0Vy
wNeBycUakrOLggJfjVGLrGtRO2jVvrdoc7sbvaBBFbUGfOUu1nh0Hzm5aYVW
a4r6SXaoTsIv3CFfYZQlO4P31spo5to3WHEBBTf5sMc9epQ1JQ6HoB5Jr1Po
tg2nuHfcuzngkoaFv/x/eWpXZF8pxNdvAmcQTkK2DqyZu+jwOmSHVxZALugb
uG2leOnU1/vVtJq8j/o/QxLOXx6+++s0dX/5DwYNWXvntZn0d26Y/dVafwVc
KM0Wuvfau3Xdo2g72fXWDqlD05Gdrqa5qm/WE+bE1ZO9i54wjHKWtGkoGb4n
/EUtsJiVcrtM5fcjSbsfogssyzUGDC3Oz1LUusgFUEO5p8CFkh1s8agZS24a
RoTEJB/HwNGgBWI4h3MTSWdx0ya4KSdPosnZGsnO55Yq2pxJdrWh1VTv8Gp6
+9wkro7PjIi69Vuq+XHrFJn9oLWd/qmnSTfnNoaqRW73X4nqGYqboY/PZe6G
Tna1DiaCgu1kTWcouFjL+UKVRMTcGTdFh5dEzpvHeq5cpqy3HkY/uK2Q6w2e
fTq9jarDbRgq1oyPIUvZ1fom7Dhwg4NBZVx3o68eXOzTriocBAJdX8817FT0
V54Xt96H/b6nB245a8uleOuvFaTzOLgLljd095uSFRD/pcjp3dDTCfQkbwau
Jyv9FpDo7YlqgN9iNWBeoBgsnOAmVN57QUuUJKnGlZsK62y6quvE1EQTIWeL
koiGkRZG7FBJVAJkkyak1cwgoStibQ6ybnEITcqoB4kVnm+eqamxR8tdA8nH
2a3vtf0/RBktoplG8EfWVdXilTXYgTv63KxZbO/5gzHjo94sarw7f/40rTny
Du1rzifsSiLt1AfpLd7dJe9gSxhaVpQ7Q22K8rc5SOLy+bTKlQcSNnqaGniH
qunHO3I2cj8ty60FY3sYbR9WVdgsdWDY2RjYqAj8kHR6eLsWnkQeL7nVkI7h
ZjpZ25X3YFNDVp9xDv/PbdvNyovqFdzp0EndF81f5ka7oTP2Q0E5OQgHm1Ul
5Jtev0ZCuMiwSH6pr2022sb9kHxxPyRfjXDgQsmp6YBwuu5RoeOE03VafEg4
cAHhSPCyIPrKY/9CjuZ3zUBvB1np+zj0MjEIEg7VSDhQccJBjjBReebMuLJO
3pDumiust7ZFNyff2cLKq1oVEMaGgL6iaDefzTPoMzXm+0z5KDR0spbGpFGb
nBwLNWz0NzKOYQPG+lxg4NMyt3kmk3aKg5lceDATfPLFzYlEOKfQcY7pukeF
jnNsQHzIMXCxmsP7aG1lPj30+susTTtxyWW7h9ak7GZd3Z142R96O+gfO5vp
H5qr8L8j+xTt66iyKRgWiYdRNZ86TsuS9/mIVHsbqmnluTowvELBVkhltafJ
lXOfRo+b7z6lku3bt6B0C27e4sAXi5sWN7Wf5OZfyDoZ484lNG7nmz6U5392
5nlmUsrc8LZPfjEwLq7XCjBotOVeQ8abRMblpOHRox6sCI4+PaJm0aIeShb1
vIR6hEbuZ7WFDez84TRWUd2tgADLNXOKB+WGU08OnHcWFLLrTS1gOOnQpn1N
HZjL0aXefcK7ptRNy2gdqzhThv/ZB06qKa6OCaWgnGDtSjyj6+TxDxYth6Pl
uQzP8ZjeQUsZe3PBRVZzoQEMjwDsmaw6p9wYjaQlwrriYv+f0/x06AzGhR9g
l698hNJXNR1rutwDLpScQgc9VKl7VOighyp1s7XQ2EMVOjBs75u/oXmVPYrw
rsksNHrTpK0HaXFRqyJivHTyLPvwSiUYHhhszuuz+Xoqszy5prWdWhXfDjeP
L13q4ab+oMXmUX5AmUhCDjXN0SLkcIRk7TWeNRneREgna8kfTD7ebhq/uEku
uvv/+OeyWsamqdQzbuqljmi1rWjEh+TWtX6LW1pkFrdGzq2E558hkevJpOfW
5fQ8U8YHc2vQGpzb4NZdtlsvegrNGhuvsSZXk82OtoNVnciaCnxTA/z8paFv
PzEf+EYCfOeRmO0JoAO+/S04/k4kM51JB9W3KXTTpCfdzRs00l95gbK+UjAw
NYXbM+mfPqqTOjCs9WwmXjquJOTvkdpZn7KvKsiHkr5OePIwcAZu58TaTktD
k4NfoXmlpbTiSDh/0tSez+VZ4gwEF0pOoeurLZHX2OagrbD3L3qy+TWRpXFj
6zek7jFfErT4XTA2O9oOsv7No5igYLKWkEXisSHxfbK4KbjL/rQg6KnNO3Td
6BPU5C26pFq0YlsaTlB9rxenrvPs4ipn5DRTz5jauBP0n0T9dVU14iRGz8TG
maSuKEW9nhZEjq5cCAZuAd5NTliycslynAQkbs/kY608exVeIpY97g8GlzX5
a0yWOjQr58IhN6dmoLeDBM1dRBPx5C9/FrvjyBxUKzqL4feovI8Wk0eDyT15
nm0pRpXJg5enCybL3MAUmwG5uV0Sa6Aiy9QlY01iY8WLJxW+pHzQ101ZfyXU
PP5X7I6gNWV58LG6v9I2i378QbepDu6SzHLKkyshjRZn14DhHUawFVLe9pke
Ts5NH1OCA/poZW01njRjR1sjuPEsmovRb9B6WAcF3g4UW9rdeCzNB7Xpc7RT
ashnl6L1lO+A4DgFC2ZezdbmXwHBpQ7NhSOnpyvBGw3POknwUD8/1n2l27Dp
ssKaMnL0zZnnSN3pTDU4eD1eJWe0NtX2mrIw7qSnTdkFnPTvnQmdINLLg4Hl
3dBfmOX2Re09ni6GbdRIz8uYruvEd82xJzjs+ISSROjt9cX9RD5HsbXGJEaV
zPpku6fns7pLTYaeGu+9XbmKvbe2/JLbJnjsgqc8XVe0fSSmyP6QSLpt/Sm2
8bWdvAzcxQuac/SCKXu3yW6JiaHmpheEhXMmb0JpRHPTx4/JIjfTgclyBgkM
sK6P1AAkO1gWuz0pjgm7Dz3rD7unGIprnrByu+zeaHwxFYUROKN569eTPSHL
SMKLT9H01GRFpaHz+JtqEbeNORwZwfXxeNyCQew7ZrF8MrCctog3V4vlo8Xy
5hbzXr0Ty3I1OGTTrc8mHIraMP8s13RgdlVyPKns+ky+WlgEtwg+nQguNmMj
iUuQ0KYyTi5WmyoCBtOmA6sj1/waJa9iNWuu71e08TGaezB94JiZxXTbRDL9
+JIl+tl4FtPFz/uZPqbtN1n2+EJKvr+I/uqFX8Jaz8cX2maxuG2x4JKG7v7J
q1b7bbHaYrWXstppZLXKOjIIq4tlrcnvOsABn8Va8sAlDe3LilIDF8z3EkLT
0FfXKyTQf4tF6HEkNI2KyqO73sngnTOwnezIHgoulrY11iL0xBJaMRJav+HG
iaKabnCnPG35ci9qqmliBFFg5o3F7LFmto9W/qaohfDd+nwGuFCyeT5rW1S2
qGzz3l43TGCLzbjiFVSm8fHFPvTIvgKeYtLubP0SsWfnuNP7HlGCYSasjD2z
yZWTiXJ/SdscscHg9cJ01FUkxhH3de3AEF46Oc9eEN2Qm6nB9v8tQtbG7KaM
F58bjh6wYYtLDwWnzhNALQqcr0aEBozxE4BMbGOuyCeAFlgctlkVdwQ/B8Nv
+tH/62jDgaK+PAhi+C4p3ld3RZ/59rSY+dbd8QHqusqqxoe6RRHbYHWb8SaM
Jk3Jh++9N340NR9hJY6onB4cFbqJ4ajDyFHW39g6k73fBJu/9VQ3GktwZzRV
6Ln4XJoaXwrGNhtthZ05fF7X+aLtw3JPVUsdGHZ081H+6BZ+JypNfofCDgs/
hZ1NKdfjcgpdbupFXTdH6HISi3Xd12S405cHXOvkuhpM40LSeSz2AMZuf+oZ
Vd6Q8WTszFsxVh6tYzFVFHqcmIo5myX2n3/D918H0bVkzXI1NDDAVPLRoivv
acr9I0d2QusQHBVHEJCgb/jSpMRMlO4V5TmxIUyfSfZ1bWU3WfGNxyhNPkGL
j8SxklNZCjh40JTQ1WzfpgiU7Gg7Wf6xNHk5vhiRuU/SrVujxSb+LC9BO7gr
MeRtOAncR0uU5Sel64nKgyTTd0Tpuq8JXdYxTzht2bmTZh3RU4SyDWRvwqIf
6/Vusdc2PHuDfeeR0IjjU569+pTJ+IOU9cNRhzW2e9BW1Kb+Dv1acSY2Ob0i
UF0flWiqiFuR2fgGdSz+Io3dBUdPgq2wPWsPkugzTRhiDAhuXJ1VKVZnyYV8
d7Y6izWWNuomeUMEy82/rICgDRxJL5sdbR8Sc8a0+gTfg8Uh4be71FLPlbeQ
muVnFZNlfs9LQ/f+NJAGLQ7GFYoJCRmzQKmRWgaB0+5Qh6fdCd0XNR2uYKRn
y1CyazogtR5uttDhCXjf+QlKDwodnoAnwjnQRlKbsrdu3gv0nXeiZohLQr71
Q7oj8pAWWOhWPfEDuu9AsiELYv2lJxqyUoX1l+kzRFra+sssTMG7SO3aHa0f
vSySu2sC52fkqJELfW0+YL+EHrfN2LTy94xpsZZiz+E/o89Yk7fpNdbz/du1
azc0E/LQdM9A1h2vj2adLddY+6UrusmP3MOqyhoUEHi+2wc0OILEI9/t/Pb4
6zTx16YN1EKjrJDPSrbwx3Hpxl+R89lH6cXoYNrobpqFao263IXSHKED6krd
FzUdLd4dBO0xSnYRriU1Xg83W+hqD24np99dj9KDQnflRJwezoG2Rl2hA0NT
f7mIZp/LniGSO/LKj2iBq0gLLHSxSxfSytoqQxbEykpDNFW8dPUtjTNEoaGw
Le0tmnd19BSnbqPoL72M9l23s8YjuyYla3PzPOHkC8caP3XAbr08sy3mE3gm
jKooOby96xzBX3yjTl4Y1a6zIrvOKMlNl7yUp5X7o+lHLW4w/GZqds669bTm
Yj1IpOE9/SOL2CR6GtCTtt0uPXsaLw4sAPZ8o9OMj7vB9CwKDVBDli4aV3qy
jLQahW5dl8bf6ncsfwdcYEjC2S6LnoaoJ5Kef6/5yCYToqSZGfX0SHQBqy5r
V8DB+wT71hwEF9359i5Wdvn9ZUKtidcxNLAR1QqLDPxPmpRdh5JT6HYErqMZ
Ba0o2YWOsxFjBWmWpqN7Q3fTc64eGvHGDtu9aCvseFgUuFDyRdvJTh1Kkzow
bMdPltEdm/YpwhuO5hFRY+52v7aBHkop1cqDbET1+ahYumt9HNu/chPdezBb
ERnjbNQzNkfoKtILdd3XhK7qUu/AArCE1VtoXFyRoaBOVu1qNeXmxG92Q6dl
fBvLuvwcbfmoQs7++kVyKCwEJfHIs6ho8woqDui9ii+1vO3R96lSNJuI5hGl
X2g7WBEydx5L3ZuEpqLIjf/NFe77xCWwz8re6CPG7a7wLNe4uFSU5LZYnJh6
crNEuOU8uU+vd1PWV8+JCbbCfldfDi6UfIXu0+4WXWdH24c15KZLHRhsK2Ux
eDtJt0VEG9JHeoILGksSOO9pEvHUfLqJbFY8O3Tp2Zsjaog3lrrua0LX0f3x
oGLwxpKse3ONsbjQWOrhUBcobs849WJ7/yA/OoteLEoWMQ1RjyUxK1PzaGl2
LRh+h8BWWEnMkZsTU1x7q9dKbY9np/ymb+q/tte0yv5rxJNzCb10yVSZt+q/
ym7i2PdVOf1IZGzG7Q8Afazrhu+rKqa+6gqhs5jn+Xkh8y5mlg4o3ZDMo2HB
m320rfe4/fyAgprZKCvplk2iCDdKzIO5FMdLrpgq02LeKDLv3uGYh+WPDUsk
Icv207jXCA0NibPdB5IYYuUulOYIHQyxSt0XNR158/kgdu5CO0p2TYdfR2S4
2UIHX0eCfxZu1PFrQ8mvlx8Cw68Fm/No5VFw0Zx9qRw7EE4bdhXxYV43P/cq
DYs8NUNEvX7hyzTyANUCC92aH/yCHjjiMmRLG3Y1REPW/fhNmnCiWkRDCBeT
TmEJbU+IEl846ymxiBroqOseFbrqkycHlhjoqOu0LMxkqQdiWWbULo/ZsQ3/
XQcj6HqS5CNyz2k5qAKHoSUhbxLPljLw/T0+Rf/WbtFS+006WmJvuj8lEFpF
knE43HYfSBotwYXSHKHjtNR1X9R05OjKZ6BFRMmu6YCWerjZQsdpSRLJMqOO
HF28mJw5vEV1R/vbHGgrakeUv36tA22kpdRhXnkrSU+lJswQ0fBWktKcNC2w
0MH7T3FRriFbSEtTNKfffJ5WVRbKaNLe9Kf11aUoPSFyDWfEytyIqPGMWKl7
VOjaDDUjSodnxErdTJHG8aVLadymt6DWbA60kYODamsoDp5csoi/UsEO73X4
ulVnc7BPe66Ai/UWnYO7ajeAwKKhd9Fw1q1oiPVwcnnA/ayhpFFjILhQmiN0
TaWeudN30ycVOmCgGpWizSWVO6d7f5+0zdAzFyUx9Um1WcsOZFtLfQUeEfv5
B43aabAKuVqSMahyjIT7B+1yfaPWKu2sPK8hl0I/6O6jn3a0gOGPArB9WM2Z
M1IHRht5EWmZNkTXcjE5KPZVWQmnKKsrbgTDsw62wlz7fjsarR/8y31gbOKG
md4H/z9D3FXuT02luhOeiWvJ8mdCScC8IDAcQWhPGe4p2h5rYpa6fAO+Bcng
THTRucQD2yeIZGIaxO0vC5lknLp4KH7QKPUo9SixbkbKqeZRaLvkte/XV5Ir
sYFgOGCEnRBkM/ymPKf0ARPSk38G1vTBbFbS39+jx7dEy9FQhCLX3W1eTqgt
756c3oTCeOy4z5HC4jbtlnscwWRQ0KkB89frxfiyIdGRMK3u4F41cMFio25I
pnW2XBtUpYJZxgq4HXqZ1grA+Rp7wqMMx5p4Jcfw9yrajoF8+jMRpRfyKH/T
MhIRnTL5edTU8QdDyrfHI21BqjbTqK+3Gzcc+rA2bw5uOMQL0e7ZNfZ2WeSK
mggWKeS96krKeuvBwBhBL3ySfb/zitSBYf2uItv0YpQauCjSNkcb96VRa+L0
sWA/oVu3eAMND0s3jA87mSunymb43YpR2596mmyfCoy6m5bJyCh3/x9BgG6f
rIDJxCihk908QxpO2ph5zmb4SRbNFVmYMgRySAKRtMDlJGUP8RGDtE0RC8CF
0mxNR+sTduo6P01HLoQuovGbCUp2tPkrbomp8qYpr/gdDHtb5S+Hmo533J6F
BZNZReCi6buOYd0IXlm0mrq04vc3UZw+OeLOnnGDGdvkphC56iqhN1rcYDgE
wFZYVWwcLTyRjpJd05Gervf0VIzTxgc2V6WbQtWIyEic7FbTVE9d+96A5op8
XhlFPi/agvU1iZorLZwPqaSX6YEdudKwbb+Ots0EF6+uiNXRJCG/C0NKfsER
r/lXPjTEMaH8wm8LclX5UCR7v9dTD5OCZJ2XcNWud5NM+0LlNLVJNtGHa+n/
kxy7GmoSFV27Rg0JjcCaPVv33sBJVJJC8BOfW4ahEWu63MsuFzaAsX0ZbYVl
//YEa2j9HUpfErqKUwU8xUi86u4p44SFhmqUv680JOqZeTT2wKGZIAiMip0X
x40mLTmeqIelCQ/3YUervhx9pjaAR3vPpQ5ijTEvd8YaVlHdjQcgOtBWWPG+
WFZIL6J0j6YjRW2/H1jj06qtkjTauHAhWT5vgT5GBR8pMlLoDMM3i8ykTMMk
GSc99PJSsmLRS3SV7zfJnvB3MUxWYsZt0OgfZYZG2PJkh4SooaJfOUo0shl+
sof3gMjWODNoRA0NlK7Zc6MfHyLdsWlj7jFUithFa8iFZtODMDzlhGj6h84K
MLwjB7bCLuak0LKknWA4VMD2YTe6G2Q4MKzflaWH72mpRt2H7ss2izbiZ9Fm
6tLGiYthlj/1YzXAzx8MWeY7D7prThC0hmWW3l8Tv6H6a6yjtt1ijPhZjJnC
jFE/z44grC1NGlp2JAwY4wOCzUGbkreRlBK3fNERRbQ4Y7M4o6U+nTjzD1Jn
mDfqEDWO+41aRLFNDFHozl05dNc7mfyJBbZCo8NO6eHkSqopSh6fQeTZv/AZ
XhEft7aIZfrchdJsobt66fLAGzA52JTyxrqRskl+1z9ztITuDs8Gw+sEbIUW
V+PwNM6rs+hlKMmQ9Ip43p8cfXejmh0yjz+dwDYvSpzi9HIMpJf4hmJqk2T9
uYs9Ux8mFbNyQgLx2KeRM4u1V7nV6EV+YDguuC098pNO65m+3emqk5NeBac8
t/huunlDrfm16DUF6AXdwNun18Cyst5qT8M9RZi1f0vUzZjV5/bUwmgwKz8h
m2YlV4Cx2dFWaGZGI+pKaaPE8SRhVmmuZ8dim7cxS1/ijF95XhEe3kwvI7D+
t54J8X2Kc8y0iDv1nc16CWcLXfR/LPI2joX4+ZHyrpu2Xh0NngUOd8Ox+UOk
4b3c6a0sMVYU7rG0aW2SQpY/G6ZxB1w07Ofrxps77Fo9Zf1VYPgNBVuhH/d7
0n1ZhJssVBL759F+mshL49JNWXIU6+r/SAGBX/L7pgLpxd9UNd21ojR103pi
rG4vI9T1bk/K05lQPqZVajZtqgx/L7iREayxCVw0b8MGQNd4sElmv6Pzd3q4
ycqcsugDPDo/Y9VCeySiHodpdFZTNHbMMa/vdIpk9APWJwtj/h9M3tBhuhlt
MtMqx5w2iqSN1m0jyx5/hj+lDu2IB5c0NPxnr8kzwyzODEpDu/0zeU0tMNVa
2PcW0TWvrAI3O3vWdR9WrkMNUBEhkkvDn3g2aWiUnafrxpFGMJHR3aLvWaMI
uyzp4HCswkJyXI5fYwRHbNGc/DxadmgtveHOVwhriIWqPbVXPwN6WjRGtM4w
WnebxGIdjb1Qb9LQ3NWv0BOxMVipvHG6DyvVwboyY9RA/4CpQ6z69BxdN77E
4izQrzZuvuZVxCJ7ThYN7OUVbt5sEet2iGUqyYBenzz0uzRyp/cSixZn5/nw
Zyt8s71+xQ0ulGYKXVNqmhq6Xpv3LwY4LbJZZDMXfpzIZtyCgob923dJ2JpN
+BowWcg2XCsm6kLO5NEuFOEmB9kykrMMubbIBr9JSzZ4F2gZsFMFf7c7ewpc
5L2rV23DsE3e5qbiOlZf0qibI+vCWXlVlw8IPCa68wAQzpgzi3U2URG3w7q+
j/5gyLXFOvhNHtbpn/ZeFZ/2sEnT+o+2+7WxbWAYrGqjwb7/igzTVq4BPk2t
Iaxg4+2b+JiIB4fI2MXx1yTI1xcYhpJc7MsZpofDE57/RWTZopkMhzNlrZ6k
F9NMHNdAlj+/nax4PkIaGv1yCNDue+ISds2tj3a9Kka7cteHsoLTp1G6X+za
XHskjlZmpNGEN4JYbUOTNjCGjJOXo4kPfo21tnWKcTM8Q0vGPkvEXp0Sxzo6
e1C6V4RzZ53RwzlEuI+veQr9dXELLALKcFOdgK2Nnglik5mACu2tdcEXWLU/
9iWbHVzpojhiYASl+7VLhuk6mgAJpRQvbnKRxlAHR96q6yizZzyp3Etpdu36
YJqdX/mSGpNdaSqeRbPbppkR7DejWX5iNln25AppaMATP6Eb3tg7EwSoJ3/P
7p1ypxsvoJ7xkO9MUTqvYZ3exfy66HZu/u58YJ1xrhseaSHDaZ94tSkdAAHO
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
i6bUpf3sOXChz0MNI93tn/W5kZjg3FNNrh9peHmnGYo/WbBhN7o6cTfoaWhb
aee168ayC2QWGOQysWlBRalHL3SgT/wxjC2NENdUJOMHujwU4r8okvi/6Mfy
C5pk8PCXbf/5IX2K39yj9HVyNi8ugWktqWKtlY1gpJloe+KMVu6irbWqQlKA
xdUXD6uhnJOBFrLl+Rdo5oE4cui9l+ASWbmbE8T/LFiWvt8HXNGC8wx+pfVc
Ac96jTwy1t7IiCyJQX23o/O4oSg9UzJuqkVJPTJxSOFPGuh7OFL0NY12gcLQ
SYF9hDqvQI+FvdYMtGV6tzRFD3tGDVPu3e/5fuNpkMCwYJrmCiZau+tjxX+x
ny6RUSUq8ahdLY/7iTpVot5+5IgS+1WNJVG0reMrXTT/bKhZN5BSvHnr6JKi
L03qocNtXVPxcXVAy8RjvOGBmlc9NP2ra34+b8h4yHoQDDHxE5nqSycrSs3G
iMnvriV+OC8Gu3KaFvwBxFN9YE8zpCreTk1Q3AHKk9qt4bqYDXlgWEWZA917
o3L7ZUYbxSPs7gXCLh8Fw6sHbFnpcBTrRdPXXj+AGfHEfP1MLmVdtWD4SzrY
nuzzrhZwsa/aG/B4u6pQmo7nZHa3trhXfJl+fqvn5dTVcKVJkjtJ4qjQonyb
khOoQPODx/rMvH5JStXSGhwhM512EhY1NHAnZMVZwVoDAwYbJf7Eiy+Irubf
u5UQll90mby3PFaahbaVrloURKOjbOBjqYmlcCSbgg+pM+nGlJRHBiJFifX2
YWX0LEzYutjE/4uXsvOQDkx4YEL0Pci0DmqsCSH3LlDeetTppjx1L+v87I4M
HsnK2k/m6mrIDZXto+XMbS0JKs+ZhbaVnFi/lJ6vOIPaeDvqyiCUNtLiccDJ
EwNxgpMroxNzXLYopVu3GT/FjFdc+BMLyn+mk8iM+hh5RW+LGRNG0Kf2Ntbe
vQ1m3mRkVBip3x015oyw+ouf4ZSKH6Mts6qyVnCh7ztoW1nWp2kijFWXtuCx
ilY9hqc9SFlZh2T4zcTHcg8apvzK/ejg5XlJuO4H0cGbP4EdNpcJFpGjA8gA
OsT32TmU/HIeoINxJig6ojcyotN5axTQ+aXhhoNsSsRyOP9nvHp0Rok6yc/h
HWYpGOkRtGWlrJrqyY8QNC+g7Un/dsfOb1LBvuqsxWNLHn/9AJf0BC1Pi2GO
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\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"7f074517-c338-4394-a891-6d4c03b405a9"],

Cell[BoxData[
 RowBox[{"{", 
  TagBox[
   TemplateBox[{
     RowBox[{
       StyleBox[
        TagBox["PlanarDiagramObject", "SummaryHead"], 
        "NonInterpretableSummary"], 
       StyleBox["[", "NonInterpretableSummary"], 
       DynamicModuleBox[{
        Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{"\"ID:  8505\"", 
                GridBox[{{
                   RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], 
                   RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], 
                   RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> 
            GridBox[{{"\"ID:  8505\"", 
                GridBox[{{
                   RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], 
                   RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}], 
                   RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"],
         DynamicModuleValues :> {}], 
       StyleBox["]", "NonInterpretableSummary"]}]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->(""& )],
   False,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{3.9393068636819563`*^9, 3.939307042518715*^9},
 CellLabel->
  "Out[248]=",ExpressionUUID->"5aa0224c-85c0-42ad-bbe9-314474e66a82"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tally", "@", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"MyRattleOutcomes", "[", 
     RowBox[{"RandomGoeritz", "[", 
      RowBox[{"10", ",", "100"}], "]"}], "]"}], ",", 
    RowBox[{"{", "1000", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.939300291096456*^9, 3.9393002977359247`*^9}, {
  3.939300440383565*^9, 3.939300492408605*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"b6d826af-b665-4a09-b888-d6e1986d08f8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Victory after 1 rounds\"\>", ",", "824"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"Defeat after 10 rounds\"\>", ",", 
       TagBox[
        TemplateBox[{
          RowBox[{
            StyleBox[
             TagBox["PlanarDiagramObject", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            
            DynamicModuleBox[{
             Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{"\"ID:  3951\"", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["389", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["778", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> 
                 GridBox[{{"\"ID:  3951\"", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["389", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["778", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
              "SummaryPanel"], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(""& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], "}"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Victory after 2 rounds\"\>", ",", "155"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Victory after 3 rounds\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Victory after 4 rounds\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"Defeat after 10 rounds\"\>", ",", 
       TagBox[
        TemplateBox[{
          RowBox[{
            StyleBox[
             TagBox["PlanarDiagramObject", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            DynamicModuleBox[{
             Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{"\"ID:  5421\"", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["389", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["778", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> 
                 GridBox[{{"\"ID:  5421\"", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["389", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["778", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
              "SummaryPanel"], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(""& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], "}"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"Defeat after 10 rounds\"\>", ",", 
       TagBox[
        TemplateBox[{
          RowBox[{
            StyleBox[
             TagBox["PlanarDiagramObject", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            
            DynamicModuleBox[{
             Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{"\"ID:  5739\"", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["80", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["160", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> 
                 GridBox[{{"\"ID:  5739\"", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["80", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["160", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
              "SummaryPanel"], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(""& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], "}"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"Defeat after 10 rounds\"\>", ",", 
       TagBox[
        TemplateBox[{
          RowBox[{
            StyleBox[
             TagBox["PlanarDiagramObject", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            
            DynamicModuleBox[{
             Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{"\"ID:  7136\"", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["389", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["778", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> 
                 GridBox[{{"\"ID:  7136\"", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["389", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["778", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
              "SummaryPanel"], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(""& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], "}"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"Defeat after 10 rounds\"\>", ",", 
       TagBox[
        TemplateBox[{
          RowBox[{
            StyleBox[
             TagBox["PlanarDiagramObject", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            
            DynamicModuleBox[{
             Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{"\"ID:  7681\"", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["389", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["778", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> 
                 GridBox[{{"\"ID:  7681\"", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["389", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["778", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
              "SummaryPanel"], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(""& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], "}"}], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9393004645922527`*^9, 3.939300479124591*^9}, 
   3.9393009492560673`*^9, 3.93930189667876*^9},
 CellLabel->
  "Out[179]=",ExpressionUUID->"fb32b5c6-3068-42ad-b271-14587c6a7f6b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"results", " ", "=", " ", "%179"}]], "Input",
 CellChangeTimes->{{3.9393041987627993`*^9, 3.939304235880299*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"b51a1ec6-37c2-4d29-b078-3e8d3d8f938b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Victory after 1 rounds\"\>", ",", "824"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"Defeat after 10 rounds\"\>", ",", 
       TagBox[
        TemplateBox[{
          RowBox[{
            StyleBox[
             TagBox["PlanarDiagramObject", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            
            DynamicModuleBox[{
             Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{"\"ID:  3951\"", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["389", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["778", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> 
                 GridBox[{{"\"ID:  3951\"", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["389", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["778", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
              "SummaryPanel"], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(""& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], "}"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Victory after 2 rounds\"\>", ",", "155"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Victory after 3 rounds\"\>", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Victory after 4 rounds\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"Defeat after 10 rounds\"\>", ",", 
       TagBox[
        TemplateBox[{
          RowBox[{
            StyleBox[
             TagBox["PlanarDiagramObject", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            DynamicModuleBox[{
             Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{"\"ID:  5421\"", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["389", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["778", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> 
                 GridBox[{{"\"ID:  5421\"", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["389", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["778", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
              "SummaryPanel"], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(""& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], "}"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"Defeat after 10 rounds\"\>", ",", 
       TagBox[
        TemplateBox[{
          RowBox[{
            StyleBox[
             TagBox["PlanarDiagramObject", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            
            DynamicModuleBox[{
             Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{"\"ID:  5739\"", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["80", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["160", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> 
                 GridBox[{{"\"ID:  5739\"", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["80", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["160", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
              "SummaryPanel"], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(""& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], "}"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"Defeat after 10 rounds\"\>", ",", 
       TagBox[
        TemplateBox[{
          RowBox[{
            StyleBox[
             TagBox["PlanarDiagramObject", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            
            DynamicModuleBox[{
             Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{"\"ID:  7136\"", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["389", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["778", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> 
                 GridBox[{{"\"ID:  7136\"", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["389", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["778", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
              "SummaryPanel"], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(""& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], "}"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"Defeat after 10 rounds\"\>", ",", 
       TagBox[
        TemplateBox[{
          RowBox[{
            StyleBox[
             TagBox["PlanarDiagramObject", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            
            DynamicModuleBox[{
             Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{"\"ID:  7681\"", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["389", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["778", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> 
                 GridBox[{{"\"ID:  7681\"", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["389", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["778", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
              "SummaryPanel"], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(""& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], "}"}], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.93930423703715*^9},
 CellLabel->
  "Out[180]=",ExpressionUUID->"010d4428-f628-4c65-afd6-4479cda43c66"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MyRattle", "@", 
  RowBox[{"MyRattle", "@", 
   RowBox[{"MyRattle", "[", 
    RowBox[{"{", 
     RowBox[{"SimplifyDiagram4", "[", 
      RowBox[{"results", "[", 
       RowBox[{"[", 
        RowBox[{"7", ",", "1", ",", "2"}], "]"}], "]"}], "]"}], "}"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.939304239920018*^9, 3.939304389209008*^9}, {
  3.939304626114362*^9, 3.9393046420231657`*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"52a06dcc-77c3-46c9-9624-ba209e7d6cdf"],

Cell[BoxData[
 RowBox[{"{", 
  TagBox[
   TemplateBox[{
     RowBox[{
       StyleBox[
        TagBox["PlanarDiagramObject", "SummaryHead"], 
        "NonInterpretableSummary"], 
       StyleBox["[", "NonInterpretableSummary"], 
       DynamicModuleBox[{
        Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{"\"ID:  8482\"", 
                GridBox[{{
                   RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["80", "SummaryItem"]}], 
                   RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["160", "SummaryItem"]}], 
                   RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> 
            GridBox[{{"\"ID:  8482\"", 
                GridBox[{{
                   RowBox[{
                    TagBox["\"CrossingCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["80", "SummaryItem"]}], 
                   RowBox[{
                    TagBox["\"ArcCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["160", "SummaryItem"]}], 
                   RowBox[{
                    TagBox["\"UnlinkCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"],
         DynamicModuleValues :> {}], 
       StyleBox["]", "NonInterpretableSummary"]}]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->(""& )],
   False,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{{3.93930424331952*^9, 3.939304389851696*^9}, {
  3.9393046268095417`*^9, 3.9393046425182247`*^9}},
 CellLabel->
  "Out[199]=",ExpressionUUID->"e6bf4305-074c-4c8d-aff8-f1430c667ac2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MyLevelEmbeddingSuggestedLevels", "[", 
  RowBox[{"results", "[", 
   RowBox[{"[", 
    RowBox[{"7", ",", "1", ",", "2"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.93930465396981*^9, 3.939304656203496*^9}, {
  3.939304970264873*^9, 3.939304984901517*^9}, {3.939305183007436*^9, 
  3.939305222730905*^9}},
 CellLabel->
  "In[232]:=",ExpressionUUID->"f650cc79-ab42-455e-a016-614f6f1e36f3"],

Cell[BoxData[
 TemplateBox[{
  "Eigenvalues", "arh", 
   "\"Because finding \\!\\(\\*RowBox[{\\\"160\\\"}]\\) out of the \
\\!\\(\\*RowBox[{\\\"160\\\"}]\\) eigenvalues and/or eigenvectors is likely \
to be faster with dense matrix methods, the sparse input matrix will be \
converted. If fewer eigenvalues and/or eigenvectors would be sufficient, \
consider restricting this number using the second argument to \
\\!\\(\\*RowBox[{\\\"Eigenvalues\\\"}]\\).\"", 2, 232, 31, 
   24542603839560442470, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9393058317337513`*^9, 3.939306601117609*^9},
 CellLabel->
  "During evaluation of \
In[232]:=",ExpressionUUID->"c0718427-074a-42e5-81e3-880efd9ea43d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "16.080099999999998`", ",", "16.067736118841665`", ",", 
   "16.067736118841665`", ",", "16.030692044404628`", ",", 
   "16.03069204440462`", ",", "15.969110234712964`", ",", 
   "15.969110234712963`", ",", "15.883227290975226`", ",", 
   "15.883227290975205`", ",", "15.77337271946456`", ",", 
   "15.773372719464533`", ",", "15.639967208374063`", ",", 
   "15.639967208374058`", ",", "15.483520429795506`", ",", 
   "15.4835204297955`", ",", "15.304628379762942`", ",", 
   "15.304628379762923`", ",", "15.10397027201684`", ",", 
   "15.10397027201683`", ",", "14.882305003763832`", ",", 
   "14.882305003763829`", ",", "14.640467214214032`", ",", 
   "14.640467214214029`", ",", "14.379362959059431`", ",", 
   "14.37936295905943`", ",", "14.099965026297186`", ",", 
   "14.099965026297186`", ",", "13.803307920885992`", ",", 
   "13.80330792088599`", ",", "13.49048254764265`", ",", 
   "13.490482547642642`", ",", "13.162630623524485`", ",", 
   "13.16263062352447`", ",", "12.820938851993008`", ",", 
   "12.820938851992995`", ",", "12.466632893504723`", ",", 
   "12.466632893504718`", ",", "12.100971167318612`", ",", 
   "12.100971167318583`", ",", "11.725238520739847`", ",", 
   "11.725238520739847`", ",", "11.340739802629157`", ",", 
   "11.34073980262915`", ",", "10.948793378494226`", ",", 
   "10.94879337849421`", ",", "10.550724624739257`", ",", 
   "10.550724624739251`", ",", "10.147859439681593`", ",", 
   "10.14785943968159`", ",", "9.741517808747425`", ",", "9.741517808747417`",
    ",", "9.333007460837138`", ",", "9.333007460837129`", ",", 
   "8.923617652203623`", ",", "8.923617652203616`", ",", "8.514613113321012`",
    ",", "8.514613113321003`", ",", "8.107228193140555`", ",", 
   "8.107228193140553`", ",", "7.70266123384223`", ",", "7.702661233842218`", 
   ",", "7.302069207702981`", ",", "7.302069207702978`", ",", 
   "6.90656264602469`", ",", "6.906562646024677`", ",", "6.51720088820702`", 
   ",", "6.517200888207014`", ",", "6.134987677024746`", ",", 
   "6.1349876770247365`", ",", "5.760867123987096`", ",", 
   "5.7608671239870946`", ",", "5.395720066333152`", ",", 
   "5.395720066333143`", ",", "5.0403608347656625`", ",", 
   "5.040360834765653`", ",", "4.695534448461596`", ",", "4.695534448461593`",
    ",", "4.361914251236654`", ",", "4.36191425123665`", ",", "4.0401`", ",", 
   "4.040099999999996`", ",", "3.7306164138308335`", ",", 
   "3.730616413830824`", ",", "3.4339121891578492`", ",", 
   "3.433912189157848`", ",", "3.1503594836436304`", ",", 
   "3.1503594836436286`", ",", "2.8802538684862395`", ",", 
   "2.8802538684862347`", ",", "2.623814745967757`", ",", 
   "2.6238147459677554`", ",", "2.3811862262217867`", ",", 
   "2.3811862262217796`", ",", "2.1524384543766164`", ",", 
   "2.1524384543766155`", ",", "1.937569376475528`", ",", 
   "1.9375693764755257`", ",", "1.7365069298968971`", ",", 
   "1.7365069298968931`", ",", "1.5491116414115824`", ",", 
   "1.5491116414115802`", ",", "1.3751796135387095`", ",", 
   "1.3751796135387087`", ",", "1.2144458775090972`", ",", 
   "1.2144458775090958`", ",", "1.0665880889325838`", ",", 
   "1.0665880889325794`", ",", "0.9312305402046777`", ",", 
   "0.9312305402046752`", ",", "0.8079484617922172`", ",", 
   "0.8079484617922108`", ",", "0.6962725828186196`", ",", 
   "0.6962725828186168`", ",", "0.595693919837125`", ",", 
   "0.5956939198371191`", ",", "0.5056687613448619`", ",", 
   "0.5056687613448575`", ",", "0.4256238144594587`", ",", 
   "0.4256238144594553`", ",", "0.35496147926015814`", ",", 
   "0.3549614792601569`", ",", "0.293065215592778`", ",", 
   "0.2930652155927756`", ",", "0.23930496665621365`", ",", 
   "0.23930496665620918`", ",", "0.19304260343062268`", ",", 
   "0.19304260343061935`", ",", "0.1536373539753222`", ",", 
   "0.15363735397531628`", ",", "0.12045118181771712`", ",", 
   "0.1204511818177137`", ",", "0.09285407807219535`", ",", 
   "0.0928540780721908`", ",", "0.07022923256661179`", ",", 
   "0.07022923256660767`", ",", "0.0519780501104699`", ",", 
   "0.05197805011046795`", ",", "0.03752497910671204`", ",", 
   "0.037524979106711404`", ",", "0.026322120982349255`", ",", 
   "0.026322120982348908`", ",", "0.017853590383291162`", ",", 
   "0.01785359038328875`", ",", "0.011639597736861582`", ",", 
   "0.01163959773685766`", ",", "0.007240227620859706`", ",", 
   "0.007240227620858024`", ",", "0.004258888379415765`", ",", 
   "0.0042588883794144475`", ",", "0.0023454105806006076`", ",", 
   "0.002345410580599037`", ",", "0.0011987742054007677`", ",", 
   "0.0011987742053980203`", ",", "0.000569446877746933`", ",", 
   "0.0005694468777446759`", ",", "0.00026131797592532325`", ",", 
   "0.0002613179759234752`", ",", "0.0001332160908446983`", ",", 
   "0.00013321609084197944`", ",", "0.00010000000000013129`"}], "}"}]], "Echo",\

 CellChangeTimes->{
  3.939306601158338*^9},ExpressionUUID->"a3f3d0b9-2925-4778-a4b1-\
f67f67511b47"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "3.3592500248515256`"}], ",", "0.6412842579881946`", ",", 
   "2.9699689572666466`", ",", "3.4488767204206128`", ",", 
   "7.712406928880722`", ",", "9.564900946118959`", ",", "9.894806566311136`",
    ",", "9.55916332560414`", ",", "9.400710302275655`", ",", 
   "10.26477446263004`", ",", "7.768063221653421`", ",", "3.767191603721341`",
    ",", "1.014520609819011`", ",", "2.2869985342158383`", ",", 
   "3.0189986631788805`", ",", "3.3078282834928316`", ",", 
   "3.241629371889533`", ",", "2.9011125516287266`", ",", 
   "2.3611779240833717`", ",", "1.6924471232334735`", ",", 
   "0.9627297418040064`", ",", "0.23844639620112834`", ",", 
   RowBox[{"-", "0.4139698894104013`"}], ",", "2.5006942092122264`", ",", 
   "2.1002322617771645`", ",", 
   RowBox[{"-", "1.0494657821800277`"}], ",", 
   RowBox[{"-", "1.2309709079305189`"}], ",", 
   RowBox[{"-", "2.563329248713673`"}], ",", "0.0728293829404014`", ",", 
   "0.8279921748842036`", ",", "0.3961043457934979`", ",", 
   RowBox[{"-", "0.5527126972895509`"}], ",", 
   RowBox[{"-", "1.3587157420209466`"}], ",", 
   RowBox[{"-", "1.3592500248420971`"}], ",", 
   RowBox[{"-", "2.128088634048183`"}], ",", 
   RowBox[{"-", "3.0571871352789084`"}], ",", 
   RowBox[{"-", "3.541493483169108`"}], ",", 
   RowBox[{"-", "2.9667540705895328`"}], ",", 
   RowBox[{"-", "1.9390179550633435`"}], ",", 
   RowBox[{"-", "1.054977584655057`"}], ",", 
   RowBox[{"-", "0.9140054205439607`"}], ",", 
   RowBox[{"-", "2.1302297902841727`"}], ",", 
   RowBox[{"-", "0.7654145282231295`"}], ",", "2.0770614919887`", ",", 
   "5.32344915263227`", ",", "4.950562429430206`", ",", "4.0788815288744065`",
    ",", "3.073260028796263`", ",", "2.295464806877226`", ",", 
   "1.368171207802201`", ",", 
   RowBox[{"-", "0.08916493776035853`"}], ",", 
   RowBox[{"-", "2.46782546718821`"}], ",", 
   RowBox[{"-", "4.8368929697512`"}], ",", 
   RowBox[{"-", "6.26501139165142`"}], ",", 
   RowBox[{"-", "7.3432973654631875`"}], ",", 
   RowBox[{"-", "8.655244373649358`"}], ",", 
   RowBox[{"-", "6.993457924462049`"}], ",", 
   RowBox[{"-", "5.377484688469903`"}], ",", 
   RowBox[{"-", "4.339017983727487`"}], ",", 
   RowBox[{"-", "2.9140054205479866`"}], ",", 
   RowBox[{"-", "0.13022979028071355`"}], ",", "0.43257575426717104`", ",", 
   "0.24372053647122768`", ",", 
   RowBox[{"-", "0.27024151814510605`"}], ",", "3.3342389898894513`", ",", 
   "3.323449152630067`", ",", "4.848801723475738`", ",", "5.875515895710861`",
    ",", "4.358353214482451`", ",", "3.9192863514941774`", ",", 
   "4.185061137076243`", ",", "4.796128305890825`", ",", "5.399425934158398`",
    ",", "5.641257094461155`", ",", "5.160155587430792`", ",", 
   "3.579632434645188`", ",", "0.5006942092101603`", ",", 
   RowBox[{"-", "0.11259411453430339`"}], ",", 
   RowBox[{"-", "1.7615536038048047`"}], ",", 
   RowBox[{"-", "2.8368929697371885`"}], ",", 
   RowBox[{"-", "5.145039169158003`"}], ",", 
   RowBox[{"-", "8.975016248984145`"}], ",", 
   RowBox[{"-", "10.319153386490877`"}], ",", 
   RowBox[{"-", "9.343297365468288`"}], ",", 
   RowBox[{"-", "6.655244373646684`"}], ",", 
   RowBox[{"-", "6.622439194765534`"}], ",", 
   RowBox[{"-", "7.377484688484398`"}], ",", 
   RowBox[{"-", "7.068078483954912`"}], ",", 
   RowBox[{"-", "5.326649517792429`"}], ",", 
   RowBox[{"-", "1.7562794635334673`"}], ",", "4.077061491995458`", ",", 
   "8.629316225201684`", ",", "11.287705615114664`", ",", 
   "11.40071030227907`", ",", "8.264774462627381`", ",", "6.358353214487199`",
    ",", "3.875515895707819`", ",", "3.014520609821136`", ",", 
   "0.28699853421183746`", ",", 
   RowBox[{"-", "0.4100746072834682`"}], ",", "0.1868849317209483`", ",", 
   "1.367382558674366`", ",", "2.432575754288275`", ",", 
   "2.6811791730759205`", ",", "2.4230113414684142`", ",", 
   "1.9574872429753671`", ",", "1.5796324346409494`", ",", 
   "1.5860301105908083`", ",", 
   RowBox[{"-", "2.1125941145378104`"}], ",", 
   RowBox[{"-", "3.230970907932011`"}], ",", 
   RowBox[{"-", "0.5633292487125832`"}], ",", 
   RowBox[{"-", "2.08916493777637`"}], ",", 
   RowBox[{"-", "4.823277318069999`"}], ",", 
   RowBox[{"-", "7.145039169162356`"}], ",", 
   RowBox[{"-", "7.425093932311608`"}], ",", 
   RowBox[{"-", "8.319153386432978`"}], ",", 
   RowBox[{"-", "9.210825631239631`"}], ",", 
   RowBox[{"-", "8.993457924470352`"}], ",", 
   RowBox[{"-", "6.537295642309736`"}], ",", 
   RowBox[{"-", "3.1549791946276455`"}], ",", 
   RowBox[{"-", "0.13997217842156132`"}], ",", "1.2072311185945612`", ",", 
   "5.448876720421553`", ",", "5.712406928878478`", ",", "6.950562429437681`",
    ",", "7.001906777499522`", ",", "6.425727938041971`", ",", 
   "5.7680632216284184`", ",", "5.5726776485253575`", ",", 
   "5.465399025072408`", ",", "5.07326002882568`", ",", "4.017049590759343`", 
   ",", "2.647108619565155`", ",", "1.307101708323724`", ",", 
   "0.34102742047492723`", ",", "0.10023226177370648`", ",", 
   "0.9505342178213103`", ",", 
   RowBox[{"-", "1.9271706170621041`"}], ",", 
   RowBox[{"-", "3.5306973848862353`"}], ",", 
   RowBox[{"-", "5.413270179813655`"}], ",", 
   RowBox[{"-", "6.2322234258267395`"}], ",", 
   RowBox[{"-", "5.981875257789194`"}], ",", 
   RowBox[{"-", "4.634534559945711`"}], ",", 
   RowBox[{"-", "2.1399721784244865`"}], ",", "1.7297584818557792`", ",", 
   "1.3342389898886677`", ",", "3.2072311185955744`", ",", 
   "0.9699689572636917`", ",", 
   RowBox[{"-", "0.346267368566296`"}], ",", 
   RowBox[{"-", "1.5414934831514537`"}], ",", 
   RowBox[{"-", "3.41327017979757`"}], ",", 
   RowBox[{"-", "5.530697384893219`"}], ",", 
   RowBox[{"-", "6.1086492791003835`"}], ",", 
   RowBox[{"-", "6.231774988108563`"}], ",", 
   RowBox[{"-", "6.975016248979691`"}], ",", 
   RowBox[{"-", "9.425093932317644`"}], ",", 
   RowBox[{"-", "10.47803622856463`"}], ",", 
   RowBox[{"-", "10.284627374656097`"}], ",", 
   RowBox[{"-", "8.969676780912057`"}], ",", 
   RowBox[{"-", "6.63453456012014`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.939304656623436*^9, {3.939304972946456*^9, 3.939304985303845*^9}, 
   3.9393051506766653`*^9, 3.939305192725308*^9, {3.939305223187706*^9, 
   3.9393052483991327`*^9}, 3.939305758376086*^9, 3.939305831827341*^9, 
   3.939306601194914*^9},
 CellLabel->
  "Out[232]=",ExpressionUUID->"f9deb1cd-b83b-422c-b943-0c64f5be0577"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LevelEmbeddingHessian", "[", 
  RowBox[{"results", "[", 
   RowBox[{"[", 
    RowBox[{"7", ",", "1", ",", "2"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9393053048562183`*^9, 3.939305313313113*^9}},
 CellLabel->
  "In[213]:=",ExpressionUUID->"57116306-0412-4145-801b-72e34a2e6991"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJzt27FLQlEUgPEH/geCk5MRUg4lOBg2nCmclaAgMokcpSXQIYLmtgYHjQQX
4w0tuVhtTQ0JPoKcxLRAgp5T0hQhuD7IRW6Hb7hw+XGGe+Bbb2j/MJ3zWZYV
nJ7J3dm0q+ettiw9uf3s4Eoqa5nw6tarJAp3mfJCSy5itUb8+1mGtdAgZX/g
+J/cq6vmWXSj2RhKJ1m/Pi59yuN2/mfva2Tc+/H/5eOd9ZTf74gTv6mvRB6k
WIq5vdt3iQSiuwfdtmRPL+9PCm+yfOSzF19czz5N2ws302ftzWvetL1wM53e
cHrDtTq94fSGa3V6w+kN1+r0htMbrtXpDac3XKvTG05vuFanN5zecK1Obzi9
4Vqd3nB6w7U6veH0hmt1esPpDdfq9Iab4PSGz9O9/tH/AgwnvlI=
              "], {{0, 0}, {27, 27}}, {0, 1}], AspectRatio -> 1, Axes -> 
             False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
               "DefaultBoundaryStyle" -> Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["800", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"160", ",", "160"}], "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJzt27FLQlEUgPEH/geCk5MRUg4lOBg2nCmclaAgMokcpSXQIYLmtgYHjQQX
4w0tuVhtTQ0JPoKcxLRAgp5T0hQhuD7IRW6Hb7hw+XGGe+Bbb2j/MJ3zWZYV
nJ7J3dm0q+ettiw9uf3s4Eoqa5nw6tarJAp3mfJCSy5itUb8+1mGtdAgZX/g
+J/cq6vmWXSj2RhKJ1m/Pi59yuN2/mfva2Tc+/H/5eOd9ZTf74gTv6mvRB6k
WIq5vdt3iQSiuwfdtmRPL+9PCm+yfOSzF19czz5N2ws302ftzWvetL1wM53e
cHrDtTq94fSGa3V6w+kN1+r0htMbrtXpDac3XKvTG05vuFanN5zecK1Obzi9
4Vqd3nB6w7U6veH0hmt1esPpDdfq9Iab4PSGz9O9/tH/AgwnvlI=
              "], {{0, 0}, {27, 27}}, {0, 1}], AspectRatio -> 1, Axes -> 
             False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
               "DefaultBoundaryStyle" -> Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["800", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"160", ",", "160"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.03125`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "6.`", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "160"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "4.`"}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "4.`"}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "159"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1.`", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SparseArray[Automatic, {160, 160}, 0., {1, {CompressedData["
1:eJwlzwFrDWAAQNHPHm3TbG3T0JBNbatNoVAo1KZshYya1baa1bbiaRQKhWI1
CjUrFFu2mtW22hQKNcpWpkaZGrWpTW1qFCvUzKndOj/gZlQePxBdEEJoCfMt
YjFJLGUFq1lLDuvYyBa2s4vdFLGfQ5RSQRW1RDnJGc5ziXqucZMm7tJMGx10
84invOAVA7zlPR/5zBe+8o0fzPCXORYaiyeRVJazikyyyWMDm9nGTgooZB8H
OUw5R6jhGCc4zTkucoWr3OAWd7hPKw/popcnPOcl/QzyjmE+McYEU3znF3/4
RyQmhDiWkMIyVpJBFrmsZxNb2UE+e9hLMSWUUUk1R6njFGe5wGUauE4jt7nH
A9rppIfHPKOP17xhiA+MMMo4k0zzk9/MEhMJIZYEkkkjnTX8B9niUJM=
     "], CompressedData["
1:eJwVxmcjsgEYhuESitdsGAmFMjKiicyslpQdSlmVaGkvUUmFhlKZP/W9nw/X
cZ00vUWlr0KhUFQMCoWGR/9V/WIATDWmqhpdU1MLD2AxtTXYahyAq6vFYevq
/9XXYXENIK6hEQSa6hGamxqbG1pam1uaGvFwTa0EfHMLFJFAIJJa8UQ8gdTW
RmonEAFiR0d7ZxsJgdxJ7uhqR6B0UcjdnT2U7i5yb093F4UKUmiIfVRab08/
rY/a2983QKUBNDpAZ/TTBxiDQ4xB+sDw0CCDPjwCAszBkWHm0Ogoc2xkGGF8
bHx0gjk+NjHKAliTrMmJqfGpSTZrAoHD5nCnJjlTbC6Py+Gx+QBfwOXxpwU8
AX96ZnpGMMtHEM4KZ+amEebnF+aEs8CiEFhaXFpcnl8AFkSAaEW0vLK0Cqyu
iWDr62sbK6vAqnhjXbwmAaSSDYlYKpNKZGK5TCqXbMo3ZQrppmJLLlPIN7eU
UEqVUrWt2FJtKbd3drZ3VUqEPWBv/2B/b3dn//BgbxdKfQilPjpQHx4dH6qP
jk/Ux0cnGnit5lhzcqrV6k5PNKcarU6vO9Vrz87O4YEL3eX5xZn+4vLq7Bzq
ygBlMJqMhqvLa6PJcHVtMhsNCDfmm+tb082t2XJ9e2MxWwGrzWqx3dptVrvF
ATjubA77ndN157Q7nG6X4w7K7XF7XF6nx+d1u7wet8/v83sDHn8w4PMGfP5g
KBgKhP3h+1AwAESC9+FI6CHycP8YRog+PkQjsWg89vgQe4zGn+Kxp2gCSDwn
nxNP8WQKBNKJ1Es6+ZxOpl5fXl/eUmkgnXnLvGZfEHLZXCb/9p7PZTP590Iu
C1UoFoof+ffie+Gj9FEqlgsIlXKp8vH5Vfksl76+P8sV4Kfy8/379YnwB6D/
fv5+0VX/AfRr/V0=
     "]}, CompressedData["
1:eJzlWLENAjEMDGIBSkqYBGZgBCRqVmQkRvgCKD6SZce5s/3im0j5xE58l7OT
8/15e+xaa6d9+37H66c9vNbt+7Ju+/5+ntQfZQ/t12v3N17y14+T/qPjrK3L
ag+Ny2i8vHG12rP61/xG4bEVHrBxnI2PNo7FA7QOefFg61D185GdB1n71exp
+sfiM2rfWXEe1TM2XyQco/Uqii9sfZ7dB5vP7HGzumHFLapeq8JTr+6Orotd
H0Tpr1dvs/Ibun5Gn49RfFE8qF7X/eu7RdXzNquTUX6r6stW7mVV42zVPxZu
3rhI87LqYvR7k7W+8uLEzr/Z8bPmaY1n2fdu6zmQ7S53Z7es
    "]}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9393053146663523`*^9},
 CellLabel->
  "Out[213]=",ExpressionUUID->"3620e582-0359-4a93-87f1-71b9d635aeb9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", " ", "=", " ", 
  RowBox[{"LevelEmbeddingConstraintMatrix", "[", 
   RowBox[{"results", "[", 
    RowBox[{"[", 
     RowBox[{"7", ",", "1", ",", "2"}], "]"}], "]"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.939305283255023*^9, 3.939305373968339*^9}},
 CellLabel->
  "In[219]:=",ExpressionUUID->"9a46a7e4-4670-4ce2-9fd8-cc4c8db5bbd5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJxTTMoPSmVmYGCQhmIQ26p8d9wspXP2c4wXbTH/ccX+xSLFx4GrXtmPio+K
UyL+91vpgzmCl+z5Z584w6r31P5Swak7Ncrv7X10GYwkjU/Z5xnPfzN1+gR7
uc/5rE15Nwad+0fF6SO+J3pO4oGrF+zX/TkyOf/EA3uRDSF+m3ze4hTHZc6p
iZ+2J+64aJ/Vl/Ug4dJR+6C6wq3ufs9wig+2cBgVp0+6opb5uNIVLntH0+Hg
FCc1vtbefPLE58s9+9ecd7e/WfTC/jDf3eBjle9JTieDLRyUdbQelUy6bF/U
sEraUma9vf2EPcUazo8HnTuHijit453W5duo+NASH2zp4VDvDhXtx+ftT594
f58raJH9ois3jh6cf2803Ia5+M5uA9edW17Y33Bfvq5m2lv7kxG5/+K/4q4f
B6q8Ha2Xh4c4rnKGWv1HUtt7o+LDWxxXuhqodDJU6tmhXg4PNnFahxu1zB8q
7auh4s6hEj7UCs+BKh9Gy6Whld5oHe+j5cPI7KcMVLwPtvQ/2OJlqLhzoPw1
XMOH1PwyWm6Tl06o1a8cbOXnaHoYnOKkllfUmmcfTQ8jUxxX+TbS6s3BJk7q
OOpQyb+j8whDS3y4ricc6u4faeJDpXwbaf4aqHw0Oi5EnvhQWZcyau/wFh/q
82IjTXyg9hEMFfNHxYdWeht1/9ASH82/1E2Ho+E5PPL1YIvHwRY+QyXcRsVH
ZjocFR+c4tQqHwC/L2Xl
              "], {{0, 0}, {27, 27}}, {0, 1}], AspectRatio -> 1, Axes -> 
             False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
               "DefaultBoundaryStyle" -> Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["160", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"80", ",", "160"}], "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJxTTMoPSmVmYGCQhmIQ26p8d9wspXP2c4wXbTH/ccX+xSLFx4GrXtmPio+K
UyL+91vpgzmCl+z5Z584w6r31P5Swak7Ncrv7X10GYwkjU/Z5xnPfzN1+gR7
uc/5rE15Nwad+0fF6SO+J3pO4oGrF+zX/TkyOf/EA3uRDSF+m3ze4hTHZc6p
iZ+2J+64aJ/Vl/Ug4dJR+6C6wq3ufs9wig+2cBgVp0+6opb5uNIVLntH0+Hg
FCc1vtbefPLE58s9+9ecd7e/WfTC/jDf3eBjle9JTieDLRyUdbQelUy6bF/U
sEraUma9vf2EPcUazo8HnTuHijit453W5duo+NASH2zp4VDvDhXtx+ftT594
f58raJH9ois3jh6cf2803Ia5+M5uA9edW17Y33Bfvq5m2lv7kxG5/+K/4q4f
B6q8Ha2Xh4c4rnKGWv1HUtt7o+LDWxxXuhqodDJU6tmhXg4PNnFahxu1zB8q
7auh4s6hEj7UCs+BKh9Gy6Whld5oHe+j5cPI7KcMVLwPtvQ/2OJlqLhzoPw1
XMOH1PwyWm6Tl06o1a8cbOXnaHoYnOKkllfUmmcfTQ8jUxxX+TbS6s3BJk7q
OOpQyb+j8whDS3y4ricc6u4faeJDpXwbaf4aqHw0Oi5EnvhQWZcyau/wFh/q
82IjTXyg9hEMFfNHxYdWeht1/9ASH82/1E2Ho+E5PPL1YIvHwRY+QyXcRsVH
ZjocFR+c4tQqHwC/L2Xl
              "], {{0, 0}, {27, 27}}, {0, 1}], AspectRatio -> 1, Axes -> 
             False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
               "DefaultBoundaryStyle" -> Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["160", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"80", ",", "160"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.0125`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "34"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1.`", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "1.`"}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1.`", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "33"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "1.`"}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SparseArray[
  Automatic, {80, 160}, 0., {
   1, {{0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36,
      38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 
     74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 
     108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 
     136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160}, {{
     34}, {1}, {2}, {33}, {148}, {3}, {123}, {4}, {5}, {124}, {47}, {6}, {
     16}, {7}, {129}, {8}, {9}, {94}, {95}, {10}, {11}, {128}, {127}, {12}, {
     13}, {98}, {99}, {14}, {15}, {126}, {130}, {17}, {18}, {39}, {19}, {
     154}, {20}, {113}, {21}, {52}, {22}, {79}, {108}, {23}, {77}, {24}, {
     136}, {25}, {26}, {137}, {27}, {110}, {111}, {28}, {138}, {29}, {30}, {
     141}, {36}, {31}, {32}, {133}, {134}, {35}, {150}, {37}, {49}, {38}, {
     71}, {40}, {41}, {60}, {61}, {42}, {102}, {43}, {44}, {91}, {45}, {66}, {
     46}, {125}, {131}, {48}, {50}, {153}, {51}, {112}, {53}, {80}, {157}, {
     54}, {84}, {55}, {56}, {85}, {118}, {57}, {87}, {58}, {72}, {59}, {
     103}, {62}, {63}, {90}, {64}, {145}, {146}, {65}, {67}, {100}, {97}, {
     68}, {69}, {96}, {93}, {70}, {73}, {88}, {74}, {119}, {75}, {158}, {
     107}, {76}, {78}, {109}, {114}, {81}, {155}, {82}, {83}, {116}, {117}, {
     86}, {104}, {89}, {92}, {101}, {105}, {120}, {106}, {159}, {156}, {
     115}, {121}, {144}, {147}, {122}, {132}, {149}, {142}, {135}, {152}, {
     139}, {140}, {151}, {160}, {143}}}, CompressedData["
1:eJxTTMoPSmVkYGBYwAADH+yh9H4cfHRxUtVTyqe2fdRyF7F8WvuXVPsG2v+U
pi9apzdau4fe8UVp+A+0+2gW/wDzWuer
    "]}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.939305291546257*^9, {3.9393053277882957`*^9, 3.939305374401141*^9}},
 CellLabel->
  "Out[219]=",ExpressionUUID->"d570b3fb-02c9-46e6-a94c-917989a3b42a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DuplicateFreeQ", "[", 
  RowBox[{"Sort", " ", "/@", " ", 
   RowBox[{"A", "[", "\"\<AdjacencyLists\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9393053811345863`*^9, 3.939305420294278*^9}},
 CellLabel->
  "In[222]:=",ExpressionUUID->"c62b0d65-975c-4d19-8223-c45daf39a19c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.939305392256549*^9, 3.939305420623744*^9}},
 CellLabel->
  "Out[222]=",ExpressionUUID->"58515b02-4d01-4df6-9cbd-fdbe261f6043"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", 
  RowBox[{"results", "[", 
   RowBox[{"[", 
    RowBox[{"7", ",", "1", ",", "2"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.939305031239159*^9, 3.939305037121933*^9}},
 CellLabel->
  "In[206]:=",ExpressionUUID->"d68b5394-77bf-40bf-9b22-0493b5940f1a"],

Cell[BoxData["PlanarDiagramObject"], "Output",
 CellChangeTimes->{3.939305037945422*^9, 3.939305148124387*^9},
 CellLabel->
  "Out[206]=",ExpressionUUID->"b3f62683-3920-498f-bd76-5c42dcfe18ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<../data/diagrams/hardgoeritz/10-strand-example-1.tsv\>\""}], ",", 
   RowBox[{"PDCode", "[", 
    RowBox[{"results", "[", 
     RowBox[{"[", 
      RowBox[{"7", ",", "1", ",", "2"}], "]"}], "]"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.939305512132299*^9, 3.939305564534096*^9}},
 CellLabel->
  "In[223]:=",ExpressionUUID->"519b1c55-0bef-427a-a42d-f741d8f443a1"],

Cell[BoxData["\<\"/Users/jasoncantarella/KnotTools/Mathematica/../data/\
diagrams/hardgoeritz/10-strand-example-1.tsv\"\>"], "Output",
 CellChangeTimes->{3.9393055715427723`*^9},
 CellLabel->
  "Out[223]=",ExpressionUUID->"db25efaa-bb6d-425b-a19d-226acfcfb84b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1362, 997},
WindowMargins->{{80, Automatic}, {Automatic, -330}},
Magnification:>1.25 Inherited,
FrontEndVersion->"14.1 for Mac OS X ARM (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"76e14896-593b-4257-98b9-519f9f5edbfc"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 174, 3, 120, "Title",ExpressionUUID->"be07c95f-9da4-4761-859e-685d5a5f65e7"],
Cell[753, 27, 315, 7, 69, "Text",ExpressionUUID->"3ae5990f-abbb-46d7-814b-48c2ecddfb37"],
Cell[1071, 36, 195, 3, 36, "Input",ExpressionUUID->"6f391f2b-c0c6-4a35-a8eb-83254acce406"],
Cell[1269, 41, 226, 4, 36, "Input",ExpressionUUID->"73354e04-0eb4-4f06-9ef8-fe090bc01b49"],
Cell[CellGroupData[{
Cell[1520, 49, 1030, 22, 215, "Input",ExpressionUUID->"65b5843a-35c7-4fab-b77e-55cef075dd76"],
Cell[CellGroupData[{
Cell[2575, 75, 559, 13, 28, "Print",ExpressionUUID->"fa3ba42b-b0f1-4562-b0b4-07ecbbb5bd82"],
Cell[3137, 90, 303, 5, 28, "Print",ExpressionUUID->"e9d60832-4897-4e6d-88d5-5de7ebbe718b"],
Cell[3443, 97, 693, 15, 28, "Print",ExpressionUUID->"18de9d59-a5d7-4459-9699-7fbe0b03c6ef"],
Cell[4139, 114, 461, 7, 75, "Print",ExpressionUUID->"e51e7e26-0c28-4608-8545-59c6776e2d59"],
Cell[4603, 123, 563, 13, 28, "Print",ExpressionUUID->"d097df6a-bea4-465c-b767-cfb40e55558b"],
Cell[5169, 138, 398, 7, 28, "Print",ExpressionUUID->"5edd7ac2-709c-49d6-b694-6710df24e075"],
Cell[5570, 147, 847, 18, 28, "Print",ExpressionUUID->"5cd8ed43-2b70-4b93-8e5d-3dce1a9dda42"],
Cell[6420, 167, 787, 18, 28, "Print",ExpressionUUID->"ba377248-98cf-44b6-9cc8-27cf8878e490"],
Cell[7210, 187, 1360, 41, 28, "Print",ExpressionUUID->"0ccbafb5-7c1b-4c01-8e03-2c29e44fa4bb"],
Cell[8573, 230, 1631, 54, 28, "Print",ExpressionUUID->"6f01750e-118b-42af-b282-89ab702512c8"],
Cell[10207, 286, 597, 17, 28, "Print",ExpressionUUID->"cd2e9d56-dd5f-4f60-9a2a-342037318a44"],
Cell[10807, 305, 596, 17, 28, "Print",ExpressionUUID->"1d6152d0-9b4f-444a-9ae0-41e2210a5292"],
Cell[11406, 324, 272, 5, 28, "Print",ExpressionUUID->"9c8c095e-8eb1-4298-a54a-d80104b8d9ec"],
Cell[11681, 331, 459, 10, 28, "Print",ExpressionUUID->"1c0117bb-9bdb-49b4-a699-70d64b566e70"]
}, Open  ]]
}, Open  ]],
Cell[12167, 345, 585, 13, 62, "Input",ExpressionUUID->"e53d11d0-4779-4e6a-bae1-c8e5886a9bb7"],
Cell[CellGroupData[{
Cell[12777, 362, 1247, 22, 62, "Input",ExpressionUUID->"e0990924-c9bd-4594-bd38-c6c7e0c0b05c"],
Cell[14027, 386, 218, 4, 29, "Echo",ExpressionUUID->"6da94e82-a97a-45d9-ae4e-6e57c24bf235"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14282, 395, 190, 3, 82, "Section",ExpressionUUID->"3db9d8d9-e556-4502-96ac-d5d1546f01ed"],
Cell[14475, 400, 199, 3, 42, "Text",ExpressionUUID->"a8c7a0bf-a9e0-4255-b386-4ed21d188b6c"],
Cell[14677, 405, 2106, 51, 164, "Input",ExpressionUUID->"b8a7a88e-bc54-4ec7-a512-5cec399f267b"],
Cell[16786, 458, 2207, 54, 291, "Input",ExpressionUUID->"68d95123-eea6-4113-874e-e2441c645064"],
Cell[18996, 514, 977, 22, 113, "Input",ExpressionUUID->"6ba88d94-ed0f-4166-b1b6-0a9b8a524884"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20010, 541, 170, 3, 82, "Section",ExpressionUUID->"91f8a5bd-5e53-4a92-a3ce-cd6e0087e106"],
Cell[20183, 546, 548, 10, 69, "Text",ExpressionUUID->"b56f6e00-1408-4f51-a40f-90fc31d91292"],
Cell[20734, 558, 949, 15, 124, "Text",ExpressionUUID->"06ad7d80-6c62-47e9-9a2f-37270691f13c"],
Cell[21686, 575, 1040, 18, 178, "Text",ExpressionUUID->"091039e7-21f0-4168-837b-258f90d73e69"],
Cell[22729, 595, 247, 6, 42, "Text",ExpressionUUID->"bfe6a127-aa75-477a-ba24-8b9132a43b0a"],
Cell[22979, 603, 214, 4, 42, "Text",ExpressionUUID->"16412b72-ff3a-4d91-8950-d1411e691d0e"],
Cell[23196, 609, 393, 7, 42, "Text",ExpressionUUID->"2fc39026-f207-4e59-90a8-8cce3366bed0"],
Cell[23592, 618, 526, 10, 69, "Text",ExpressionUUID->"cd11d62f-33e9-4d65-8acb-c3b87baf94a4"],
Cell[24121, 630, 3876, 93, 471, "Input",ExpressionUUID->"e4e0293d-2ada-4c2f-864b-f7f218f332ad"],
Cell[CellGroupData[{
Cell[28022, 727, 598, 11, 36, "Input",ExpressionUUID->"6912f65c-c928-4fd9-a07a-a0a335b50da6"],
Cell[28623, 740, 4700, 97, 56, "Output",ExpressionUUID->"2b1042fd-6fb4-42aa-8768-617f3ab83223"]
}, Open  ]],
Cell[33338, 840, 1846, 45, 138, "Input",ExpressionUUID->"e9889c46-6923-4a59-b5e5-180c87a25863"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35221, 890, 199, 3, 82, "Section",ExpressionUUID->"d6eb8151-8728-4a5d-bf65-583d2149d538"],
Cell[35423, 895, 931, 25, 62, "Input",ExpressionUUID->"596beb49-0fa4-49aa-a45f-10e29b196d83"],
Cell[CellGroupData[{
Cell[36379, 924, 245, 5, 36, "Input",ExpressionUUID->"beeb1588-eaf7-4827-a025-287889d95057"],
Cell[36627, 931, 3665, 78, 56, "Output",ExpressionUUID->"1226823f-cdf9-492c-abe9-283b2dbb2de5"]
}, Open  ]],
Cell[40307, 1012, 297, 7, 36, "Input",ExpressionUUID->"13cfadb9-dbe5-41a0-8e69-d49f2d440cfd"],
Cell[CellGroupData[{
Cell[40629, 1023, 286, 6, 36, "Input",ExpressionUUID->"515456c2-37a5-4012-a821-f2d4561f5a7e"],
Cell[40918, 1031, 126756, 2082, 459, 48873, 804, "CachedBoxData", "BoxData", "Echo",ExpressionUUID->"66ff6fb1-606c-481f-80d8-0b13efab1759"],
Cell[167677, 3115, 3892, 82, 72, "Output",ExpressionUUID->"1749f15c-76ac-4ba9-9e68-7f619f204f1b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171606, 3202, 169, 4, 36, "Input",ExpressionUUID->"7e321fcb-50d5-45b7-9691-53a911a51c3b"],
Cell[171778, 3208, 126288, 2074, 459, 48222, 793, "CachedBoxData", "BoxData", "Echo",ExpressionUUID->"7f074517-c338-4394-a891-6d4c03b405a9"],
Cell[298069, 5284, 3749, 80, 56, "Output",ExpressionUUID->"5aa0224c-85c0-42ad-bbe9-314474e66a82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301855, 5369, 455, 11, 36, "Input",ExpressionUUID->"b6d826af-b665-4a09-b888-d6e1986d08f8"],
Cell[302313, 5382, 20460, 428, 290, "Output",ExpressionUUID->"fb32b5c6-3068-42ad-b271-14587c6a7f6b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[322810, 5815, 219, 4, 36, "Input",ExpressionUUID->"b51a1ec6-37c2-4d29-b078-3e8d3d8f938b"],
Cell[323032, 5821, 20384, 427, 290, "Output",ExpressionUUID->"010d4428-f628-4c65-afd6-4479cda43c66"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343453, 6253, 503, 13, 36, "Input",ExpressionUUID->"52a06dcc-77c3-46c9-9624-ba209e7d6cdf"],
Cell[343959, 6268, 3807, 81, 56, "Output",ExpressionUUID->"e6bf4305-074c-4c8d-aff8-f1430c667ac2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[347803, 6354, 423, 9, 36, "Input",ExpressionUUID->"f650cc79-ab42-455e-a016-614f6f1e36f3"],
Cell[348229, 6365, 721, 14, 53, "Message",ExpressionUUID->"c0718427-074a-42e5-81e3-880efd9ea43d"],
Cell[348953, 6381, 4946, 83, 288, "Echo",ExpressionUUID->"a3f3d0b9-2925-4778-a4b1-f67f67511b47"],
Cell[353902, 6466, 6366, 121, 348, "Output",ExpressionUUID->"f9deb1cd-b83b-422c-b943-0c64f5be0577"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360305, 6592, 318, 7, 36, "Input",ExpressionUUID->"57116306-0412-4145-801b-72e34a2e6991"],
Cell[360626, 6601, 12312, 249, 72, "Output",ExpressionUUID->"3620e582-0359-4a93-87f1-71b9d635aeb9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[372975, 6855, 366, 8, 36, "Input",ExpressionUUID->"9a46a7e4-4670-4ce2-9fd8-cc4c8db5bbd5"],
Cell[373344, 6865, 12839, 254, 72, "Output",ExpressionUUID->"d570b3fb-02c9-46e6-a94c-917989a3b42a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[386220, 7124, 305, 6, 36, "Input",ExpressionUUID->"c62b0d65-975c-4d19-8223-c45daf39a19c"],
Cell[386528, 7132, 180, 3, 41, "Output",ExpressionUUID->"58515b02-4d01-4df6-9cbd-fdbe261f6043"]
}, Open  ]],
Cell[CellGroupData[{
Cell[386745, 7140, 299, 7, 36, "Input",ExpressionUUID->"d68b5394-77bf-40bf-9b22-0493b5940f1a"],
Cell[387047, 7149, 193, 3, 41, "Output",ExpressionUUID->"b3f62683-3920-498f-bd76-5c42dcfe18ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[387277, 7157, 497, 13, 36, "Input",ExpressionUUID->"519b1c55-0bef-427a-a42d-f741d8f443a1"],
Cell[387777, 7172, 261, 4, 41, "Output",ExpressionUUID->"db25efaa-bb6d-425b-a19d-226acfcfb84b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

